May 4, 2014
---------------
Direct onsite because I interviewed in the past and did well that time. From the time I sent my resume to interview day: 2 weeks. From interview day to offer over the phone: 2 weeks. The syllabus for the interviews is very clear and simple: 1) Dynamic Programming 2) Super recursion (permutation, combination,...2^n, m^n, n!...etc. type of program. (NP hard, NP programs) 3) Probability related programs 4) Graphs: BFS/DFS are usually enough 5) All basic data structures from Arrays/Lists to circular queues, BSTs, Hash tables, B-Trees, and Red-Black trees, and all basic algorithms like sorting, binary search, median,... 6) Problem solving ability at a level similar to TopCoder Division 1, 250 points. If you can consistently solve these, then you are almost sure to get in with 2-weeks brush up. 7) Review all old interview questions in Glassdoor to get a feel. If you can solve 95% of them at home (including coding them up quickly and testing them out in a debugger + editor setup), you are in good shape. 8) Practice coding--write often and write a lot. If you can think of a solution, you should be able to code it easily...without much thought. 9) Very good to have for design interview: distributed systems knowledge and practical experience. 10) Good understanding of basic discrete math, computer architecture, basic math. 11) Coursera courses and assignments give a lot of what you need to know. 12) Note that all the above except the first 2 are useful in "real life" programming too! Interview 1: Graph related question and super recursion Interview 2: Design discussion involving a distributed system with writes/reads going on at different sites in parallel. Interview 3: Array and Tree related questions Interview 4: Designing a simple class to do something. Not hard, but not easy either. You need to know basic data structures very well to consider different designs and trade-offs. Interview 5: Dynamic programming, Computer architecture and low level perf. enhancement question which requires knowledge of Trees, binary search, etc. At the end, I wasn't tired and rather enjoyed the discussions. I think the key was long term preparation and time spent doing topcoder for several years (on and off as I enjoy solving the problems). Conclusion: "It's not the best who win the race; it's the best prepared who win it."

None.   3 Answers

Feb 26, 2015
---------------
I first had a phone screen interview. After this, I was asked to come onsite for further interviews. I had 4 whiteboard and 1 lunch interview with the Youtube team. After this, I was told that my application is going through the Hiring Committee. Hiring committee asked my HR to find a team for me before giving any decision. I then had two phone interviews with different teams in Android. I informed my HR that I am interested in the first team. Next day, HR emailed me and said that this team no longer has an open position. I again went through the same process. This time, platform team was interested in talking to me. I gave 2 phone interviews wherein they made me write code. After their feedback, I was put through the Hiring committee again and this time I got a thumbs up from them. 1 week after that I was put through executive committee and got my offer. I had 7 other offers and my HR asked me about all of them before putting me through executive review. They gave me more than any other company I had offer from.

1 OO design/algorithms question, 2 algorithms questions, 1 system design question   1 Answer

Jul 20, 2015
---------------
The interview went seemingly smoothly, except for a couple quirks in the code on the whiteboard. The questions were way easier than I expected. The interviewers were not intimidating at all and did not try to make the process stressful. I felt like I passed and according to HR, the overall feedback was positive. My application went to the hiring committee which, in turn, rejected the offer.

They involved recursion and hash tables.   Answer Question

Sep 9, 2015
---------------
Awesome process. Very simple questions. Keep your nerves cool. Don't worry about very complex questions on the Internet. Do basics and you should be good. I screwed up two simple questions and not expecting offer. I will apply again next year .

You are given a collection of M arrays with N integers. Every array is sorted. Develop an algorithm to combine each array into one sorted array.   1 Answer

Oct 16, 2015
---------------
I was referred by a current employee and was able to bypass the phone screen. They were very flexible with scheduling and I wanted to study a bit so I scheduled an onsite (the first of two) about a month out. I received an offer for another software engineering job and upon notifying my recruiter we were able to combine the 2 hour and 3 hour interviews into a single-day 5 hour interview. At the onsite there were 4 interviews total. The first was a design question. It was intentionally severely underspecified. I had to design object-oriented data structures and an algorithm to solve the problem. Once I solved it the interviewer upped the difficulty by changing the problem parameters a but "what if the entire input won't fit into memory/on a single machine". This pattern was typical throughout the day. Two of the remaining interviews were typical algorithms questions such as those seen in Cracking the Coding Interview. The last was a distributed systems design problem with no programming. I had to design a system from scratch, focusing on scalability, reliability, and performance. Once the interview was over I had to wait about a week for the hiring committee to meet. I'm not sure how much this was sped up by already having an offer. They met and gave the thumbs up. This wasn't an offer, but according to the recruiter was almost as good as one. I then met with the managers for three teams that were potential starting teams. These meetings were only 30 minutes so it was tough to decide. I then ranked the teams in order of my preference and sent that to the recruiter. I had to wait for the compensation committee, which was about another week later (6 days I think). I then got the official offer and start project over the phone from my recruiter and via e-mail. They gave me 5 days to respond, although I'm guessing this would have been flexible. I accepted the offer after picking a start date.

3-sum problem that can be found on leetcode.   Answer Question

Oct 27, 2015
---------------
I applied for a summer internship junior year. They gave me 4 phone interviews but I didn't make it to the onsite round. In senior year they emailed me saying that I did well during those interviews and gave me an onsite interview. I thought I did pretty well at the onsite (got all 4 questions correct) but ultimately did not get the offer.

All technical questions.   Answer Question

Oct 9, 2015
---------------
I was contacted by a recruiter to interview for a software engineer position at their Mountain View headquarters. I went through two technical phone interviews and was invited for a day-long interview at the Googleplex. The entire process for me was about 4 months from the initial contact to the onsite interview. I was given about 2 months to prepare for the first phone interview. In the end, I did not get the job. But getting the chance to review all the CS stuff I've learned over the years was extremely valuable. I also picked up some things as well. If you decide to go through the interview process, I recommend you take it seriously. I believe I am a much better computer scientist as a result.

p, np hard, np complete questions couple of data structures questions   Answer Question

Oct 13, 2015
---------------
I got the interview through employee referral. The first round is a phone call asking some backgrounds and project experience. The second round is 45 min phone interview of technical questions. The on-site interview took a day. 4 rounds of 45 mins interview. I didn't do well in the last of the 4 rounds.

No Question
Oct 18, 2015
---------------
I was back in China when I interviewed for MTV position. They setup 4 rounds of Chinese interviews and 1 round English interviews. Most of questions are technical questions to test programming skills and algorithm design. Once I passed the interview process, they offer H1B visa to hire me in US.

No Question
Sep 17, 2015
---------------
about 2 months long telephone interview and then 2 onsite interviews the telephone interviewer asked basic questions and assessed your personality the onsite interview was more technical and asked questions that were more difficult

No Question
Jun 30, 2015
---------------
I was contacted by a recruiter who set up a technical phone interview for me. The interview question was average in difficulty, I didn't cover a corner case and when I asked the interviewer to add code to cover a specific corner case, he said I was out of time. I didn't get to move on to a second interview. I feel my answer was good enough for screening purpose (you'd assume first phone interview is the screening interview). Anyway, I would say as humans, talking over the phone while coding, we might not be in the best state to cover all the cases especially if it's just the screening call.

Implement a queue using two stacks   Answer Question

Oct 17, 2015
---------------
Two rounds on campus interview. For each round there are two algorithm tests. Nothing about resume or interest. I first waited in the hall of the career center, until a google hiring staff called me in. Then I was led to a separate room with a white board to do the coding test... Same thing repeated right after this round.

Why do u want to work for google   Answer Question

Oct 7, 2015
---------------
I like their work altitude, really efficient and nice. The whole process is good. Actually this is my first interview and I really appreciate they give me the chance to show myself and learn from the process. I hope I can get the offer and work for this famous company.

Given a social network as a graph, return the closest path to a given node from a given node.   1 Answer

Oct 21, 2015
---------------
Applied online through University Recruiting, also emailed the recruiter in charge of our school. First round of phone interview, typing on a google doc while holding a call. The interviewer was very friendly and patient, and helpful in terms of giving hints. Overall, it was a great learning experience.

Round 1 Given a bitmap, use a quaTree data structure to represent the bitmap. The maps are all squares with black or white pixels and the length of the map is 2^n (you can always divide the map into 4 smaller parts). Then give you a root node of a quaTree, calculate the total black pixel in this map. Follow up: Given two root node, generate the intersection of these two maps.   1 Answer Round 2 LeetCode Triangle Given a triangle of integers, find the maximum path sum from the top point to the bottom. Follow up: Print out the path of the maximum path   2 Answers

Oct 13, 2015
---------------
That is an On-Campus Interview at New York. 2 rounds back to back interview. In each round, you face a interviewer in a small room. You may choose to write your code on white board or white paper. My interview provides me with his laptop so I can code on a google doc on his laptop.

I signed an NDA and will therefore not share my interview questions. However, there are plenty of online resources and I found their advice to be accurate. Not too difficult!   Answer Question

Oct 10, 2015
---------------
First, I have not actually heard back yet, but I had to fill out the offer field - it means nothing yet. Overall, the interview process was smooth - I would say that I enjoyed both of my phone interviews. I heard back about scheduling interviews only a couple hours after I applied, which may be due to me emailing my school's Google recruiter and a former TA who has worked there the past couple summers putting in a good word for me with the recruiter. Google's interview process is overall pretty well-documented and organized I think.

There were two questions per interview, one that tests more coding, and one that tests more problem-solving skills.   Answer Question

Sep 23, 2015
---------------
I got asked through for two rounds of back to back phone 45 minute interviews, followed by one other phone interview. During these interviews, the interviewer called and we went through a Google doc. Usually, there was one or two programs I had to write with an after-discussion on time complexity, etc. I also had time to ask questions. They didn't ask about things on my resume/ projects, everything was coding.

Given a social network graph (nodes = people, edges = friendships between people) and a starting person, print the level of friendship for every other person with that person. That is, print the minimum number of "hops" (edges) to get from the start person to every other person.   Answer Question

Oct 22, 2015
---------------
Pretty straightforward interviews, 2 X 45 minutes, both within an hour of each other. I thought I did really poorly, but I still got an offer. I guess it's not about how perfectly you can write code on your first try, but more about explaining your thought process and communicating clearly. The questions weren't easy, but I don't think they are meant to be.

Questions on Arrays, Trees etc. Brain Teasers   Answer Question

Oct 19, 2015
---------------
I applied online after talking to a recruiter at my university. Within a few days, I got an email about setting up an initial phone interview. The call was awkward and did not go well (I forgot a lot of basic material), and within a couple days I got an email saying I would not be moving forward.

No Question
Oct 19, 2015
---------------
Two technical interviews of 45 minutes each. The first interviewer asked three questions. one was a brain teaser, one was a data structure based question and the other was a java programming questions based on handler.

No Question
Oct 13, 2015
---------------
This was second time I'm applying, after taking help from internal referral .. I had to ask (beg for - may be) get interview scheduled. Last time(>year back) I wasn't able to solve something in C or I wasn't able to write code at all in C. I have explicitly said I'm good with python .. ok with (5/10) in C/C++. I was asked just C programming question. Same thing (AND mostly) SAME question was asked. Funny thing is write in C (like I've said I'm C expert) *NOT* at all algorithmic question. So much surprised with HR telling me -- Last time you weren't able to code, when do you want to schedule? Me: Next week (been preparing for 5 months) She: (rhetorical) Really? Much disappointed as review suggests completely opposite - you can get interview every 6 month or no concerned with language or data structure/algorithm is primary thing to focus on.

How do you split given string into words.   1 Answer

Oct 23, 2015
---------------
the interview is just write code on Google Docs (phone interview), two hrs, 45mins each, back to back. Two interviewers will give review to hr. Take 2 weeks to process

Reverse a linked list in k chunk   Answer Question

Oct 7, 2015
---------------
Got an phone interview through online application. I was first asked to talk about the projects that I've worked on and my areas of interest. The interview questions were easier than I expected, but I had some trouble picking good test cases. Ended the interview with some questions about Google.

linked list   Answer Question

Oct 8, 2015
---------------
I was contacted by a recruiter looking for recent college graduates. I sent my resume to the recruiter, and soon had a technical phone interview set up for two weeks later. The recruiter sent me a couple documents with information on how to prepare, but they are very broad and not exceptionally helpful (maybe they are more helpful for the on-site interviews). My phone interview was 45 minutes long and consisted only of three coding questions, which I had to provide solutions for in a shared Google Doc. The questions were a little bit out of the blue for me, and since this was my first technical interview, I was largely unprepared. I highly encourage working on coding challenges, like those on TopCoder or CodeChef in order to prepare, since my interview didn't involve problems that involve "standard" algorithms and techniques (I didn't need to code up a quicksort or Dijkstra's or use dynamic programming, etc.) so it's good to have preparation in a diverse mix of problems. The recruiter called two days after the interview to say that they were not going to move forward.

Signed NDA so no details here. But I can tell you if you review fundamental CS concepts(sorting,graphs, trees,etc) you should be fine. Just make sure you really understand what you are doing. I don't think they would ask you crazy questions on obscure data structures. Just basics problem solving skills. Also try to be original and honest when it comes to nom-technical questions, such as "why Google?". Don't try to be unique and make up some weird reason. Just tell the truth.   Answer Question

Aug 25, 2015
---------------
A Google recruiter emailed me out of the blue. After three times of declining (1 month) since I wasn't that interested, I was contacted again so I thought "heck, sure, I'll take an interview". One week later the flew me to Mountain View for the on site. (Gotta admit Google is very generous about the whole travel arrangements! Free hotels, flights, meals, car rentals, etc) The whole experience was very pleasant for the most part. Got the offer 1 week later. The entire process, from initial phone screen to when the offer was made, took two weeks. One thing I'd like to call out and hopefully someone from Google recruiting/interviewing committee would take note is that they perhaps could do a better job at training their interviewers, not just from a technical standpoint but also from other nom-technical ones, especially on "normal" common sense and human interactions. I know we here are all nerds and as such could be a little awkward, which I totally understand. But one particular interviewer made me extremely uncomfortable during the interview since he kept staring at me like there had been something weird on my face and made excessively long eyes contact. I had to look away multiple times. Even when I was explaining my solution which is ON THE WHITE BOARD, he still stared at my face. The person's questions were good and had indept follow-up. So while I'd say he is a good technical interviewer, I still couldn't get over the awkwardness. This is no doubt thr weirdest interview I've ever had. Another minor thing I forgot to mention is that Google make you stay with your host at ALL TIMES. Even when you need to go to the bathroom which could be right next door, the host would follow you and stand at the door waiting for you, which is a bit awkward when you're a woman and your host is not.

Given an array of integers, find the length of the shortest subsequence that sums up to over a certain threshold.   7 Answers

Sep 11, 2015
---------------
Onsite consisted of 4, 45min interviews in which interviewers asked questions about graphs and string manipulation. Lunch is with another engineer and a chance to ask questions and learn about campus. The interviewers did not ask about background or past experience and went straight into the interview question. Also, there is not much time at the end to ask them questions about Google.

Q1) There is an array of 10 integers. I will give you the start and end index of a range and calculate the sum of all numbers within that index range. Do all validations necessary. Will your code work if the array has 10 million integers?   Answer Question Q2) Design a game of tetris. What programming classes will you have? Only look at the programming side and do not worry about the graphics programming.   Answer Question

Oct 9, 2015
---------------
The interview process included two 45 minute long technical interviews. The interviewers were well prepared and helped me throughout the process. I asked a lot of questions regarding on problem they provided and I felt I did pretty well. Towards the end, they gave me a glimpse on what products the were working on, which gave me a very good idea of the work culture. Overall, my interview experience was very positive.

Matrix - given a nxn matrix, print the matrix in diagonal from left to right.   2 Answers

Sep 6, 2015
---------------
Screening was simple and much more like a conversation with just anybody. Phone interview was bad. The engineer never provided hints or clues and the libe was dead on his side. The question was simple, but since he was late, he didnt even provide the time promised.

They asked me matrix operation questions and a tree operation question. To prepare for such questions, the easiest way is to start preparing with LeetCode and other online judges as early as possible. A two-week rush will not bring very good result. Some project background was asked about but there was no deep discussion.   Answer Question

Oct 5, 2015
---------------
I got two rounds of telephone interviews, each 50 minutes, finished in a total of 2 hours. It seemed that they would have many algorithm questions, but I had time only enough to work out 3 of them. Other than working out the problems, the interviewers were more interested in knowing how I approached the problem, how I could discuss my thoughts with them, how well I knew about its time and space complexity, than how fast I could code or how perfect the code would run on any machine. Preparing a good headset for phone interviews is extremely important because with both hands typing you won't have a hand to hold the phone for talking.

No Question
Oct 5, 2015
---------------
I had applied online for a full time Software Engineer position. I got contacted a week after applying, with the request of an on campus interview. There were 2 on campus interviews, each of 45 min length. The interviewers were extremely nice/helpful.

No Question
Oct 1, 2015
---------------
After someone referred me for a entry level full time position, I was contacted by a recruiter. We scheduled a phone chat in which she explained more about the role and interviewing process and answered any questions I had. She was very nice and helpful! Then, she scheduled my for an interview on Google Hangouts with a software engineer at Google, at a convenient time. The interviewer was nice and all the questions were technical. It started with a more simple one and then progressed with more complex questions, trying to optimize the code. The interview was 45-minute long and at the end I had the chance to ask any questions I had. The interviewer guided me when I was stuck with a question and was interested in the thought process, as well as in checking if I understood the advantages/disadvantages of using one method or another.

They ask you to sign an non disclosure agreement about the interview questions.   Answer Question

Sep 30, 2015
---------------
Contacted by a recruiter who saw my LinkedIn profile. Very brief phone screen with an HR representative, followed about a week later by a technical phone interview with a Google engineer. He called about 7 minutes late, had a very strong accent, was using a phone with a poor connection, and did not seem to be focused on the interview (I could hear him getting Facebook messages in the background). He also presented several things incorrectly, such as initially calling a list of numbers a set, which implies no repetitions, but later changing his mind to just a list. I eventually got the question right, but it took the entire length of the phone call and I believe there was another question that he wanted to ask. He also did not give me the 7 extra minutes at the end and kept reminding me that we were almost out of time. A few days later I got a call from my recruiter telling me they decided not to move on with the process. She gave no useful feedback and did not ask for nor seem to care about my feedback. All in all, I thought it was a fairly unprofessional experience and will probably never interview with Google again.

Find the difference between two unsorted sets (lists). Interviewer eventually revealed that he wanted a solution in O(n) time.   1 Answer

Sep 25, 2015
---------------
This was almost smooth. Questions was no. One thing that I observed about Google - if you solved all problems it is far from positive decision - this has to be almost flawless.

Why do you want to work at Google   Answer Question

Sep 28, 2015
---------------
I first got in touch with a google recruiter via LinkedIn, and from there I was scheduled for a phone interview. This interview was a 45 minute technical interview in which I was given a coding problem and had to write code on a shared google doc while speaking out my thought process with the interviewer over the phone. Once I passed this, I went into the New York office for a series of 4 in person 45 minute interviews. Unfortunately my first interviewer showed up 30 minutes late, which threw off my schedule. But each of these 4 interviews followed the same pattern as the phone interview except that now I was coding on a white board. Overall the interview process was great and has been a good experience for me. Unfortunately I fell short of an offer, but it was still a pleasant process.

I won't give a specific question, but they asked things regarding recursion, dynamic programming, and other common computer science topics   Answer Question

Sep 11, 2015
---------------
First off I'll say that there was a huge language barrier between my interviewer and I. He did not speak fluent english by a long shot. The choppy google voice connection mixed with him being fairly quiet didnt help either. He asked me questions like "What does it mean" when pointing to pieces of code, which I answered by explaining what that line did, which was not what he was looking for. In the beginning he also said to ask him any clarifying questions along the way, which I did. I had to repeat myself multiple times and he had trouble answering them in a way that made much sense to me. They are definitely looking for CS Fundamentals. Algorythms, data structures, runtimes, etc. You code in a Google Doc and they dont allow you to run or test your code, so you have to be pretty confident about writing the problem out correctly top to bottom. They didn't care at all about my practical (real world) software development experience, and instead only focused on academic CS fundamentals, as listed above. I even specifically asked if my industry experience was relevant, and they said no. So, in a way, I dont think it would have been a good fit for me anyways.

What is the runtime of {popular search algorythm}? Explain why.   Answer Question

Oct 5, 2015
---------------
Applied online and got a response within a week. The first interview I was asked to find the smallest node in a BST that falls within a given range. I coded a O(N) solution but was later suggested to optimize it to O(logN). The next round asked me to find common elements in two arrays. Nothing too difficult.

find the smallest node in BST that falls into a given range find intersections of two arrays   2 Answers

Oct 21, 2015
---------------
Fairly standard onsite, 3x 45 minute whiteboarding tech interviews in the morning, lunch with a different googler, and then 1 more whiteboard tech interview in the afternoon. The interviewers were pretty cold, with a strong focus on writing down what I wrote on the board. Not a ton of discussion, except for the last one.

Given a sequence of intervals on the reals, write a program to calculate the total amount spanned by those intervals. Now do it in 2D.   Answer Question

Oct 11, 2015
---------------
Google reached out to me after finding my resume in the GHC resume database. The process took around two weeks. I had two phone interviews while coding on a Google Doc before receiving an offer. They were very quick to get back to me. First interview had a little about me telling about myself before diving straight into coding. Second interview was only coding. Both interviewers were very good and responsive. Phone interviews were back to back. I did find it strange that I was never asked to do an on-site interview.

DP that involved matrices and graphs   1 Answer

Oct 27, 2015
---------------
Had a phone call with a recruiter. Question was OOP. Got a result back around 2 weeks after, proceeded to on-site interview. On-site was pretty challenging, a DP question to start off, then a design question, lunch with a Google employee, question about characters, and a really hard DP question to end the interview with. No offer :\

Two technical questions that were not too difficult   1 Answer

Oct 6, 2015
---------------
Interviewed in-person at my school's campus after about 4 weeks from initial contact. Had 2 back-to-back interviews. Then waited 2 weeks before hearing back. My interview experience was really defeating and not positive, but from what I hear, Google is notorious for having some really inconsistent interview processes (since it is so large). I know they don't try to make this the case, but that's just how it happens. Best of luck to you if you attempt - it's all about luck with who you interview with. This was my second time applying for this position (the first was similarly not great, but I have some friends whose interviews went really well.

No Question
Oct 7, 2015
---------------
Quick phone sync, very simple questions and explain interview process. Then 45 minute interview with software engineer. My software engineer decided that he had more important things to do and got off the phone for 10 minutes, coming back to say, "sorry someone came in my office." At that point I no longer wanted to work for Google, and didn't take it seriously. He was nice enough but completely disrespectful. I did not get offered a trip to Mountain View.

Imagine an employee structure. How would you find the lowest common manager given two employees? Code the structures and functions required.   Answer Question

Oct 24, 2015
---------------
One phone screen with the recruiter and a technical phone interview. Entire process was great until the technical interview. Dude was a total @#hole and didn't care about my personality or anything.

Code rand(min, max) with a uniform distribution   Answer Question

Oct 9, 2015
---------------
The process was good. Interviewee helpful and clearly support my answer. And I was little bit nervous and our communication was good. It was my very first interview and Google is pretty nice.

Show me one image and implement some graph algorithm   Answer Question

Oct 15, 2015
---------------
It last for 45 *2 minutes with two interviewers. At first, I am nervous about the coding problems, but it turns out a great experience. There is no other interview question except coding.

cycle linked list, ambigram   Answer Question

Oct 18, 2015
---------------
Applied in the last year and didn't finish all of the process so reapplied again. This time talked to HR then scheduled a technical interview, but stop there. The phone interview was on phone and the sound quality was very unclear. Did some coding questions using some online cooperative tools.

question about increment number represent by an array   Answer Question

Jun 17, 2015
---------------
Applied online and got back from a recruiter within an hour. Had a conversation with the recruiter a week after and he said I can go straight to the onsite for interviews. I was interviewing many other places parallel so I scheduled the onsite two weeks after the day I spoke with the recruiter but they don't seem to care how quickly you take the onsite so choose time to give yourself enough time to prepare. There were five onsite interviews with one lunch with a developer (I heard that the lunch is not an interview). I had to write solutions on whiteboard for all of questions so be prepared. I never heard of any of questions they asked but studying leetcode and interview books helped me figure out ways to solve algorithm questions. All of the interviewers were nice and the interview felt like I'm solving a real work problem with a coworker. Think about time complexity and efficiency at all time when you come up with a solution. It took less than 2 weeks to get an offer. Think this can be different for different people.

Algorithm questions   Answer Question

Aug 2, 2015
---------------
Applied online and was notified two days later that in the coming weeks I will have an in person interview while Google will be on my university campus. Two separate 50 minute interviews with two different engineers. Asked typical interview questions, one which caught me off guard.

Write a function to add a set {x, y} to a set of disjoint sets in a certain pattern.   Answer Question

Jul 28, 2015
---------------
The recruiter called me and setup an initial phone interview. The interviewer called me and introduced himself. He was difficult to understand because of his heavy accent. Then he asked me a simple problem and asked me to immediately code it on the online whiteboard. The online whiteboard editor was really horrible and i struggled to type my code in. After I somehow finished typing(all the while not giving me a break to think about the problem but to keep typing and talking), he asked me its performance. Then i suggested the use of a different data structure to get better performance. Basically the interview was horrible and not what you expect from google. On top the problem was an easy one, which needed some time to think before coding(which was not encouraged). Not what you expect from the best company in the world.

stream of num   Answer Question

Sep 25, 2015
---------------
I was contacted by a recruiter in May for full time opportunities. I had interviewed before for an internship and January but I did not get an offer. The recruiter told me that she found my resume in their database. Since I wasn't prepared to interview at that time, I asked my recruiter if I can give my phone interview in July. The recruiter agreed and asked me to remind her in June. I reminded the recruiter in June and I was scheduled for a phone interview in July. The recruiter gave me lots of topics to prepare. They mostly covered all the basics of Computer Science I studied in my undergraduate and graduate school. The phone interview took place using a shared Google Doc. I was asked 2 pretty simple questions which I coded and tested within 30 mins. However, there was a huge communication gap between me and my interviewer. The interviewer was not a native English speaker and was not able to understand my explanations. I was pretty disappointed as I thought that I messed it up even though it was no fault of mine. (Note: This was the only negative experience throughout my process and it was completely overshadowed by the positive experiences later). The recruiter called me the following day and told that they wanted me to have a second phone interview as the first interview was inconclusive. I scheduled the second interview a week after. This interview was also on a shared Google Doc and my interviewer told me that the interview will be in two parts, one about CS fundamentals and the second would be some coding. For the first part we did not use the Google Doc and I was asked many questions about Data Structures, Algorithms and Complexity Analysis. The questions will seem very easy if you are well prepared. The coding question was also pretty simple. Two days later I was told that I have cleared the round and they want to schedule my on site interview at Mountain View. I scheduled my interview a month later and the recruiter gave me a lot of material and links to refer for my preparation. The recruiter was extremely helpful and she even wished me luck a day before my onsite. The onsite consisted of 4 technical interviews and a lunch with an engineer. The lunch was not evaluative. All the 4 interviews were white board coding and they tested my coding, algorithm and basic computer science skills. The interviewers were extremely nice. At the end of the day, I was feeling very happy with the level of discussions I was able to have with the interviewers. My recruiter called me about an hour after my last interview to inform that she had already received a couple of interview reviews and they look pretty positive. 3 days later, my recruiter told me that she received all the interview reviews and the comments were very positive and that she would be sending my package to the hiring committee. I heard back from my recruiter about a week later that the hiring committee has approved my application and it will now go for compensation and executive review. A week from there, my recruiter scheduled a Hangout call with me where she explained my offer. :) Even though the entire process was spread over months, it was a really pleasant experience. My recruiter was exceptional and she replied very promptly to all my emails and kept updating me regularly at every step of the process. Now I am looking forward to join Google the coming year once I graduate.

Given a list of int&#039;s where each number exists twice, except one, find missing duplicate in the fastest possible time.   2 Answers

Sep 16, 2015
---------------
I was an intern converting to full time. I had already done some interviews to get the internships, but they require two more interviews to become full time. Pretty straight forward process. I basically told them I was interested in full time and they gave me two technical interviews before my internship was over.

No Question
Sep 9, 2015
---------------
Prior to this round of interviews, I had 3 technical phone interviews back in January that allowed me to proceed directly to onsite this time. On site I had 4 technical interviews where I wrote code on a whiteboard, 1 interview discussing my PhD research and how I could apply it and my skills to Google, and I went out to lunch with another employee so I had the opportunity to ask questions about the culture, projects, environment at Google. Overall experience was good. All interviewers were very nice and if I was stuck, most knew how to give a hint by asking a question or providing an example that my solution may or may not handle. Recommendations: Of course, brush up on all your coding and algorithms, and practice writing on a whiteboard if you can. Also, be sure to optimize your whiteboard space as you write! Make sure you go in there knowing how the work and experience you have done could apply to Google. For me, my interviewer and I never seemed like we were on the same page so this could have been hurtful to me. Downside: I asked my recruiter for any kind of feedback as to why I wasn't made an offer and so that I could improve my skills, but she did not give me anything.

NDA, but typical linked list, array, and string manipulations involving sorting and searching, and one question focusing on computer architecture. Asked to optimize for time and/or storage and to discuss the trade offs.   Answer Question

Aug 2, 2015
---------------
Ran into the foobar program while searching for a programming related term. After passing several levels, was asked if I'd like a recruiter to contact me. Recruiter followed up and asked for resume. Some time later, was invited for an on-site interview. On-site interview was very well structured a consisted of several coding tests conducted by separate Google employees.

Coding tests. Unable to disclose any specifics.   Answer Question

Aug 26, 2015
---------------
Overall it was a great experience. I applied online and received a response from a recruiter two days later. The whole process took about 3 months and consisted of one phone interview and five on site interviews. The questions mostly covered algorithms and data structures with some design questions. I was also asked how I would test my solution the each problem.

How would you test an application like the Unix cron utility?   Answer Question

Aug 22, 2015
---------------
Phone interview. 2 questions, quite simple. Print every tree paths from root to leaf. Just use recursion way to do that. And the second one is to print good number.

Asked about time and space complexity about tree paths question.   Answer Question

Sep 2, 2015
---------------
The process was similar to others. I was able to skip the phone interview and went directly on-site. They had an event planned out for all the interviewees that day, so the overall interview experience was good. The recruiters I worked with were great and helpful. They were able to assist me in everything I asked. There were 4 technical interview sessions, 3 of them were fair but one of them was very unexpected and caught me off-guard. I was told that half of my interview was going to be about front-end stuff, since that's the role the recruiter said they are trying to fill. But none of them were, and one even asked very low-level stuff.

One of them asked me about the classes I took in college since I think he went to the same university. He then went one by one and asked me questions about the classes I was able to say. He asked about cpu cycles and bunch of other low-level stuff.   1 Answer

Sep 4, 2015
---------------
Applied online fresh college grad position. Recruiter contacted me very next day. Two phone interviews which were both 45 min and technical. Asked about discrete math, algorithm design using arrays and system design. Called for full onsite interview. Full day 5 interviews and lunch. Asked about algorithm design, classifier optimization, background, system design, DP etc. All interviewers were helpful and friendly.

Algorithms, optimization of classifier, recursion, DP   Answer Question

Sep 4, 2015
---------------
Pretty good experience. Recruiter got in contact with me and told me about the position. Did one phone interview so far. Have onsite interview left to do. Nothing much else to say. Nothing much else to say. Nothing much else to say. Nothing much else to say. Nothing much else to say. Nothing much else to say. Nothing much else to say. Nothing much else to say. Nothing much else to say. Nothing much else to say. Nothing much else to say. Nothing much else to say. Nothing much else to say.

Basica two algorithm questions   1 Answer

Sep 14, 2015
---------------
I was called by an HR to go on site. It has four 45 mins interview, and a luncn with one of the engineers. Questions are fair, nothing strange or totally undoable.

One thing is that the HR always ask if you have competing offers.   1 Answer

Sep 12, 2015
---------------
Preliminary interview with 1 interviewer ~1 hour. First he asked me about a project I did and then a coding question. In the coding question he added some more difficulties to the question until its final version I described.

Given a string which only contains lower case you need to delete only the repeated letters only leave one the resulting string should lexicography as smallest. i.e. bcabc delete the first b and first c   3 Answers

Sep 26, 2015
---------------
During the technical phone screen, the interviewer asked a couple conceptual questions first that I had to talk through and then went onto the coding part which seemed to be the main part. It was hard to understand the interviewer's accent during the interview and I had to ask him to repeat himself but overall he was friendly and it was a positive experience.

Graph Question   Answer Question

Sep 24, 2015
---------------
On site interviews consisted of 4 45 minute interviews and an hour lunch. The entire flight, hotel, and other expenses were all paid for. The interviews questions were quite difficult, but not so difficult that I could not see any way to solve them. Unfortunately I got thrown off by one of the first questions, which sort of put me in a bit of a stink for the rest of them.

Implement a readers-writers lock using mutexes and condition variables.   Answer Question

Oct 13, 2015
---------------
Phone Screen, followed by five back to back technical interviews with a one hour break for lunch. All interview questions were algorithm and implementation questions with no domain specific or esoteric language questions. Best advice for preparation is study an algorithm text book and be familiar with popular problem classes in CS.

What is an interesting or difficult to implement bug/feature that you are proud of?   Answer Question

Jul 16, 2015
---------------
Interviewer was rude and condescending. I didn't like how he was drinking a beer during the interview and had his feet on the table. I think he didn't have much respect for me as a candidate and I disliked that a lot. I understand not everyone is professional, but respect is still important.

Are you a strong coder?   1 Answer

Jul 15, 2015
---------------
The process was just as I had read about. I was contacted by a recruiter through email. I had an initial phone screening with the recruiter. Then a technical phone interview with an engineer. I unfortunately didn't make it to an on-site interview.

What products would you want to work on? I wasn&#039;t expecting this and just babbled off a list of all of their products instead of picking out the ones that most interested me.   Answer Question

Jul 2, 2015
---------------
Phone Screen consisting of basic algorithm questions, and a few questions about your background and if you clear it --a invitation onsite. Onsite consists of back-to-back algorithm rounds (4-6), with a lunch Break. Lunch is a good time to ask about working at Google. The process was very smooth and Google was very prompt in their responses.

The questions were what you expect of a standard programming interviews (DP, trees and other data structures). Make sure you have extensively reviewed algorithms before you attempt the interview.   Answer Question

Jul 22, 2015
---------------
I interviewed with the Google LA office in Venice. Process was fairly quick. Recruiter contacted me by email and set up a technical phone interview. Phone interview was with a software engineer and it was a data structure/algorithm question (basic question was to remove duplicates from a list of strings). It was about 45 minutes. Engineer sounded friendly and asked me to optimize the solution. I thought it went well. After a couple of days, recruiter called me to setup an onsite interview. You know the drill. Google Onsite consists of 5 interviews - 4 coding interviews and 1 design interview and a lunch session (you will need it to recharge between coding sessions). The onsite interviews were more difficult than the phone interview. My only tip if you really want a job at Google will be to practice data structure and algorithm questions... especially tress and graphs. 3 of my coding interviews were trees and graphs questions. The "Programming Interviews" book is pretty useful to brush up on these concepts and similar questions. I thought 3 of my interviews went well, the other two not so good. It all depends who you get to interview with also. One interviewer constantly interrupted me as i was writing code on the board, and repeatedly asking me to keep revising my solution. I ended up not having enough time to complete it.

You are given a set of unsorted strings to work with. Construct a program that will suggest autocorrect words as they are typed. (the unsorted strings are the valid words).   2 Answers

Sep 2, 2015
---------------
Purely algorithmic. 5 interviews, 45 minutes each and a lunch interview. The first problem was a graph search problem solvable using DFS and knowing about disjoint sets. Second problem was a linked list problem. Third problem was a data structure problem. Fourth problem was a string problem. Fifth problem was geometry/area/collision detection.

Given a string &#039;aaabb&#039;, can you rearrange the string such that no 2 similar letters are adjacent to each other.   Answer Question

Apr 26, 2015
---------------
A 3rd party staffer contacted me after a Google coding challenge. After getting to know what I was interested him, he found an open position for me and forwarded me to a Google staffer. The Google staffer set me up with a phone technical interview with another one of the employees.

Return the max k numbers from an unsorted integer array. Each number in the array is in the range [0, 10000).   8 Answers

Jul 26, 2015
---------------
Very boring overall, culture fit interviewer seemed disinterested and out of touch with the place. One interviewer prepared a question based on Java and didn't want to ask it when I said I was better at C++, even though I was prepared to try it. Then he made up a question on the spot, which was a poor one.

Design a locking mechanism for a distributed syste are the valid words).   2 Answers

Sep 2, 2015
---------------
Purely algorithmic. 5 interviews, 45 minutes each and a lunch interview. The first problem was a graph search problem solvable using DFS and knowing about disjoint sets. Second problem was a linked list problem. Third problem was a data structure problem. Fourth problem was a string problem. Fifth problem was geometry/area/collision detection.

Given a string &#039;aaabb&#039;, can you rearrange the string such that no 2 similar letters are adjacent to each other.   Answer Question

Apr 26, 2015
---------------
A 3rd party staffer contacted me after a Google coding challenge. After getting to know what I was interested him, he found an open position for me and forwarded me to a Google staffer. The Google staffer set me up with a phone technical interview with another one of the employees.

Return the max k numbers from an unsorted integer array. Each number in the array is in the range [0, 10000).   8 Answers

Jul 26, 2015
---------------
Very boring overall, culture fit interviewer seemed disinterested and out of touch with the place. One interviewer prepared a question based on Java and didn't want to ask it when I said I was better at C++, even though I was prepared to try it. Then he made up a question on the spot, which was a poor one.

Design a locking mechanism for a distributed system   Answer Question

Jul 14, 2015
---------------
I was contacted by a Google recruiter based on an internal referral from an ex-colleague. Since I already lived in the Bay Area and (apparently) my referrer did a great job talking me up, I was allowed to skip the phone screen stage and proceed directly to the on-site interviews. I went through 5 interviews (45 minutes each) on site, divided as follows: 3 on coding and algorithms, 1 on object-oriented design, and 1 on high-level system design. I also had lunch (1 hour) with an engineer, where I got to sample their famous free food and talk informally about life at Google. Like many other folks, I came in expecting very difficult and brain-warping questions. But to my pleasant surprise, none of the questions were particularly hard at all. The whiteboard coding and object-oriented design problems were really straightforward, very similar to the types of questions you'll get asked at most other major Silicon Valley tech firms. The system design question was a bit trickier, but it was ultimately just an open-ended discussion which felt pretty similar to real-life engineering design discussions that I do frequently at work. I definitely got the feeling that they don't care so much whether you "solve" the problem per se, but rather they focus more about how you analyze and approach the problem and how effectively you engage the interviewer in communicating your ideas. Personally, I really enjoyed all my interactions, and felt very engaged and energetic throughout the entire on-site interview day. After the on-site interviews, I received a call the next day from my recruiter, who told me that the feedback looked good and that I would be moved to the hiring committee stage. Within another three days, I was told the good news that I'd cleared the hiring committee (supposedly with flying colors, although perhaps the recruiter was just trying to flatter me!). They then checked my references and asked for details about my current compensation and competing offers. Finally, it took another week after that to do the team matching and receive the formal offer.

Can&#039;t disclose due to NDA. But as mentioned above, I did 3 coding interviews, 1 object-oriented design interview, and 1 high-level system design interview. The coding questions were of just average difficulty; I would say they are no harder than the types of questions asked at most other major Silicon Valley tech firms. Also, one of the coding interviews involved a few knowledge-based questions on Java (which I'd told my recruiter was my most familiar programming language--so they do seem to do some verification of your claimed expertise).   Answer Question

Aug 20, 2015
---------------
I got contacted by Google through Google Foobar, then applied on their website for a Software Engineering Intern position. There was one phone call with a candidate review associate, and then 2 45 minute technical interviews over Google Hangouts. Both interviewers were nice, but the microphone quality varies between interviewers, which can interfere with communication. The process took roughly 8 weeks.

Under NDA so can't say, but having a solid CS foundation will help.   Answer Question

Aug 31, 2015
---------------
Got contacted by google to come in for an interview. Overall process was fairly quick and hassle free. I got many resources to help prepare. I had 5 technical interviews over the course of the day. Everyone was fairly nice though some seemed very adverse to small talk. There was lunch provided where I got to talk with one of the employees about the company which was nice. The recruiter was amazing and really gave me good feedback after the interview process though I heard this is actually uncommon

Given that you have a with an even number of points, how do you find two points that equally subdivide the graph   Answer Question

Aug 31, 2015
---------------
I had interviewed earlier with google but didnt get through the phone screen so after couple of months the hr contacted back again to see if I was interested and she spoke over the phone and set up a interview in 2 weeks . Interviewer called me and asked about my current job and asked only one question

Given an integer array shuffle the elements in the array such that no two elements are in same place   2 Answers

Sep 2, 2015
---------------
I was in the first round of phone interview. Given a algorithm question which seems easy but hard to solve. Tried different ways to approach but failed at the end. The interviewer seems not satisfied. No response after that. It is hard to figure out ways to solve in that time period, and the interviewer suggest it could be solved in a better way than brute force approach.

Given a young tableaux. Figure out how to sort elements.   Answer Question

Aug 22, 2015
---------------
Contacted by a college recruiter half a year before I graduate. An informal chat followed by several technical interviews over the phone. The process started after three months after the recruiter contacted me, but the process in general was moving very fast since the first round.

A lot of string manipulation problems.   Answer Question

Aug 20, 2015
---------------
One day, 5 interviews (40m each). Everyone was really nice. I went to the office. in the middle there was a lunch break and I was teamed with a googler. lunch is tasty. the recruiter I was in touch with through the process was very transparent and helped me look for a relevant team for my interests.

most questions required the use of a hashmap and knowing how to compare strings, substrings, and permuted strings. I implemented a flood fill to answer one of the q&#039;s. Changing bases is a good question to review.   1 Answer

Aug 26, 2015
---------------
The whole process at Google was very enjoyable and moved pretty fast. I unfortunately did not move on, but my recruiter and interviewer were very polite and easy to work with. I reached out to Google going through the website in the summer for New Grad Software Engineering and was contacted by a recruiter a few days later. She set up an interview for that next week and then followed up about a week after my interview to let me know the feedback.

Something about reading from the disc and optimizing the latency of the data read/writes.   Answer Question

Aug 27, 2015
---------------
Interview process took a very long time, apparently there were issues moving data around on their end. Reading between the lines suggested that one phone interviewer either did not submit feedback or was delinquent in doing so. Overall accomodations were very nice, logistics, lodgings and transportation were taken care of extremely well and with a minimum of fuss. Interviews were 100% technical and basically asked nothing apart fromhed on the syntax of the language you will be interviewing in, and it may be worthwhile to attempt the riskier, flashy answer rather than the more basic solution.

Without going into specifics, for the technical interview, I was asked questions about manipulating arrays.   Answer Question

Sep 24, 2015
---------------
The interviewer was 15 min late to the phone interview. Did she even take the interview as seriously as I did? We started the coding question right away. The interviewer seemed distracted the whole time. There were things dropping, loud thumping, and sudden noise coming from her speaker from time to time. Very distracting. The session was not enjoyable and pleasant. I was expected to autopilot through the whole thing by myself. The interviewer did not provide any direction as to what to do next. I felt I was conducting the interview instead of being interviewed by. I had to ask her if providing an optimized solution is what she'd like me to do next. The whole time was just me talking and every now and then yes, no, or a short sentence from her side. There was no elaboration. I did not sense she was enthusiastic about giving an interview. For the most part, she was silent. I was not sure if she was happy about giving an interview at all? Toward giving the optimized solution into the 25-min session, I've asked to provide guidance toward getting the optimized solution. Nothing helpful was given. I struggled until 30-min mark. She called time's up then. So it was just a 30-min interview. She expected me to solve the optimized solution without any help. Of course, she've asked this question many times so the solution would seem obvious to her. She expected the answer right away. I wouldn't be surprised if she's already written me off a lot sooner.

Some matrix-related question   Answer Question

Jun 6, 2015
---------------
Had a phone interview, then flew in to their HQ. Friendly recruiters, the in-person interview was an intense battery of interviews with a range of personalities. Some were clearly sleep deprived and not paying much attention to the interview at all, others were very engaged and friendly. Overall I thought it was an enjoyable experience, and did not have trouble engaging with any of the problems offered during the interview process after looking through the helpful documentation that Google provides pre-interview.

Q: You are given a playlist of songs, can you create a system that lets you shuffle the songs (as in, no repeats and a constant random order every loop through the playlist), with options to go back and also to repeat the current song? Followup: How can you optimize for space?   2 Answers

Jun 24, 2015
---------------
I received an email from HR and had a phone interview. A phone interview was consist of one technical question which was not very difficult but need some thinking to solve.

time complexity   Answer Question

Jun 2, 2015
---------------
The recruiter is amazing, he helped me knowing the process clearly and move on the feedback positively. I just got a phone interview, first I had to introduce myself and one of my project. Then I was asked to code a difficult (for me) and took a lot of time to think of the question, of course, no on-site interview.

find and output the given number's shortest square sum. like input: 12=2^2+2^2+2^2 (not 3^2+1^2+1^2+1^2) output: {2 2 2}   5 Answers

Jun 26, 2015
---------------
Applied online through Google Careers, was given a link to an online test that I had to complete within six days. Two questions, 60 minutes total, basic algorithm questions. After that, I waited to hear back from them but it's likely that I didn't perform up to expectations, as I was never contacted with next steps.

Return array with all values in a binary search tree that are between two values x and y.   Answer Question

Jun 7, 2015
---------------
the process took me two months. First phone interview and then onsite. Three weeks after that, they called and said that I can be accepted to some other program. So I applied, but still get rejected. I was pretty sad about that.

Longest increasing sequence   1 Answer

Jun 10, 2015
---------------
I applied for Software Engineering Intern online and heard back in one week. Two 45-minute phone interviews were scheduled. I talked with two different Googlers. The interview was about coding. The first one was to return the median of two sorted arrays. I firstly clarify the problem, and the interviewer was nice. I encountered this problem before and finished it quickly. The interviewed said it was buggy. I corrected the bugs. In the remaining minutes, I asked some questions about the company. The second interview problem is to return the binary string of an integer.

Find the median of two sorted arrays   1 Answer

Jun 2, 2015
---------------
Phone calls, followed by a day of interviews. I met with four or five hiring managers. Some technical discussion, some description of the positions. There is a minimum requirement for the length of the description of the interview.

Semaphores and race conditions   Answer Question

Jun 17, 2015
---------------
At first, a recruiter contacted me by LinkedIn, about 2 month befroe Graduated and we had a phone call for checking my background. After that, I got a technique phone interview. Based on my background, an expert engineer from related area interviewed me. The interview lasted 45 mins, I could answer as many questions as I can.

Simple algorithm about array, like dfs, using in image processing.   2 Answers

Aug 10, 2015
---------------
The process was very straight forward. My application was received and I got a call from a member of the staffing team to go over the interview process and set up a time for the phone screen. After the phone screen, you can move on to in-person interviews. If you do well enough on those, you go to the hiring committee. Overall, it was a great experience! Even though I didn't get hired, I'll be back for another try. You'll learn a lot, even if you don't get hired. Biggest tip: practice whiteboard coding and do a mock interview, even if you just have a friend help you. Time and space are very different when coding on a white board.

Signed NDA. Know your data structures, algorithms, etc. The recruiters will give you the rundown of everything you need to know.   Answer Question

Aug 19, 2015
---------------
Initial call with recruiter followed by initial tech screen over phone. Recruiter was very friendly and we got along well. Interviewer was also nice, but I wasn't able to complete the problem adequately. Phone screen was a brief rundown of my history and some basic algorithm/data structure questions followed by the coding portion.

Problem on matching a string to words in a dictionary   Answer Question

Sep 14, 2015
---------------
Submit application online and get phone screen interview. I was just asked some general questions like my education background, what projects I have worked on. The reciter was very nice and describe what the next step will be and then got I a email to setup a technical interview.

Wiggle sort   Answer Question

Sep 30, 2015
---------------
Applied for the job online. Contacted by the recruiter who was very professional. She helped me prepare for the interview and also gave me pointers on resources to use for the interview. During the phone interview, i solved the problem but i guess the interviewer did not get impressed by the way i solved it. I did not make it to the next stage.

Asked me questions regarding binary trees   1 Answer

Sep 23, 2015
---------------
Google conducts 5 interviews hosted by developers across various teams. You meet with your recruiter in the morning and do a couple interviews, have lunch with an engineer, and then complete the balance of the interviews in the afternoon. The primary focus at Google is on computer science expertise. I was asked very few questions about prior experience or what sort of roles I was looking for. The interviews continue to expand in scope, so you typically use all the allotted time and don't have much if any time for questions at the end.

Provide an architectural design for a mobile app that allows multiple players to play poker both directly connected to each other and via a cloud based service. Figure out how to handle the logistical issues of handshaking with other clients and how you would handle synchronization between the various clients and the server.   Answer Question

Jul 30, 2015
---------------
Phone screen, followed by on-site interview consisting of five 45-minute technical interviews and an hour for lunch. Technical interviews focused heavily on algorithms and general software engineering, and all coding was done on a white board. Common themes in the questions were graphs, trees, and hash tables. The interviewers seemed experienced and were able to give great answers about the company.

They gave me a sample of code and I was asked to perform a code review and search for a bug.   1 Answer

Jul 25, 2015
---------------
Had a first phone interview where I was asked some questions pertaining to C and did some coding. The interviewer was slightly condescending but it was generally ok. A few weeks later I had another phone interview that started right off the bat with the interviewer asking me to write a function declaration in C++ without even an introduction from the interviewer. The interviewer also had an extremely thick accent and the connection was bad so I could barely hear what she was saying. When I asked her to repeat herself several times to make sure I understood what she was saying, she got very impatient and was extremely rude. For the last question, I was in the middle of optimizing my code when she abruptly specified that time was up and immediately hung up. It honestly seemed like she had given up on me midway through the interview after I had asked her to repeat herself a couple of times. After that it felt like she was barely paying attention to what I was saying. This was one of the worst phone interviews I've had.

First interview: Basic C questions, had to read a piece of code and describe what it does, and then wrote a function to merge two linked lists. Second interview: How to design an interface, create a class.   Answer Question

Oct 26, 2015
---------------
I applied online and got an email from a recruiter. She then set me up for a phone interview with a Google Engineer. The interview was completely technical. The question had to do with making three vectors that represented a sparse matrix. The engineer was pretty helpful. The hardest part of the interview is having to think, talk and code at the same time

Sparse matrices are usually stored by only storing the non-zero values. But, there is no single standard format for doing this. One such format is called Compressed Sparse Column (CSC). Example: The following matrix is stored in CSC format using three arrays, vals, rows, and cols. /0 1 2 3 4 \ | a 0 0 0 0 | 0 | 0 c f 0 0 | 1 | 0 0 0 0 h | 2 | b d g 0 i | 3 | 0 0 0 0 0 | 4 | 0 e 0 0 0 | 5 \ / vals = [a, b, c, d, e, f, g, h, i] ← double values rows = [0, 3, 1, 3, 5, 1, 3, 2, 3] cols = [0, 2, 5, 7, 7] ← position in the vals array (think of it as pointers into “vals”) length of the cols array == the number of columns in the matrix Generate this representation of the matrix from a sequence of triples (row, col, val). Example: (1, 1, c), (3, 4, i), ...   1 Answer

Aug 14, 2015
---------------
I interviewed in Oct/Nov of 2014 for internship position. That included interview with a recruiter and 2 phone interviews with engineers. I was part of internship in Feb-May 2015. In May/June of 2015 I interviewed for a full-time position. I had 4 engineering interviews ( 2 + 2 ). After those interviews it was decided that my packet is not strong enough to go in front of hiring committee.

Program Game of Life   Answer Question

May 30, 2015
---------------
It was a good one. Five rounds. Asked about some algorithm questions in C++. The process is efficient. It was a good one. Five rounds. Asked about some algorithm questions in C++. The process is efficient. It was a good one. Five rounds. Asked about some algorithm questions in C++. The process is efficient.

design a hash table   Answer Question

May 31, 2015
---------------
Small things helped like the recruiters sending you notes of encouragement right before your interview and the interviewers were very friendly. Applied online to multiple jobs, received an email from a Google recruiter to setup a time for initial phone call. Recruiter reminded me this was not an interview. Setup a phone call interview 2 weeks out and got an approval a week later. I was invited for an on-site interview which took very long to setup, about 3-4 weeks. The on-site interview was 5 interviews with a lunch interview. I had a very positive experience throughout the entire process and would apply again in the future.

They were all coding questions. For phone you will use Google doc, for on-site you only use whiteboard and the interviewers take pictures with their smartphones.   Answer Question

May 13, 2015
---------------
The interviewer called in and ask background, describe recent project. It lasts about 15 mins. The question was hard (lots of details to attend), and 30 mins is not easy to finish without bug. At the end she asks me if i have any questions. The interview finished 5 mins late, and she was nice and did not stop me immediately after 45 mins

Given a long string, and a width, parse the string return an array list containing string that shorter or equal to the given width; if multiple spaces left, split them equally   1 Answer

May 14, 2015
---------------
Had a phone interview. It was a very strange experience. The interviewer didn't say much, total of 5 sentences for the entire interview, didn't even told me their name. Asked me the difference between an ArrayList and LinkedList. Next asked me the question below. I tried to use a Range Tree to solve but he interrupted me and asked me to write a brute force solution instead.

Given a sorted array [0-99] With input: [1, 5, 45, 86] Write a function that prints the empty regions, example Output: “0,2-4,6-44,46-85,87-99”   3 Answers

May 25, 2015
---------------
The recruiter called me up and we had a friendly chat. Then one engineer from the Google head office called for the technical interview. The interviewer started the interview by asking a programming problem right away. It was more on the easier side. After I finished it, we moved on to other questions based on the same problem.

A simple program based on string manipulation.   Answer Question

Mar 7, 2015
---------------
I participated in two phone interviews. I did not clear the second phone interview so I can't speak for the rest of the interview process. Each phone interview is accompanied with a google doc where you type in your code. In the first phone interview, I was asked to give an introduction of myself, then the interviewer asked me two technical questions. In the second phone interview, I was asked two technical questions. In three of the four questions I was asked to walk them through some test cases after writing the code.

Implement a class that can calculate the running average of a stream of input numbers up to a maximum of N numbers.   9 Answers Implement string rotateString(string input, int amt)   7 Answers Implement int strncmp(const char* s1, const char* s2, int n)   2 Answers Implement a function that takes the set-wise subtraction of two sorted sets of integers. ie A = {1, 2, 3}, B = {3, 4, 5} =&gt; A - B = {1, 2}. There can be duplicates, in which case all duplicates should be removed should there be an occurrence in B. IE: {1, 2, 3, 3, 3} - {2, 3} = {1}.   11 Answers

May 20, 2015
---------------
It is two rounds of interview. First round one to two tech questions, second round 4 one hour tech interviews. All are technical questions. Need to write code on whiteboard. Can think loudly and discuss with interviewers.

Most challenging technology you've used in projects   Answer Question

May 19, 2015
---------------
Google is just not the company for me, not enough diversity. I advise you to prepare to go headfirst into straight coding.It was a very awkward experience of somece of someone watching me type slow while on the phone.

Capitalize 2nd, 4th, 8th, 16th, … letters in a string input : letters in a string output: lEtTers in a stRing   5 Answers

Jun 6, 2015
---------------
Interviewer reached out to me via email and got on a call, time from initial phone call to interview took about a month, however I was in no rush. I had interviewed and been rejected before, so this time they put me straight to final round of interviews. Interview was fair, similar to many of the questions that are found on glassdoor and careercup under Google. All the interviewers were very friendly and helpful through the process!

Given a balanced binary tree, create 2 way pointer links between all siblings for each depth. Each node then has the fields left, right, previous and next. Then do the same thing given a non balanced binary tree.   Answer Question Design a web crawler.   Answer Question Write InterleavingIterator class which takes a list of Iterators as input and iterates one element at a time from each iterator until they are all empty.   Answer Question Given a string, print out a permutation of the string in which no two characters next to each other are the same.   2 Answers

May 27, 2015
---------------
Applied through their site which is quite surprising that I got an email from the recruiter. I have only gone through the phone interview. Haven't heard back yet. It's been little less than a week. Pending for next round of phone interview hence putting no offer

Write a function if a given list is a subset of the library list. Talked about space and time complexity when the library list is too huge to fit in one list.. etc. Write a function if a given string has a balanced parenthesis,bracket,curly bracket. Basically this exact question: http://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/   Answer Question

Jun 19, 2015
---------------
Contacted by a recruiter on LinkedIn. First phone interview with the recruiter about my resume, background, and some basic questions of C++, algorithm, and OS. Second phone interview is a technical question.

Given More(), Next() and 2 input arrays. Find the combined integer array without duplicated number. ex) A = {1, 2, 3, 4, 5}; B = {4, 5, 6, 7} =&gt; Result = {1, 2, 3, 4, 5, 6, 7}   1 Answer

Jun 19, 2015
---------------
Contacted by a recruiter on LinkedIn. First phone interview with the recruiter about my resume, background, and some basic questions of C++, algorithm, and OS. Second phone interview is a technical question.

Given More(), Next() and 2 input arrays. Find the combined integer array without duplicated number. ex) A = {1, 2, 3, 4, 5}; B = {4, 5, 6, 7} =&gt; Result = {1, 2, 3, 4, 5, 6, 7}   1 Answer

Apr 19, 2015
---------------
I interviewed for a Software Engineering role at Youtube. First round very easy and it was possible to get through the question in 2 lines of code with a recursive approach. My interviewer then asked me to write the iterative version which I did. 2 weeks later my recruiter called me to tell me I made the final round. The final round consisted of 5 technical interviews. For me there were 4 coding and 1 system design. The coding questions covered purely data structures, algorithms. The system design question was also very technical too. I managed to get to an efficient clean solution on every single interview, tested my code and got good feedback from each one of my interviewers as well during the interview. Also I had great discussions with all my interviewers at the end of each interview, they were all very nice and helpful. However, the recruiter told me that they were not moving forward with me. I was very surprised. The recruiter mentioned I had received high scores on communication skills, analytical skills, and coding skills. The feedback was that I had some bugs in my code. I checked through every line I wrote at every interview and I don't believe this was actually true. I have never done so well at an interview just to get rejected and honestly I am sure I am not the only one google treats like this. I found the process to be very disrespectful to candidates as if we are robots. I personally lost all interest of working for the company.

The questions they asked me further were mostly just building upon the previous ones. It had to deal with file operations and manipulating the data retrieved in a certain way.   Answer Question

May 5, 2015
---------------
I had applied online. A recruiter got back to me the very next day and we proceeded to setup a phone interview for the next week. It consisted of a few algorithm based questions (file operations, manipulating data, etc). I did manage to answer most of the questions, although I could have been a bit faster.

Implement functions in Java to accomplish a task (Trees, Recursion, etc)   Answer Question

May 8, 2015
---------------
Recruiter contacted me and called me for a phone screening, scheduled a phone interview which included asking me about my background, coding, and then seeing if I had any questions. Eventually had a second phone interview but did not get past there. Both the recruiter and interviewer were enthusiastic about talking to me and were very easy to talk to.

The intent of this code is to reverse the words in a string. The code has 1 compilation error, 1 runtime error, and 3 logical errors. Please identify and explain all of them in the provided code.   Answer Question

May 11, 2015
---------------
It's rather typical with a phone screen where they ask you basics about data structures and algorithms and have you code on a gDoc. This is followed by an on-site 5 interview session. They typically have 5 questions which cover 5 different categories including coding, algorithms, design, code reading.

Standard CS topics, lots of data structures and solving toy problems.   1 Answer

May 7, 2015
---------------
I was referred by an employee and had a short screening call with a recruiter to discuss the different locations and teams. After that, I was invited for an onsite visit where I met with 2 people for ~45 each. It was all technical about the expected topics for an SE (data structures, computational complexity, etc) with whiteboard coding. This went well enough, but I ended up withdrawing my candidacy for another opportunity. Fast forward a couple years, Google reached out to me and the timing was better. I was invited for another onsite (technically the 2nd in the process, I think my first still "counted") and met with 5-6 engineers for ~45 min each. Basically a longer version of the first visit. Similar style (lots of coding, design, etc).

Create a BST from a sorted array.   3 Answers

Apr 28, 2015
---------------
Contacted by recruiter on LinkedIn. Did not hear anything for several months. Finally set up a technical interview. After the technical screen I was told that I had been selected for a second screen, but after that I never heard from the recruiter again.

Each interview asked a question from a wide range of topics, including Algorithms and Databases   Answer Question

May 1, 2015
---------------
I completed the entire interview process (several phone interviews and and then onsite interviews) before they rejected me. The entire process, from first contact with a recruiter to final rejection took several months.

Graph traversal and recursion, designing a basic class to represent and solve a problem, tree-related questions   Answer Question

May 11, 2015
---------------
I was contacted by a recruiter and the process took about 4 weeks. There was then a technical phone interview which a software engineer asked a few questions about your thought process and then coding up a solution. The entire phone screening took about 45 mins and then afterwards you can ask the interviewer any questions you have.

No Question
Jun 20, 2015
---------------
The interview process was very fair. Throughout the process, I was asked only technical questions: they would describe a problem, and I would be asked to describe a solution and write out the code. I had one technical phone interview and then the on-site interview. Overall, the interview was almost completely focused around my problem-solving ability; there were no unfair or cheap questions, and I felt that they respected my time there.

No Question
Oct 6, 2015
---------------
You are handed by a recruiter. This recruiter will perform a phone screen on you and give you information about future steps. This recruiter will have someone else schedule a technical phone interview with you. You will code on a shared Google Doc with your interviewer. This interview will last about 45min. Thirty minutes of question and answer (coding) and fifteen minutes for you to ask the interviewer questions about anything. You wait about a week for your recruiter to call you with the feedback given by interviewer. If you passed then you will be offered to visit Google HQ for on-site technical interviews. These on-site will last nearly a full work-day. After this you wait some more for their decision.

What is a project you worked on?   1 Answer

Oct 26, 2015
---------------
Phone screen then an in person interview. In person interview was technically challenging. Really fun and creative questions. Most of the problems tested abilities to solve rather than knowledge or memorization.

Data Structures/ Algorithms   Answer Question

Jul 25, 2015
---------------
The phone screen was pretty straight-forward. I was asked 2 coding problems and the interview lasted 45 minutes. The onsite interview was pretty tough. I was asked tough but very interesting problems especially the coding problems. The remaining interviews were about design and past projects. Overall a good experience. Definitely prepare well for interviews!

Can you describe methods of binary tree traversal?   1 Answer

Jul 13, 2015
---------------
Several initial phone screen calls, followed by an invitation to come for a full-day onsite. I was also asked to submit several online questionnaires that targeted comp details, references, and current role and position. This is my first time applying for a position and I have heard from many past applicants that Google does not typically hire folks who have applied for the first time. I am still in the interview process - awaiting an onsite interview.

What are you goals for working with this company?   Answer Question

Jul 2, 2015
---------------
Typical INterview. Looked like a good place to work, but I didn't think it was the best company considering my plans for the future. Felt like a fairly welcoming environment.

Signed an NDA.   Answer Question

Oct 19, 2015
---------------
Recruiter contacted me for a phone screen. I then had a phone interview and a few weeks later had an onsite interview. Overall, the process was quick as I had a pending offer with another company. The interview was very difficult - I wish I had more time to practice. I did notice that some of the personalities of the interviewers seemed a bit flat. A few barely even shook my hand! They very much expect you to impress them and do not do much to impress you in return. I am a firm believer that the company should also try and show you how great they are as well. In the end, I was not upset that I did not get the offer as I was not impressed with the people I worked with at the campus.

Here is a phone interview, given two binary trees, b1 and b2. Find the the intersection of b1 and b2 in linear time.   1 Answer

Oct 9, 2015
---------------
I was contacted by a recruiter (internal referral). I had two runs of phone interviews and an on-site interview. The on-site interview was very tiring but challenging. I think I was lacking the confidence to present myself as smart. This came from being too focused on solving problems, I even stated out loud how proud I was for finding the solution to a problem (which did not help my case, I was just so excited). Thus I think it is important to stay on top of your game and look/sound sharp and smart during interviews. I have a PhD in computer science and had also a mini thesis defense interview. This part of the interview consisted of defending my research against an other expert in my field (AI). It was challenging and I was not prepared for this as I focused my preparation on the CS interview questions. So PhDs please be prepare to defense your thesis! I am currently preparing to interview there for a second time.

Similar to this: Given an NxN grid of 0s, 1s, and 2s, find out whether 1s or 2s is surrounded starting at (i,j). Being surrounded means that 1s is surrounded by 2s or that 2s is surrounded by 1s.   3 Answers

Apr 14, 2015
---------------
I was contacted by a recruiter who told me the hiring manager liked my resume. She then setup a technical phone interview. For that interview, I was contacted an hour ahead of the scheduled time. I asked my interviewer if he could give me 5 minutes to get ready, but he said it was alright and would call me an hour later. He called and mentioned his name and that he was from Google. Then he copy-pasted a problem into Google Docs and asked for a solution. So yes, no introductions about himself or about me. I guess they don't care until you go onsite as a "potential" candidate. I asked a couple of questions to make sure I understood the problem. Afterwards, I wrote a recursive DFS solution. The interviewer said my solution was fine and that he had no more problems for me. I asked him some questions about the job role, but all I got was vague/cryptic answers. Very weird? Overall, the experience is negative/neutral. My recruiter was AWESOME! (Keep in mind that Google recruiters are different from those who schedule your interview.) Very nice and well spoken. She also articulated to the best of her abilities the role I was applying for without getting into a lot of the details because of confidentiality. Unfortunately, my phone interviewer was a dud. I guess interviewing with Google matters much about the coding skills you have as well as the luck of the draw on who interviews you. Good Luck!

Coding puzzle to test if you really know your favorite language and can use it to solve puzzles. They made me write code that compiles, and work through "compiler" errors until it was valid.   Answer Question Basic coding problem to test data structures and algorithms knowledge. Think recursion, heaps, binary search trees, that kind of stuff.   Answer Question System design problem, no coding involved. I had to design a large, complex system that I never could have done by myself. I just started designing what I could and the interviewer asked questions to guide and inform the design. By the end I think I seemed like a genius but I knew the interviewer was the one who knew the proper design, not me.   Answer Question Very vague coding task, I was given a function signature and spent the next 5 minutes teasing out potential solutions and discussing pro's and con's of each one. Eventually arrived at a multithreaded solution which they then wanted me to implement on the whiteboard. I did not need to know any specific threading API, because they let me use any libraries I wanted, even if they don't exist, just as long as they make sense. This question tested my knowledge of multithreading concepts thoroughly, so this is definitely something you should review!   Answer Question A very difficult-seeming coding problem. It's the type of problem that makes you crap yourself at first but if you keep a level head you can hopefully spot an elegant way to solve it. There is an obvious solution but it is very painful and inefficient to implement, and there is a more subtle solution using dynamic programming that is the most efficient and easiest to implement. They will know you're a rock star when you solve the problem elegantly using the proper CS concept.   Answer Question

Apr 12, 2015
---------------
This is the experience of someone who lives 2000 miles away from Google's Mountain View campus. I applied online and heard back in less than a week. The HR phone interview went well so I got a technical phone interview. They gave me a study sheet that lists everything you might need to know for the technical portion of the interview, which is loads of computer science theory, algorithms and data ste job role, but all I got was vague/cryptic answers. Very weird? Overall, the experience is negative/neutral. My recruiter was AWESOME! (Keep in mind that Google recruiters are different from those who schedule your interview.) Very nice and well spoken. She also articulated to the best of her abilities the role I was applying for without getting into a lot of the details because of confidentiality. Unfortunately, my phone interviewer was a dud. I guess interviewing with Google matters much about the coding skills you have as well as the luck of the draw on who interviews you. Good Luck!

No Question
Apr 7, 2015
---------------
I got this interview pretty early, about early October. Two 45-minutes interview, the questions are basic, but I failed I made the question complicated. Of course there was also some project questions.

The basic knowledge about Java.   Answer Question

Apr 15, 2015
---------------
Got a recruiter's email one day, and ask some behavior question and ask for arranging a pre-screen interview. And two week later, we had a phone interview with google document for technical questions. The coding question would be to generate all the combination of 3 digit numbers with no duplicate. 0 can be at the first digit. But I think I might be too nerves to response the question well.

First, a mathematic question, asking about a card game with how many possible way for the combination based on the rules it given. Second, let you to print out all the combination of 3 digit numbers with no duplicate, ex. 012, 013, ....123, 124, 125...   9 Answers

Apr 11, 2015
---------------
Applied online, contacted by a recruiter who set up three back-to-back phone interviews. I basically answered every single question. Needed a slight push a couple of times, but a slight push was always sufficient. Then a couple of days later I received a devastating rejected letter. Is it possible that it's just too late in the recruiting process so they don't have many interview positions left, or did I simply not do as well in the interviews as I thought?

Signed a non-disclosure agreement, but the topics were algorithms and data structures. You can be extremely well prepared by looking at the questions posted on Glassdoor.   Answer Question

Apr 10, 2015
---------------
Got first phone interview after submitting my resume 3 weeks earlier, the person who interviewed me asked two technical questions, first one was focus on probability calculation, and the other was combination of digits.

Calculate the combination of three digits number consisting of 0-9, and no duplicate is allowed.   3 Answers

Apr 6, 2015
---------------
Three rounds of technical interviews, no behavior questions. The attitude of the recruiter is really friendly. First round hardest, then gradually each round gets better. Back to back. First round asks a probability and derivative related math question, and a regular expression match. Second round is pthread, and array operations. Third round is the easiest IMO, just quite normal OJ type hash question.

Pthread, probability, regular expression   Answer Question

Apr 18, 2015
---------------
I applied for the internship opportunity for the previous summer but the campus recruiter contact me at my last semester for the Full-Time position. This is my first screen interview for full-time position. The interviewer is an engineer, quite nice. However, I am very nervous and the result is not well. After a couple days, I got the declined message from HR.

Please implement a function to generate the 3-digits numbers with no duplicate digits and no duplicate permutation. For example: 122 is not allowed and 123 321 is not allow, only output one of the permutations.   4 Answers

May 19, 2015
---------------
One phone screen followed by 5 onsite. The recruiter was very helpful and always in touch. The process was very clear from start to end. They need people who can think and write code very quickly so even though I did all my questions I was too slow to solve as many questions as they wanted.

2sum, 3sum, search based on dp, signed NDA so can't tell details but questions were fairly hard. Get your trees and hashtables down. Implemented lru as well.   Answer Question

May 15, 2015
---------------
The whole process took around 2 months to complete. I first applied online and they got back to me within 2 weeks for a phone interview. I had scheduled the interview for a week later due to my busy schedule. The phone interview consisted of just one technical question. After around 3 weeks, I had received an email from my recruiter telling me to post my available times for another phone interview.

Given an nxn matrix representing a crossword board. Implement a function that verifies that all of the squares that can contain letters (the white squares on the crossword board) are connected to each other throughout the whole board.   2 Answers

Jun 3, 2015
---------------
I was contacted by a university recruiter who helped me through the process of two technical phone interviews and four technical onsite interviews, where I was fully accommodated by Google (I'm from the East Coast). Every Googler I met was helpful, nice, and knowledgable. The interview problems were very challenging; be sure to practice, practice, and further prepare yourself to be able to design and implement algorithms to unique spins on classic CS problems. After the onsite interviews, the 4 interviewers submit their notes on you to a hiring committee. If you make it through them, your application is sent to a final committee to determine whether or not to make an offer. I was not made an offer but am preparing for the next round of interviews when I apply again next year. Google really seems like an amazing place to work.

What is the biggest challenge/conflict you have faced, and how did you overcome it? (Most common interview question ever, so prepare for it)   Answer Question Traversing/manipulating trees and graphs, number theory, data structures, mastery of your preferred language, recursion, dynamic programming, classic algorithms   Answer Question

May 29, 2015
---------------
coding and basic algorithmic questions during phone interview. then they invited for onsite interview. during onsite interview, it was mostly algorithmic questions with some coding. some of the questions were clever and rather difficult (one involved basic number theory, one was a very advanced algorithms question);. Then there were some open ended questions, where the goal is to observe the thinking process and suitability for team wide discussions.

union find structure   Answer Question

Jun 3, 2015
---------------
I was contacted by a university recruiter who helped me through the process of two technical phone interviews and four technical onsite interviews, where I was fully accommodated by Google (I'm from the East Coast). Every Googler I met was helpful, nice, and knowledgable. The interview problems were very challenging; be sure to practice, practice, and further prepare yourself to be able to design and implement algorithms to unique spins on classic CS problems. After the onsite interviews, the 4 interviewers submit their notes on you to a hiring committee. If you make it through them, your application is sent to a final committee to determine whether or not to make an offer. I was not made an offer but am preparing for the next round of interviews when I apply again next year. Google really seems like an amazing place to work.

What is the biggest challenge/conflict you have faced, and how did you overcome it? (Most common interview question ever, so prepare for it)   Answer Question Traversing/manipulating trees and graphs, number theory, data structures, mastery of your preferred language, recursion, dynamic programming, classic algorithms   Answer Question

May 29, 2015
---------------
coding and basic algorithmic questions during phone interview. then they invited for onsite interview. during onsite interview, it was mostly algorithmic questions with some coding. some of the questions were clever and rather difficult (one involved basic number theory, one was a very advanced algorithms question);. Then there were some open ended questions, where the goal is to observe the thinking process and suitability for team wide discussions.

union find structure   Answer Question

Jul 8, 2015
---------------
Talk about myself during the recruiter interview. Finished an easy algorithm question in the technical interview. Just be careful about edge cases. Flew to the Bay Area for interview with rental car and comfortable hotel. Really, just as everyone else said, algorithms questions are the only things you need to master.

One of the question is finding the perimeter of a shape on a map represented by a integer matrix.   Answer Question

Jun 16, 2015
---------------
Got contacted by HR trough email, ask me if interested in working in Google. Got a phone call from HR, ask about my basic info and arranged a phone interview time. Got the Phone Interview 2 weeks later. The interview questions were basic cs questions.

wiggle sort   Answer Question

May 28, 2015
---------------
I was referred by a googler. I must admit that google is really efficient because a recruiter contacted me just one day after I got the referral confirmation email. I was required to provide an unofficial transcript(yeah, I'm a new grad). My phone interview was scheduled two weeks later. I failed in the phone interview. It's really weird that the recruiter didn't send me a rejection email but instead emailed me to schedule a phone call to tell me the result! I heard that many recruiters from google told candidates bad results in this way. Maybe it's a way which google thinks could give candidates enough respect. But It made me feel really bad to hear "Unfortunately, bla bla bla" through a phone call.

Data structure and algorithm questions related to sorting and priority queue.   Answer Question

May 19, 2015
---------------
I had a technical phone/screen interview a month ago. It didn't go well as I thought, because I was nervous on the first simple question and didn't handle the edge case well. I solve the second one though. Then I wait for about 3 week to get a phone call which tell me that I will be in the second round. It has not started yet.

Determine if two list are interleaving.   Answer Question

Sep 4, 2015
---------------
1. Phone conversation with recruiter, 2. live coding with interviewer Interview started 18 minutes late. The interviewer forgot (looks like it) about the interview. I had to contact my recruiter(s) after waiting for 10 minutes. My recruiter contacted the interviewer. Then the interviewer called me for live coding.. The recruiters were great. They did their job well. It was a great experience coordinating with them. The interviewer seemed to be in a hurry :). However, the reason why I did not get the job is because of flaws in my preparation. My google interview was an expensive successful failure. It taught me how to prepare for the other interviews.

only one coding question was asked.   Answer Question

Aug 5, 2015
---------------
One phone screening, one onsite, The whole process is awesome, but I got really tired after 4 consecutive 45min rounds. Four rounds, plus a lunch talk. I didn't play well for the last round.

Just some very basic programming problems. But they asked a lot of related things around the typical problems, so concrete base in data structures is very important. Only 1 algorithm problems (I mean problems which requires you think, not those obvious ones), which blocks me for 10 min.   Answer Question

Oct 3, 2015
---------------
I was so impressed with my interview process with Google. There are two recruiters involving with me during the entire interview process, on for phone interview and the other for onsite interview. They are both really really nice, prefer calling you over the phone instead of via email, and do whatever they could do to serve your request.

graph clone, dfs, recursion   Answer Question

Aug 1, 2015
---------------
I had a recruiter contact me so I applied directly. The entire interview process took about 2 months and which involved one phone interview and then an on site interview which went pretty well. They asked some basic questions but they asked a challenging one which I had trouble answering.

Algorithm questions.   Answer Question

Apr 17, 2015
---------------
Intense and demanding. Many expectations for a graduate student, and I was driven to meet them with large amounts of preparation. Will definitely go back to reapply as soon as I can.

Data structures and algorithms.   Answer Question

Apr 17, 2015
---------------
An introduction and then a coding question. That's it. No questions about who you are, resume, CS knowledge, NONE of the stuff in the syllabus they gave you. I just went in and started coding. Strangest "interview" I've done yet. The question was typical array/string manipulation you see everywhere but was really hard to understand.

write a function   Answer Question

Apr 25, 2015
---------------
Got contact in 3 weeks and had two 1 hour interview. First one was about parsing a string and the other one is about implement a basic board game. The overall process is relaxing but wasn't able to solve the question quickly so I didn't get the offer.

Implement a basic board game.   Answer Question

Mar 29, 2015
---------------
The first interviewer is absent, I emailed the recruiter, and found he has left. Found another recruiter to help me coordinate. So the first one becomes the last one and so the rest two didn't know about their round number changed... Answered 2 questions for each round, but failed.

finding increasing by 1 sequence in 2D array   Answer Question

Feb 23, 2015
---------------
2 Hangout interviews. First, DS question (sliding window) and second, couple of Java and OO questions. Interviewers were very helpful and caring. They also asked about the projects I did in the past. Overall, very positive experience!

Implement a sliding window API   Answer Question

Mar 25, 2015
---------------
It took really long time, I went through 4 rounds interview. At last, they said they prepared to give me the offer, however, they needed one more round interview. The very last interview also went through smoothly. I completed every questions during interview. The interviewer also gave the positive feedback. But after two days waiting, they stopped my process. I really didn't get why this happened. If my performance was bad, I would feel better. But I solved every questions they give. It was a little bit unfair. I couldn't remind anything I did wrong. Really want to know why. Also they said I need to wait 12 month for reapply.

Some questions about deal with array. recursive, efficiency,   Answer Question

Feb 28, 2015
---------------
There are 3 phone calls, each for about 45 min, which are made in the same day. All three phone calls are very technical. One question on system design, one on data structure, and one on algorithm. Google docs is used to write code. The reviewer will ask you write some tests and intentionally leave sth unspecified.

Implement a data structure to support dynamic insertion, deletion of intervals. Overlapping intervals should be merged.   1 Answer

Mar 8, 2015
---------------
I submited my resume online. After 2 weeks the HR contacted me to arrange a phone interview. It was about 40 minutes. The process is writing code on google doc and interact with interviewer through the phone. I was informed to get an onsite one working day after the interview.

1. merge two sorted lists. 2.merge k sorted lists He asked followed up questions about memory allocation, difference between heap and priority queue, , time complexity and a few issues with my STL usage.   3 Answers

Mar 19, 2015
---------------
phone interview recruter found my resume in Hackthon resume bank and sent me an email.interviewer is nice but we had a bad signal and its really hard to hear clearly.

given a string write a function to return the index of the first elememt which is non-alphabat ordered   5 Answers

Mar 10, 2015
---------------
Two technical interviews, each around 45 min, coding on Google docs. The first one, a very nice European, just one tree question. In the beginning I'm not clear with the problem description. So wrote a not efficient solution. Then we discussed the complexity with current codes. Then he followed up to ask me to improved current codes. I figure out there's one condition I didn't use. Finally I finish up the efficient solution, he asked me to refactor the codes and I did. The second one, an Indian, three technical questions. The phone is not quite clear. So he wrote the questions down on the Google docs. I finished them all.

1. Tree 2. a. combination. b. permutation. c. DP.   Answer Question

Apr 8, 2015
---------------
Recruiter reached out to me on LinkedIn. I wasn't ready to move ahead at that point of time. I followed up later when I had an offer with another firm and the recruiter was ready to have me onsite directly ( with a referral ). The onsite round was 5 coding interviews on the white board including a lunch as well. The interviewers were well prepared and friendly. Each interviewer was in sync with the questions to be asked as per the process. I won'd disclose the questions asked due to NDA. However, all the questions were based on problem solving/ algorithms/ graphs. Google is one of the few places to have a very fair interview process without asking questions out of scope or questions that required the interviewee to have prior knowledge. Most of the questions were based upon fundamentals of problem solving and required coding on the white board.

1. find k numbers which sum to n. ( I think the interviewer wanted to ask me to optimize the solution but we ran out of time) 2. find a path from source to target in a tree where each node can have arbitrary number of children. (follow up: how to do this in sub O(n) time and linear space given that you can store the reachability in each node) 3.OOP: add urls and find the median (follow up: do it in O(logn)) 4. decide if there is a cycle in a graph   1 Answer

Apr 21, 2015
---------------
The interviews started at 9:45 AM and ended at 2:00 PM 1. Technique interview a long hair guy started with a technique question immediately 2. Technique interview the interviewer started from introducing the project he is working on in google and followed by a technique question 3. Technique interview 2 technique questions. The first one is easy while the second is not. 4. Lunch 5. Technique interview A tall, blonde hair beauty asked me one technical questions. I managed to write the code for all the questions asked first by the interviewer. Then I was stuck at the questions where the interviewer asked me to improve time complexity. I think it's important to solve it with an efficient solution, not just a working one, for google.

It was an algorithms question, which will be O(n^3) with bruce solution, but you have to optimize it Time complexity O(n), space complexityO(n).   Answer Question

Mar 10, 2015
---------------
Applied on line, about one weeks later, they will contact you with the phone. they want to ensure you can really interest in coding and have some coding experiences. After get the call, they will send you an Email, with a link. And the link will expire in a week. Click that link you will goto Codility, do the programming part.

Started off with some knowledge questions about graphs (no coding). Then a rather tricky combinatorics problem that involved a base 9 number system (as opposed to binary base 2 or hex base 16). I stumbled on the solution in the end but was way to nervous and that probably didn't look to good.   Answer Question

Mar 7, 2015
---------------
Applied through a employee referral. Was contacted by a recruiter who asked me about my background and told me about the interview process (1-2 phone screens and then ~5 on-site interviews). He then scheduled a phone screen with one of their engineers. The phone screen was a bit odd I think, the person did not really introduce her self and jumped right to the questions. The rush made me a little bit more nervous but I guess she didn't think the usual background/interests chat mattered. Otherwise the format was very similar to other technical phone screens I've done. It took a rather long time for the recruiter to get back to me and actually it wasn't until I sent him an email >3 weeks later that he promptly replied that he coincidentally just received the results (right) and there weren't enough positives to move forward.

Find the deepest node in a binary tree; Build a tree out of given edges; etc   2 Answers

Mar 17, 2015
---------------
There are three phone interviews back-to-back. Each last for about 45 min. The HR is very nice, send me PPT file for preparation as well as several reminders. Receive reject email one week after interviewing.

DFS and BFS   Answer Question

Mar 4, 2015
---------------
Applied online. Few weeks after I submitted my application, I was contacted by a recruiter via e-mail. Got phone interview. Interviewer was friendly. Finally, got a phone call from recruiter after two weeks said I cannot move to next step.

binary tree, binary search tree, arrays   2 Answers

Mar 25, 2015
---------------
Inside referral, contacted me in 2 weeks, arranged the interview 4 weeks from then. Very efficient. 3 interviews, 45 mins each. ALL nice person! The third one doesn't talk much. But the questions in third one are not the hardest, leetcode medium level, I think. The first one questions are easy (leetcode as reference). You can ask them questions not related to the interview. Very positive experience! Thanks, google and glassdoor!

Five rounds interview at onsite dynamic programming, 2D array, find least distance between 2 nodes in a binary tree, return a random node from a binary tree   Answer Question

May 14, 2015
---------------
Very friendly recruiter and interviewers. One telephone interview and Five rounds interview at onsite. Got back very fast with results. All interviewers were friendly and helpful. Most questions can be found at careercup. Prepare well for dynamic programming questions and recursion based questions as they will mostly be asked in the interviews

Given an Iterator class with methods: next() and hasNext(), create a PeekableIterator class with a peek() method that returns the next object but does not move the iterator forward.   1 Answer You are given a series of inequalities as follows: a &lt; b b &lt; c c &lt; a Obviously, there's a contradiction, since a &lt; b & b &lt; c implies a &lt; c, yet we say c &lt; a as well. Describe an algorithm that can detect such contradictions.   1 Answer

May 9, 2015
---------------
I was contacted by a Google recruiter who found me via LinkedIn. I set up a call with him, and he scheduled a technical phone screen to take place in two weeks. He provided a bunch of information regarding Google and their interview process as well as some recommended ways to prepare. On the day of the phone screen, my interviewer called me on time. He asked me how I felt and then jumped into the first question. Unfortunately, he had a heavy accent and also had me on speakerphone, which made it somewhat difficult to understand him. On top of that, I focused too much on explaining my thought process line by line, which resulted in me taking way too long on the first question (which is supposed to be the easy one).

They asked two standard CS questions on my first phone interview and a harder one on my second phone interview. 1- dictionary manipulation / handling of duplicates   1 Answer 2- Reverse linked list (first phone interview)   2 Answers 3- Non-standard game strategy question (second phone interview)   1 Answer

Mar 3, 2015
---------------
I received an email from a recruiter requesting a recent resume. I sent her the resume and she gave me some tips on how to improve it. I sent to her the updated resume and she scheduled a phone interview. I passed that one and she scheduled another phone interview, which I didn't pass.

No Question
Mar 2, 2015
---------------
Applied online and received an email about setting up two technical interviews which were back to back. Scheduled the interviews and received questions about data structures and algorithms in my chosen language. Heard back a week or so later they were not moving forward.

Questions about data structures and algorithms in my preferred language.   Answer Question

Mar 2, 2015
---------------
We talked on the phone and we mostly talked about coding which I wasn't all to good with but I told them that I would brush up on it and work at the best of my ability

How we'll is your coding   Answer Question

Mar 1, 2015
---------------
2 phone interviews. Didn't make it past the second. Neither question asked was very difficult. First was about string manipulation, second involved fib sequence. Both interviewers were helpful and I thought I did well, but not as well as some of my peers evidently. Make sure to analyze runtime and run through test cases.

Signed a NDA, so I can't discuss, but first phone interview was on string manipulation and the second involved the fibonacci sequence.   Answer Question

Mar 25, 2015
---------------
Recruiter sent a prep document after a brief non-technical talk. And they also had onsite information session to prepare interviews. The phone interview was about 45 minutes and I was asked to do coding on shared google doc. One interviewer (no shadow).

coding   Answer Question

Apr 18, 2015
---------------
I had 3 phone interviews which were completely about coding. In each of these interviews, I have answered one question. my solutions for the first and the last questions were almost correct the second one was horrible, I was not able to understand the interviewer's accent.

I am not allowed to share the interviews' questions but they require understanding of dynamic programming, BFS/DFS, and HashTable.   Answer Question

Apr 19, 2015
---------------
Back in December a recruiter contacted me through email (it was first sent to my college email's spam folder) and I scheduled the phone interview extremely later to prepare for the possible questions. A Googler from Mountain View contacted me and we went over 3 different questions. The first question I knew how to do since I completed it a week before the interview and I told the interviewer. I briefly ran through my logic and we went forward to the next question (without writing any codes). The second question consisted of tree traversal (simple question) and the third question consisted of a little bit more input and thought. I was not able to directly answer it and asked numerous questions to get a better scope of the problem. In the end, I was able to write the program on Google Docs. A week later I was contacted for an onsite interview, which I have in a few days. I put "No" for did you get an offer because I have yet to do the on-site interview.

Level order tree traversal   Answer Question BFS Question   Answer Question Matrix manipulation   Answer Question

Apr 15, 2015
---------------
45-minute technical phone screen followed by four 45-minute onsite technical interviews. All of these interspersed with conversations with the recruiter. Everything was based on solving "academic" (algorithms & data structures) technical questions, (except for one guy, who asked an in-depth scenario question). The questions were not at all easy but pretty fair.

Given a binary tree, write a function that returns the length of the longest path (from any node to any node) in the tree.   Answer Question

Apr 16, 2015
---------------
First talked with a Google recruiter about the position. Then the recruiter forwarded my resume to the office where the job was. A week later I had a phone interview with an engineer that asked me a few questions about my job, then asked a technical question and had to code in a word document. I answered all the questions correctly but was not offered a job and was told they wanted more experience.

reverse a stack, keep track of minimum value in stack   Answer Question

Apr 8, 2015
---------------
Everyone in my university was called for interview by Google. First HR round was basic interview asking my general skills and about my resume. Then, I was scheduled for a technical phone interview and there was only one question asked which I felt was really tough. I need to write efficient algorithm as well.

There are a set of dictionary words and a set of license plate numbers. Write a code/algorithm to find the shortest dictionary word which contains all the characters in the license plate, irrespective of the order of characters. Ex: RC101 is the license plate number. The shortest word that can be found in the dictionary is CAR which has characters 'R' and 'C' in the license plate.   1 Answer

Apr 10, 2015
---------------
I applied by employee reference. And then I waited for a month until someone contact me by email. Then we scheduled times for three phone interviews in one day, and each of them takes 45 minutes.

Read n by read 4. Calendar. Check whether any number in a sorted array is majority number.   1 Answer

Apr 9, 2015
---------------
Firstly there are 2 rounds of phone interview and then onsite. The entire process took about 4 weeks of time. The questions are based on real life examples. It was not very difficult but they expect a perfect code.

Utf-8 encoding and implement a online key board   Answer Question

Apr 6, 2015
---------------
I was referred by a contact at Google and went directly to an onsite interview. First came a tour around the building and then the coding interviews. An interview took 45 minutes and there was no break between them. I had three coding interviews in the morning, followed by lunch with an employee who was not one of my interviewers, and finally the last coding interview. Three of my interviewers went directly towards coding questions. There were two in my interviews with them. The other interviewer asked questions about my resume so we only had time for one coding question.

Implement the stack structure and its functions (push, pop, empty)   2 Answers

Mar 28, 2015
---------------
I applied through employee referral. First received a phone screen with recruiter asking about availability, role sought and skill domain. This was followed by phone screen for engineering Interview. After some days received messsage

One of the question was to write online code   Answer Question

Mar 27, 2015
---------------
Recruiter reached out through email. Recruiter told me about the interview process and how it would be a phone screening, and if that was passed, there could be an onsite interview. Then the recruiter setup the behavioral call and technical call for the following week. Did not get past the first technical interview. Recruiter called me and told me I could apply again the next year. Very polite and I will be trying again.

Asked me typical data structure and algo questions. Just study one of those interview books and try your hardest.   Answer Question

Mar 29, 2015
---------------
contacted through the recruiter and had a chat with him initially, after which I was set up for a phone interview based on coding. They will test your coding on google doc . Next on the day of interview I was asked to write a code on BST i gave the correct and best solution. Next day I was given a reject.

BST TO BINARY TREE?   Answer Question

Apr 5, 2015
---------------
Consisted of two phone interviews: the first being primarily around job responsibilities and general information about myself (passions, coursework, etc.) The second round of interviewing was based entirely around obscure coding problems.

The second interview focused mainly on problem solving skills in Java and C++. The problems themselves had multiple answers, designed to trick the interviewee. Despite my preparation, the questions asked were incredibly difficult. It focuses more on creative problem solving skills rather than current skillset.   Answer Question

Apr 1, 2015
---------------
Submit resume online -> contacted by recruiter -> asked to submit unofficial transcript-> three phone interviews (which went pretty badly) The overall experience is great. I learned a lot during my failed attempt, lol.

Some coding problems, time complexity of your algorithm,etc.   Answer Question

Apr 3, 2015
---------------
I recently had a phone interview. It was pretty goon real life examples. It was not very difficult but they expect a perfect code.

Utf-8 encoding and implement a online key board   Answer Question

Apr 6, 2015
---------------
I was referred by a contact at Google and went directly to an onsite interview. First came a tour around the building and then the coding interviews. An interview took 45 minutes and there was no break between them. I had three coding interviews in the morning, followed by lunch with an employee who was not one of my interviewers, and finally the last coding interview. Three of my interviewers went directly towards coding questions. There were two in my interviews with them. The other interviewer asked questions about my resume so we only had time for one coding question.

Implement the stack structure and its functions (push, pop, empty)   2 Answers

Apr 9, 2015
---------------
Firstly there are 2 rounds of phone interview and then onsite. The entire process took about 4 weeks of time. The questions are based on real life examples. It was not very difficult but they expect a perfect code.

Utf-8 encoding and implement a online key board   Answer Question

Apr 6, 2015
---------------
I was referred by a contact at Google and went directly to an onsite interview. First came a tour around the building and then the coding interviews. An interview took 45 minutes and there was no break between them. I had three coding interviews in the morning, followed by lunch with an employee who was not one of my interviewers, and finally the last coding interview. Three of my interviewers went directly towards coding questions. There were two in my interviews with them. The other interviewer asked questions about my resume so we only had time for one coding question.

Implement the stack structure and its functions (push, pop, empty)   2 Answers

Mar 28, 2015
---------------
I applied through employee referral. First received a phone screen with recruiter asking about availability, role sought and skill domain. This was followed by phone screen for engineering Interview. After some days received messsage

One of the question was to write online code   Answer Question

Mar 27, 2015
---------------
Recruiter reached out through email. Recruiter told me about the interview process and how it would be a phone screening, and if that was passed, there could be an onsite interview. Then the recruiter setup the behavioral call and technical call for the following week. Did not get past the first technical interview. Recruiter called me and told me I could apply again the next year. Very polite and I will be trying again.

Asked me typical data structure and algo questions. Just study one of those interview books and try your hardest.   Answer Question

Mar 29, 2015
---------------
contacted through the recruiter and had a chat with him initially, after which I was set up for a phone interview based on coding. They will test your coding on google doc . Next on the day of interview I was asked to write a code on BST i gave the correct and best solution. Next day I was given a reject.

BST TO BINARY TREE?   Answer Question

Apr 5, 2015
---------------
Consisted of two phone interviews: the first being primarily around job responsibilities and general information about myself (passions, coursework, etc.) The second round of interviewing was based entirely around obscure coding problems.

The second interview focused mainly on problem solving skills in Java and C++. The problems themselves had multiple answers, designed to trick the interviewee. Despite my preparation, the questions asked were incredibly difficult. It focuses more on creative problem solving skills rather than current skillset.   Answer Question

Apr 1, 2015
---------------
Submit resume online -> contacted by recruiter -> asked to submit unofficial transcript-> three phone interviews (which went pretty badly) The overall experience is great. I learned a lot during my failed attempt, lol.

Some coding problems, time complexity of your algorithm,etc.   Answer Question

Apr 3, 2015
---------------
I recently had a phone interview. It was pretty good. They asked basic data structure complexities first followed by 2 coding questions. Fortunately they weren't as bad as I thought they would be. My experience with that interview said you need to be clear with the basics - writing code to do basic data structure manipulation. And to have speed while doing so. That's all.

1. Convert sorted array to bst. 2. Find in-order successor to a given node in binary tree.   1 Answer

May 13, 2015
---------------
I applied online. I had a mail for a online coding assessment. 2 hours to do two problems. I had to choose a language. I succeed in one of the two problems. I received an email 1 week later that I was not a good fit for the position

Coding assessment, problem with arrays   Answer Question

May 20, 2015
---------------
I underwent a quick screening interview which went fine. There were several months between the screening interview and the onsite interview. The onsite consisted of four technical interviews. This is where things got annoying. There were three or four weeks of response lag between the final interview and the results.

Please do not share interview questions.   1 Answer

May 19, 2015
---------------
I was contacted by a recruiter via Linkedin. We planned to schedule an interview in March. The recruiter left his job but he referred me to his colleague who scheduled the interview with an engineer at Google. The initial interview was online using Hangout.

Given a list of intervals and a new intervals, return a set of new intervals that are disjoint.   1 Answer

Jul 8, 2015
---------------
4 rounds interviews, after first 2 one employee takes you to lunch ( does not count behavior question) . The questions are all related with algorithms and data structure, and I never saw those questions on leetcode. You must have deep understanding of algorithms and data structure to pass it. Plus, the interviewers are clever and can follow you idea quick.

NP problem (MAZE path)   Answer Question

Jun 6, 2015
---------------
1 Phone Interview 1 On-Site First round was a normal phone interview with a couple of Data structure questions.On site involved graph and dynamic programming and trees(basic) the graph was difficult to solve I mean I took the entire time to get the approach.Dynamic Programming was ok.Tree was easy.Total 4 back-back rounds for on site

Basic DS related question cared more about approach than answers   1 Answer

Sep 9, 2015
---------------
After 2 weeks applied online, I got the phone interview chance. it's a phone interview, interviewer is nice and friendly, and love to give you hint when you stuck. First question is Best Time to sell stock on Leetcode, and second is you need to wait a day to buy new stock after you sell.

Best Time to sell stock on Leetcode   1 Answer

Jul 24, 2015
---------------
First Interview, the interviewer was pretty nice, first talked about one of my android project and then gave me 2 technique question. I cannot solve the second question, so i was rejected. 2 questions: 1. Best Time To Sell Stock 2 on Leetcode 2. follow up: same as question 1, but with 1 restriction: after you sell your stock, you cannot buy stock on next day. now what is the max profit.

1. Best Time To Sell Stock 2 on Leetcode 2. follow up: same as question 1, but with 1 restriction: after you sell your stock, you cannot buy stock on next day. now what is the max profit.   1 Answer

Jun 24, 2015
---------------
The process consisted of a phone screening with an HR rep, a technical interview over the phone, and 3 interviews in person at a google headquarters. Overall I can't complain about my experience but I was a little disappointed that the phone interviewer didn't even bother giving me his name.

Manipulating strings in a datastructure   Answer Question

Oct 7, 2015
---------------
One of the most common questions in an interview is “Tell me about yourself.” Actually, it is not even a question--it is an invitation. It is an opportunity to share with the interviewer whatever you think is important ind I practiced solving questions on the whiteboard and had I done mock up interviews I should have been able to handle it beautifully. The engineers who did the interviews, were all so nice and smart. The recruiters, oh well.

A question about playing a game of two players.   Answer Question

Feb 27, 2015
---------------
A recruiter contaced me via LinkIn and we had a short talk. I arranged the phone interview on one month later. He asked my most challenging project and what I've learnt from it. Then I was asked to write code and what is the time/space complexity.

transform(char*, size_t) delete all 'a's from the string   Answer Question follow-up: delete all 'a's from the string and change 'b's t o'bee'   Answer Question

Feb 26, 2015
---------------
It was a long process. here is the timeline (day 0) submitted resume through employee (day 20) heard back and scheduled phone interview (day 35) phone interview (day 55) heard back and tried to schedule on-site interview (day 85) on site interview (day 115) got rejection leetcode website helped me a lot for preparation. on site interview had 5 interviewers. 4 of them were nice and kind but 1 of them was not. He doesn't say a good thing about any solution that is best or part or best. After learning about my thesis he said the problem is easy.

find sum of numbers in the given range on the given binary search tree   2 Answers

Feb 27, 2015
---------------
A recruiter contaced me via LinkIn and we had a short talk. I arranged the phone interview on one month later. He asked my most challenging project and what I've learnt from it. Then I was asked to write code and what is the time/space complexity.

transform(char*, size_t) delete all 'a's from the string   Answer Question follow-up: delete all 'a's from the string and change 'b's t o'bee'   Answer Question

Feb 26, 2015
---------------
It was a long process. here is the timeline (day 0) submitted resume through employee (day 20) heard back and scheduled phone interview (day 35) phone interview (day 55) heard back and tried to schedule on-site interview (day 85) on site interview (day 115) got rejection leetcode website helped me a lot for preparation. on site interview had 5 interviewers. 4 of them were nice and kind but 1 of them was not. He doesn't say a good thing about any solution that is best or part or best. After learning about my thesis he said the problem is easy.

find sum of numbers in the given range on the given binary search tree   2 Answers

Feb 12, 2015
---------------
On campus interview two 45 minutes back to back. Very few to no behavioral questions. Did not ask much about past experience. Went straight to technical portion of the interview. Two programming questions each in the language of your own choosing. Given around 15-20 minutes per question. Last 5 minutes were for questions. Interviewers were nice, gave great advice.

Design the game snake. Some questions on the Iteration interface and some algorithms and Big-O quesitons   Answer Question

Jan 29, 2015
---------------
I only had two phone interviews. First one was fairly easy: What is the time complexity of quick sort? Inserting into a binary tree? The second one was a coding problem.

You are given an n by n array filled with '0's, and you have to set randomly X number of '1's in that array. Looping and generating x random number doesn't work as you might get the same random number (especially as X gets closer to n*n, collisions will become more likely in which case you'll loop for a very long time before filling all the '1's). All positions must have the same probability to get selected, and the array might be huge.   14 Answers

Feb 21, 2015
---------------
1. Applied Online 2. Heard back two days later - got phone interviews 3. There were three back to back phone interviews 45min/each with 15min breaks 4. One fairly difficult questions for each interview + brain teaser

Know your data structures, algos, and inheritance concepts   Answer Question

Feb 20, 2015
---------------
Really technical! After making sure I am the right candidate to talk to, the interviewer started to type the description of an algorithm problem on Google Doc. It was my first phone interview so I was really nervous. Cannot remember much details but I know I didn't answer it well. The result is a rejection phone call.

An algorithm problem on matrix.   Answer Question

Feb 20, 2015
---------------
Applied online for a month with no reply, so I found a googler for recommendation. Got interviews in two weeks. Three interviews in a day. It's my fiist job interview so I was very nervous and insecure, but the interviewers were all very nice and patient.

A question about adjacency matrix, a question about permutation, a question about hashmap, a question about dynamic programming.   Answer Question

Feb 20, 2015
---------------
It was three rounds back to back of phone interviews. Each one is 45 minutes exactly. Interviewers are very nice. In the last five minutes I got to ask them as question.

Basic programming questions involving string manipulation, binary search, three traversal.   Answer Question

Feb 20, 2015
---------------
I just get through Technical Phone Screening. I applied via campus recruiting. Recruiter request to fill out some information. The recruiter assigned time slot. The Google engineer with unique accent called me. He asked some brief question regarding my resume, and he started the coding problem. I was screwed up, and he tried to give some sub-problem that could be a hint for the coding assignment after 30 minutes has elapsed. After 40 minutes elapsed, he explained the brief solution. He and I also used Google Docs to show my code. It was somewhat hard to communicate with the interview because of his somewhat unique accent. After several days, I got some notice that I would not be considered for next interview.

Cannot specify. The coding problem is related graph. The problem was concise, but somewhat tricky. I am actually EE engineer. I have learned Data Structure, but I am not really completely used to it. That was a reason why I am screwed up.   1 Answer

Feb 5, 2015
---------------
The recruiter contacted me via email. We set the time and data for a technical phone interview up in the email. The recruiter also sent a list of websites and great resources to let you know what to review and to expect. During the interview, he directly moved to the technical part. The technical problem took about 45 minutes, and at the end there is the Q&A where the interviewer answers any question you might have about the company in general.

Four Questions Asked: 1. To find a longest palindrome in a string. 2. What is a HashSet ? Difference between HashSet and TreeSet. 3. Given a list List&lt;x&gt; and a function f: x -&gt; y, convert the list to map i.e. Map&lt;x, y&gt; 4. What happens in the background (whole procedure) when you type a URL till the page is displayed ?   2 Answers

Feb 11, 2015
---------------
I only got as far as the technical phone screen as I coded most of the solution but got stuck at the boundary cases. I was asked about former projects.

Convert a sorted array of integers to a balanced binary search tree   2 Answers

Feb 18, 2015
---------------
I had two technical interviews back to back from two different developers. The interviews were pretty standard and fair. They each asked a few brief initial questions about my resume and then the rest were technical questions about basic data structures and algorithms. I thought the questions asked were interesting and appropriately challenged. I wasn't adequately prepared for the technical interview and didn't do well enough to get the offer.

Asked about various properties of multiple core data structures.   Answer Question

Feb 7, 2015
---------------
1st round: 3 technical interviews 2nd round: a bunch host matching interviews (I'm still on this phase) Update: So I had some host matching interviews, where basically we discussed my qualification and the projects, almost no technical questions. I liked all of them and I think they liked me too. Got matched with the one I like the best.

NDA, so I can just provide some vague info: 1st technical interview: I solved 2 problems: binary tree related, look-up table / hash table 2nd technical interview: I solved 1 problem: graph travel (DFS, BFS) 3nd technical interview: I solved 1 problem: hash table related   1 Answer

Jan 12, 2015
---------------
I am close friends with current employees at Google and I personally know the CEO. I figured with that I could get a job. I was given an interview, but once they discovered I didn't have a college degree from Yale/Harvard/MIT, etc. I was canned.

Why is the sky blue?   1 Answer

Feb 10, 2015
---------------
four technical interviews, three of them are easy, one is hard. Duration lunch time, one of the interviewer will you to lunch as Google's restaurant and tour you around the campus if possible.

Graph traversal, graph search, permutations, distributed system design, etc. About 8 questions in all for me. You should be able to do 1 to 2 completely coded questions in 45 minutes (depending on question difficultly).   Answer Question

Feb 28, 2015
---------------
Contacted by recruiter for a position in the Mountain View office. Two phone screens followed by a 4-hour on-site interview. Technical questions were challenging but nothing that can't be prepared for by being really comfortable with basic Algorithm and Data Structures knowledge. My advice would be to spend a lot of time practicing coding algorithm questions with a friend on a white board. I did my questions in C++, but Java is also an option.

Can't go into specifics, but surprisingly no questions regarding Hash Tables. Almost all of them involved recursion, and one interviewer asked me a math question.   Answer Question

May 2, 2015
---------------
After an informative interview with a recruiter who found me on LinkedIn, I had one fairly easy phone screen who asked me a philosophical question about AI (I have a Philosophy background) and a technical question. After passing this round, I had four one-on-one one hour interviews on-site in Seattle. They weren't incredibly hard, but it was my first interview out of college and I didn't do well in two of them.

I signed an NDA, so cannot disclose the exact questions. Prepare your algorithms and data structures questions well, and actually implement them. Websites like careercup and leetcode are valuable resources to prepare. Focus on binary trees, hash tables and dynamic programming questions. Lastly, don't be afraid to go with your gut, sometimes you may end up implementing a solution that might be better than what your interviewer had in mind!   Answer Question

Mar 25, 2015
---------------
I applied online, and a recruiter got back to me very promptly. There were two rounds of phone interviews and one hectic day of on-site interviews (I interviewed on site with three other companies, but this was by far the most gruelling experience) at their headquarters in Mountain View. There were five interviews (excluding the lunch) in the on-site process: four algorithmic/coding interviews, and one interview about my research interests. After interviewer feedback, my packet went to the hiring committee and was finally approved by the executive management committee. All told, the process took just under three months. While Google has a very simple, smooth and responsive application process that belies their current size, the interview process itself shows just how big the company has become. While the recruiter was very prompt in reaching out to me in the beginning, they were pretty slack in responding to my further follow-ups. In fact, I'm certain that I got done in less than three months only because I had a couple of counter-offers, and otherwise I could have gone through this process for a few more months. On top of this, there was absolutely no one from recruiting or HR to show me around the campus or to walk me to the exit after the end of the day during my on-site visit. As a result, the experience felt slightly impersonal.

Write a code that returns the deepest node in a binary tree. If the tree is complete, having two same depth of node, return the rightmost node.   3 Answers

Jan 28, 2015
---------------
The interview was over the phone, and I was interviewed by three software engineers, 45min each. They all asked coding problems. Only the first interviewer asked about my work, why I wanted to work at Google, what can I do at Google, etc. All three interviewers, at the end, asked me whether if I had a question for them. I coded on Google Doc, which the recruiter sent the link via email. The interview time is on each Google Doc.

Implement hash table. Given a mountain of integers :: like 1 2 3 9 6 5 or 4 9 3 give the maximum   7 Answers

Feb 8, 2015
---------------
The interview was decent. Was asked an easy question initially followed by a tough question. The interviewer didnt ask anything about the interview, and jumped straight to the coding questions. Also it was a phone screen so I wasnt given any hint.

No Question
Oct 5, 2015
---------------
It's usual 2 phone screens and then on-site. On site is one day - 6 interviews with lunch break. Nothing really extraordinary. Interviewers are pretty relaxed but well organized, they keep track of time for you, but won't push you. The only suggestion I would give: don't drink too much coffee. By the end of the day you will be overcaffeinated and you will screw up your last interview(s).

Questions are all pretty strait forward. You need to know your data structures and algorithms, just usual stuff: BFS, DFS,...   Answer Question

Feb 3, 2015
---------------
Search opening positions on Linkedin. Applied on Google's website. Got an opportunity of three phone interview after one week. Took these three phone interviews after another three weeks. These three interviews have different styles. Some likes some high level questions followed with some design problems. Others like coding and algorithm design from the beginning to the end.

Signed NDA. Some basic algorithm questions and two high level questions.   Answer Question

Feb 3, 2015
---------------
Google recruited from my college so it wasn't too hard to get an interview. There were two coding interviews (by phone and Google Docs) which went over basic data structures and algorithms. The interviewers were polite and very willing to talk about their work. I messed up on some of the questions, but it was overall a good experience.

There was a problem about data structures that was rather difficult.   Answer Question

Feb 19, 2015
---------------
Three 45 minutes interview. In all interviews I was asked to solve coding problem. Whenever you solve one, they give you another one , based on the previous one. Then they ask you about time complexity and how to improve the running time.

Constructing Trees and other problems solved by Divide and Conquer.   Answer Question

Feb 19, 2015
---------------
Applied online and had to solve some online coding assessments. Couple of days later got an e-mail from the HR and arranged a technical phone interview with one of the engineers. They also prepared some docs and info on what to prepare for the interview.

Basic concept of C and question about linked list.   Answer Question

Feb 20, 2015
---------------
Referred by classmates, got 3 round technical phone interviews, coding on Google docs, general technical interview question including map, hashing, memory efficient array, missing range, dynamic programming, streaming data average and so on. Not too difficult and some of them are interesting. Results came two weeks after the interview process finished. Bad luck!

map, hashing, memory efficient array, missing range, dynamic programming, streaming data average and so on   Answer Question

Feb 27, 2015
---------------
2 Phone interviews 4 Onsite interviews Beginning the process you will receive an email from the recruiter, and you will continue talking with them withing the entire process. They also give you some hints for preparing for the interview. All the inverviews were focused on algorythms, each one really different and sometimes ticky and funny. You need to be open-minded to catch the trick and get in depht with the problem. Really awesome experience.

NDA protects to get in details but all questions have its own difficulty. Without algorythm's knowledge, anyone would become stuck.   1 Answer

Feb 24, 2015
---------------
I was contacted by a recruiter through LinkedIn. They told me they researched my profile on GitHub an LinkedIn and were interested in discussing job opportunities. A lot of my peers were also contacted. The job would have been in their Mountain View HQ. The interview was fair, however the quality of the phone connection was rather poor and I had to ask the interviewer to repeat himself many times and I think it did get on his nerves, but only for a few second after which he calmed down again. My performance was in need of improvement and their decision not to pursue further was understandable.

define a tree, how to check whether a n-ary tree is unival tree (the value in each node is same). How to get how many unival tree in a n-ary tree   Answer Question

Mar 2, 2015
---------------
Three 50 minutes technical phone interviews in total.Two of them spend about 15 minutes talk about my project experience, and move to code. One of them directly let me do the coding.

String manipulation and hash tables   Answer Question

Mar 16, 2015
---------------
Initial phone screen with a recruiter just to get some background information, then an over-the-phone techinical interview with a software engineer followed by 4 face-to-face interviews with 4 different engineers in one day.

No Question
Apr 26, 2015
---------------
I was contacted by a recruiter to see if I would be interested in applying for a software engineering position with Google. He set up a phone interview with an engineer in Mountain View a couple of weeks later. As expected, the phone interview was challenging but the interviewer was very friendly and helpful.

Questions dealing with CS fundamentals, data structures, and algorithms.   Answer Question

Apr 13, 2015
---------------
Tough lots of coding qsabout coding and algorithms and data structures also had to code on a goodle doc. The interviewer was very nice and made me feel comfortable but I didn't understabd one of the questions. It was a tough but friendly experience, this was my third round phone interview

Code a method to split a string into an array based on spaces   Answer Question

Apr 4, 2015
---------------
The interview process dealt a lot with hashmaps. Know hashmaps. Use hashmaps to solve complex interview problems. The first test interview was not as difficult as I thought. It was pretty straight forward, but make sure to check up on key Java principles as well as common algorithms. Interview is all about problem solving, so be prepared to think. Talk through the process with the interviewer.

What is your favorite programming language?   1 Answer

Apr 6, 2015
---------------
the hr find me in the Linkedin, and we talk about when I graduate then schedule a interview for me. they will give you enough time to prepare for the interview. as usually, they will open a google doc for you and you need to code on the document to show you understanding of the question

find the Majority Element in a array   1 Answer

Mar 10, 2015
---------------
Talked to an employee of Google who helped to submit my resume. I got three 45 min phone screens, asked about resume in the beginning and then went on to technical questions. Overall, the interview was pretty difficult as there were a lot of things that they asked that I did not have as good of a grasp on as I wish I did.

Asked question about unival k-ary trees   Answer Question

Mar 15, 2015
---------------
The process took more than 2 months. First is a phone interview with coding on a shared online google doc, two questions, 45 minutes, one is string, the other is number manipulation. After two weeks, I got the onsite with 4 rounds of interview in which three are about algorithms and one is about system design. The questions are not difficult except the system design. I solved all the questions with positive feedback but still got rejected by the Hiring committee (HC) due to the reason of lack of enough industry experience.

1. Video/audio sync point search. 2. String decoding/encoding question. 3. Sorted array question.   Answer Question

Mar 15, 2015
---------------
A phone interview followed by a full-day onsite technical interview. During the onsite, I interviewed with two engineers from the general Google employee pool and three from the group I would be working with. The questions focused on algorithm development and whiteboard coding exercises, object-oriented design methodology and practice, and one interview with specific questions on dynamic systems which was relevant to the position for which I was interviewing. I also had a one-on-one lunch that was not technical but I suspect was a behavioral interview.

Define a function that takes in the state of a Sudoku game and returns one of three states: error (if the user has input an erroneous entry), error-free but incomplete, or solved.   2 Answers

Aug 24, 2015
---------------
I applied to careers website and found a matched open position. Recruiter contacted and asked some basic questions about background and scheduled a phone screen interview. Phone screen interview was about 1 hour and 15 mins, they set up a google docs for coding and a phone call.

They asked only one coding question for phone screen interview, I was asked about algorithms and data structures and time complexity. DONT MAKE ANY SYNTAX MISTAKES. also, while writing the program, it is very important to keep talking and explain your approach in solving the problem.   Answer Question

Aug 8, 2015
---------------
Phone call interview. it took no more than 40 minute. Interviewer called 5 mins late. The phone call quality wasn't the best and I couldn't really discuss my points. Questions were neither easy nor hard. Very resealable questions that you might be able to solve easy in normal situation when there is no stress of interview and phone call difficulties. Overall that was a good experience for me and it let me hone and fresh some of my skills.

1- hash table 2- statistics   Answer Question

May 8, 2015
---------------
Recruiter was great with communication, and very patient about me scheduling my interview for when I was ready. Coming from a non-CS background, I spend a good 20 hours/week studying for two months. I felt pretty well prepared... My expectations for the phone screen did not line up with what I expected. It as pretty much 'now start coding the answer to this fairly complicated problem...'. Pretty hit or miss. I was expecting more informal conversation and a basic data structures & algorithms question or two - and then something like this for the onsite interview.

Question about determining the shortest length word you could create with a set of letters.   1 Answer

Aug 24, 2015
---------------
I applied to careers website and found a matched open position. Recruiter contacted and asked some basic questions about background and scheduled a phone screen interview. Phone screen interview was about 1 hour and 15 mins, they set up a google docs for coding and a phone call.

They asked only one coding question for phone screen interview, I was asked about algorithms and data structures and time complexity. DONT MAKE ANY SYNTAX MISTAKES. also, while writing the program, it is very important to keep talking and explain your approach in solving the problem.   Answer Question

Aug 8, 2015
---------------
Phone call interview. it took no more than 40 minute. Interviewer called 5 mins late. The phone call quality wasn't the best and I couldn't really discuss my points. Questions were neither easy nor hard. Very resealable questions that you might be able to solve easy in normal situation when there is no stress of interview and phone call difficulties. Overall that was a good experience for me and it let me hone and fresh some of my skills.

1- hash table 2- statistics   Answer Question

May 8, 2015
---------------
Recruiter was great with communication, and very patient about me scheduling my intervie of Google who helped to submit my resume. I got three 45 min phone screens, asked about resume in the beginning and then went on to technical questions. Overall, the interview was pretty difficult as there were a lot of things that they asked that I did not have as good of a grasp on as I wish I did.

Asked question about unival k-ary trees   Answer Question

Mar 15, 2015
---------------
The process took more than 2 months. First is a phone interview with coding on a shared online google doc, two questions, 45 minutes, one is string, the other is number manipulation. After two weeks, I got the onsite with 4 rounds of interview in which three are about algorithms and one is about system design. The questions are not difficult except the system design. I solved all the questions with positive feedback but still got rejected by the Hiring committee (HC) due to the reason of lack of enough industry experience.

1. Video/audio sync point search. 2. String decoding/encoding question. 3. Sorted array question.   Answer Question

Mar 15, 2015
---------------
A phone interview followed by a full-day onsite technical interview. During the onsite, I interviewed with two engineers from the general Google employee pool and three from the group I would be working with. The questions focused on algorithm development and whiteboard coding exercises, object-oriented design methodology and practice, and one interview with specific questions on dynamic systems which was relevant to the position for which I was interviewing. I also had a one-on-one lunch that was not technical but I suspect was a behavioral interview.

Define a function that takes in the state of a Sudoku game and returns one of three states: error (if the user has input an erroneous entry), error-free but incomplete, or solved.   2 Answers

Aug 24, 2015
---------------
I applied to careers website and found a matched open position. Recruiter contacted and asked some basic questions about background and scheduled a phone screen interview. Phone screen interview was about 1 hour and 15 mins, they set up a google docs for coding and a phone call.

They asked only one coding question for phone screen interview, I was asked about algorithms and data structures and time complexity. DONT MAKE ANY SYNTAX MISTAKES. also, while writing the program, it is very important to keep talking and explain your approach in solving the problem.   Answer Question

Aug 8, 2015
---------------
Phone call interview. it took no more than 40 minute. Interviewer called 5 mins late. The phone call quality wasn't the best and I couldn't really discuss my points. Questions were neither easy nor hard. Very resealable questions that you might be able to solve easy in normal situation when there is no stress of interview and phone call difficulties. Overall that was a good experience for me and it let me hone and fresh some of my skills.

1- hash table 2- statistics   Answer Question

May 8, 2015
---------------
Recruiter was great with communication, and very patient about me scheduling my interview for when I was ready. Coming from a non-CS background, I spend a good 20 hours/week studying for two months. I felt pretty well prepared... My expectations for the phone screen did not line up with what I expected. It as pretty much 'now start coding the answer to this fairly complicated problem...'. Pretty hit or miss. I was expecting more informal conversation and a basic data structures & algorithms question or two - and then something like this for the onsite interview.

Question about determining the shortest length word you could create with a set of letters.   1 Answer

May 12, 2015
---------------
I have been contacted by a university recruiter. I had 3 phone interviews and one coaching session. Finally, I had on-site interview. I was asked four questions during my onsite interview on these areas: hashing, caches, compilers, graphs, and distributed algorithms.

What was one of you professional achievements? In an array of integers, return smallest positive integer that is not in the array. Reverse a string. Reverse only characters in odd position in a string.   1 Answer

May 12, 2015
---------------
I applied on the Google website in late February. About three days after a recruiter send me a email and gave me some material about how to prepare the interview and the interview process. Then a recruit coordinator send me an email about scheduling the interview. I took the interview four weeks later because I want to prepare. The first round is three 45 minutes phone interview. Then two weeks later I was refused.

Some coding question and behaviour question.   Answer Question

Jun 23, 2015
---------------
Had the first technical phone interview. Interviewer was 15 minutes late to call me. When the call did start, the interviewer didn't really do an introduction, they didn't discuss my background, just immediately started in on the technical questions. This was my second time interviewing with Google, and the process was much worse this time around.

The basically asked me to do a substring dynamic programming problem.   Answer Question

Jan 28, 2015
---------------
One recruiter found me on LinkedIn. And then she ask me to send my resume to her. Here are the procedure of interviews. First comes one phone interview.Then after that comes to one on-campus interview. And finally one onsite interview.

What's your favorite product in Google? Do you have any feedback?   1 Answer

Jan 28, 2015
---------------
Submitted the resume and got email from HR, arrange phone interview. The interview has two part, with each one 45 min. The first part, they went through my resume and asked some coding problems, the second part, directly asked the coding problems.

Remove the duplicates from an array in place   4 Answers

Jan 23, 2015
---------------
Was contacted by a recruiter about a position at Google. Then had a technical skills phone interview where I wrote out code on my personal computer while the interviewer "watched" remotely. Then was brought onsite for a technical interview comprised of five rounds of ~45 minute interviews. Also included a break for lunch.

As per the agreement I'm unable to say what the questions were. They can be tough but they really are fair Computer Science questions.   Answer Question

Feb 17, 2015
---------------
Applied online and got a prompt reply within 2 days. The HR scheduled a phone screen. The phone screen went good and was called for onsite. There are about 4 rounds of an hour each and a luncheon with the staff explaining about the atmosphere, work, etc. The luncheon was friendly while the onsite interviewers were keen on noting the code from white board for review. It was really difficult to gauge whether proceeding in the right direction. Would expect a real one on one experience instead of "solve the problem at hand" attitude from Google. The questions were not that hard as given in the reviews. Got a reject after two weeks.

Given a string, list the word occurrences in the descending order of their frequencies.   2 Answers Design a mobile number registration scheme. Follow up, what are the possible ways of storing the numbers and explain about its pros and cons.   Answer Question Given a source and destination in the route with a list of intermediate points in a graph, find the list of intermediate points such that the minimum distance between the two points is x and the number of intermediate points to visit on route is y.   Answer Question A log is generated as &lt;jobID, start time, end time&gt;. Write a code for the printer class such that the output is of ascending order of the jobID regardless of the time at which it has completed.   Answer Question Given a string, find the longest substring and its length without repeating characters. Given an array of numbers, find the largest sum if array is a. non-cyclic, b. cyclic   Answer Question

Jan 22, 2015
---------------
The interviewer is late and do one questions about hashmap via google doc for 30 min. Didn't discuss a lot about my old school project. The question is not tricky at first but he added more requirement as pretty tough because the interviews were challenging. Two phone interviews and there are five onsite interviews. There are many other descriptions of their interviews so I guess my description here is just for simple reference. Good luck.

I would like to respect NDA   Answer Question

Jan 13, 2015
---------------
I got a mail regarding phone interview. There were 3 phone interviews. Level medium/difficult. I told solutions to all but they always wanted better solutions. All questions were about basic data structures ( Array, Linked lists, Strings etc)

Host match is very difficult   Answer Question

Jan 12, 2015
---------------
The process was smooth. An employee referred me, and I got notification from HR the next day. Then we set a date for interview, which was one month later. Then I took the interview(3 phone interviews in a row!) and processed into the host match phase. Now i have not matched to any of the teams.

No Question
Jan 11, 2015
---------------
Contacted HR, got scheduled three phone interview back to back two days before Christmas. In all of the interviews, they introduced themselves briefly, and started asking technical questions. There were 2 questions per interview, and some followups in-situ. Due to NDA, I will not share the details. But they covered a lot topics with 3 interviews, binary search, array, time complexity, recursion, tree, etc. You have to prepare many topics if you want to get pass google interview. Interviewers were helpful in general, and very patient. Still waiting for the result of phone interview.

NDA   Answer Question

Jan 9, 2015
---------------
two 45-mins interviews. the interviewer was late for 15 mins, and asked questions here and there. Some questions were rephrased multiple times, so it was difficult for me to follow. Those algorithmic questions were very easy to give brute force solutions, but I needed to give more than one solutions. The difficult part was I didn't know in which direction I should think.

how do you select words randomly and proportionally from a word list? Another question was that there was a class defined as "final", what will happen if I instantiate this class?   1 Answer

Jan 8, 2015
---------------
I aplied online, after two weeks I received an email to schedule a screening phone interview. It lasted 20 mins. The recruiter described the position and asked questions about my technical background. I am waiting for technical interview.

basic screening questions   Answer Question

Jan 7, 2015
---------------
One 45 minute phone interview and five 45 minute on-site interviews until I got the informal offer (more "approval"). Then three team fit calls and many other various phone calls before I got the offer.

"Can you explain to me how Python works?"   Answer Question

Mar 20, 2015
---------------
The most long and drawn out bureaucratic process. There are multiple phone interviews. The first starts with someone from HR who will ask you basic CS and systems type questions. They have no idea what the answers are but this is the process. There are then a number of other phone interviews (3 at least) before you are asked to come onsite. They will drag it out for months for some reason. Maybe it's to see if you really want to work there, maybe it's company hiring incompetence, who knows. It's a nice place to use for interview practice if you are just starting out interviewing after working for many years. It's an ivory tower view of the working world which reflects how they conduct their hiring processes.

All types of systems, UNIX, filesystems type question. One question in particular was "When you type www.google.com into a browser what happens?" I gave an answer of DNS resolving, first the client will see if it has an IP address cached for Google and if not contact one or more nameservers. I then went into detail about how DNS works and the various types of records and how the whole system has a hierarchy, zone transfers etc. At the end the interviewer asks "What really happens?" &lt;sigh&gt; Many times your interviewer will have very poor English skills and you will have to constantly ask them to repeat their questions - which does not look good for you. Other questions ask about how a basic filesystem works with inodes and hard links vs soft links. For my last phone interview I was told it would be focused on computer networking and the interviewer only asked questions about filesystems - nothing about networking.   1 Answer

Mar 10, 2015
---------------
One phone interview, then the onsite interviews. The whole process was smoothly and comfortable. For the four round onsite interviews, I gave solutions for each question and implement them with few bugs. Except for the last interview, the interviewer asked me to skip all the details and just implement pseudo code. I didn't understand why I was rejected...

Given the decode function, to implement the encode function: abckkkkkde-&gt;abc5xkde For some case: abc3kkkkkde, both encode 3 and kkkkk-&gt; abc1x35xkde   1 Answer

Mar 30, 2015
---------------
I was referred by a friend. They flew me across the country to the office I was interested in and I got the standard sort of interview questions you've heard all about by now. The office seemed really nice, although not as over the top as the Mountain View one. My interviewers seemed smart and interested. They did a great job of making sure everything went smoothly. I heard back quickly saying I'd missed it by a hair :(.

They like recursive search questions. Be prepared for a recursive search question, because you'll almost definitely be asked one.   Answer Question

Mar 22, 2015
---------------
The process took 2+ month. I applied online and got replied several days later(really fast). A phone interview was scheduled at first. An array manipulation question was asked. And then a further improved question was asked based on that question. And them asking for optimization. Got replied two days later by phone(They love to contact by phone). An onsite interview was scheduled one month later. I went to Mountain View, San Jose. 4-interview in a row with a lunch break. The second interview was extremely hard. And then I got rejected by phone two days later. Questions are algorithm questions, but I seldom see those types in leetcode or career up. Need to have a sense for algorithm rather than remembering types of questions. Google interview questions are abnormal.

Just some hints. Iterator of Iterators. HashMap. Subsets. Binary Tree.   Answer Question

Apr 13, 2015
---------------
I applied online for this position.Got an email in 1 month asking for availability.Had interview in January 2015.3 phone interviews each 45 minute long.All on the same day.All interviews were technical interviews.Had to code in language of my choice on shared google docs.1st interviewer asked a little bit about interrupts as I have embedded systems background.

algorithms and data sturctures.   Answer Question

Jan 7, 2015
---------------
I applied online first, but no response in one month. Then I asked one of my friends to refer me and I got response in 3 days. There are 3 technical interviews. I feel so lucky that each interviewer starts with an easy question. And I complete these easy ones within 30 min. After such warm-up questions, each interviewer threw me another one which is as difficult as the medium questions on LeetCode. But they did not expect me to implement them in detail, rather they wanted me to explain the idea so that they can see how I approach to the problem. I was totally lost in one of these problems, and work out the pseudo-code solution on the rest. I just finish the interview and have no idea how it went actually, but I feel it is normal not scary at all. Hope I can hear good news from them later.

I signed NDA so I cannot go to details of each question. But one is about 2D matrix, two are about String operations.   Answer Question

Jan 14, 2015
---------------
I've applied online and met a recruiter at a university event. I'm an Electrical Engineering student that is interested in working as a software engineer. I didn't take any classes in my program to serve that purpose, therefor I self-educated myself. I bought books, did online classes, and took few CS additional classes at my university. With that said, I had to focus a lot on learning what any CS student must know, and I did that, but that didn't make me a perfect candidate yet. In my first phone interview, the only one I had, I managed to answer almost all of the questions. However, I found out that I lacked the ability to be a great user of the Java API and abilities when coding solutions. For example, I chose an array as my data structure for the solution, where maybe if I chose a linked list, I would have shown that I'm a stronger programmer. They called me 3 days after my phone interview notifying me that I was not chosen for the second on-site interview. However, the recruiter told me they were impressed by my resume, my analytic skills, and my knowledge in general. He said I need to practice coding more and I will be a great fit. He told me that he'll contact me again at the end of the year and set another interview without me even asking for it. So my advice would be this: Build a very strong knowledge of your preferred programming language. You have to show that you can utilize it the best way possible.

I was asked to sort an array of integers where all zeros come in front, the rest come later. After successfully solving it, the interviewer started making hard bit by bit. What if we want the 7s? What if we want prime numbers? What... Finally he asked me what if we were dealing with objects instead of integers.   Answer Question

Feb 5, 2015
---------------
Got onsite interviews with 6 interviews, 45 mins each back to back. Had an hour lunch time with a 1-yr employee there who shared her experience working there and showing me the result she works on. The interviews themselves were all technical on whiteboard, not much of asking questions about your experience and ask what you like to do. It's all about showing off your technical skill and thought process.

The interview questions were standard CS related topics such as graph, algorithms (BFS,DFS, traveling salesman variation kind of question),system design (which is really an open ended interview).   Answer Question

Feb 6, 2015
---------------
One phone interview. Asked questions about linkedlist and string. The first one was pretty easy. The first part of the second problem (a step stone) was also easy, but the last part (DP problem) was much harder. Because of the gap in difficulty, i kind of under estimated the last one, and tried to solve it with simple recursion, although I knew DP may be a better solution, but didn't got time to improve my answer.

String searching questions, DP style   Answer Question

Feb 18, 2015
---------------
Three telephone interviews, in the first interview, talk about the project in the cv, then two technical question, in the second interview, one technical question, in the third interview, talk about the project and then one technical question.

write system call in file system, find root of a equation, string problem, decode question   Answer Question

Feb 18, 2015
---------------
3 Technical interviews(via phone), each being 55 minutes; the interviewers also asked several ad-hoc questions that are relevant to my code. They asked about the complexity of algorithms, the size of data structures, etc..

3 coding problems(Due to NDA, cannot reveal here)   Answer Question

Feb 19, 2015
---------------
The first round of interview consisted of 3 interviews in a day. The had reached out to me in November asking me to provide details about when i would be able to interview in the month of January. They were very accommodating in terms of my free times.

I was asked how to find the maximum depth of a tree.   1 Answer

Feb 4, 2015
---------------
I got two phone interviews and 4 onsite interviews. The questions were basic algorithm questions and the onsite questions were way more difficult than phone questions. Signed the form so I can't provide questions been asked. Still waiting for the response because I have just finished the onsite.

Singed forms so no details to share   Answer Question

Feb 12, 2015
---------------
Was contacted by a recruiter via LinkedIn, set up a phone interview. Phone interview question was easy but had a hard time explaining some concepts in my code to the interviewer. Did not receive a qualifying score to receive an on-site.

Design an encoding function to condense repeating characters in a string.   2 Answers

Feb 13, 2015
---------------
The interview was a informal phone chat about the projects I had worked on. The interviewer asked me about what are the programming languages and other technologies I used and asked me to rate them according to the level of ease with which I can work with them. The interviewer asked me the key features of my projects and how many lines of code I had written and how many members in my team.

Tell me about your projects   Answer Question

Feb 23, 2015
---------------
Was referred by a Google employee. Heard back from a recruiter the next day about my information being forwarded to a recruiter. Recruiter contacted me 2 days later to schedule 3 technical interviews a month later. I had the three 45 minute technical interviews back to back. The interviews were (probably by chance) in increasing order of difficulty. I didn't feel to confident with my interviews, and I heard back the next day that they would not be moving forward with my application.

Due to NDA I will not discuss these, but know your data structures and practice talking through a problem.   Answer Question

Feb 24, 2015
---------------
3 Technical Phone Interviews, testing basic computer science knowledge. Multiple on-site interview with different project groups during project selection. Overall, very pleasant but matching with project groups may not be as fluid. Interviews did not seem too difficult - just be very vocal in thought process. Very slow getting any responses from HR.

-Basic data structures -Memory and time complexity -Unit testing   Answer Question

Feb 25, 2015
---------------
A recruiter reached out to me and set up a technical phone screening. That screening went well, and I got a second phone screening. For the second one, however, I couldn't understand my interviewer's accent. I tried asking him to repeat himself many times, but it didn't help. In the end, I did badly because I simply had no idea what he was asking of me. There were times that I wasn't even sure if he was talking about the code he wanted me to write or about my resume. Additionally, he asked me for qualifications that, if he'd read my resume, it would have been clear that was not my area of expertise. I'm mostly qualified for OO-programming at a high level, and he was asking me about computer architecture. I emailed my recruiter right after the second interview telling her my situation (politely, of course), but a week later, she called to tell me they rejected me. When I asked if she'd gotten my email, she seemed confused, and I'm not entirely sure she paid it much mind. I'm not saying I deserved to get the job, but I certainly didn't deserve to be ruled out because I couldn't understand my interviewer's accent.

Did I take Computer Architecture in college   1 Answer

Feb 28, 2015
---------------
First, I was contacted by a recruiter. They tried to set up a time to have my technical interviews. This took a while and I was scheduled for a month after I began talking to the recruiter. My interviews were 45 minutes long and I had 3 of them. After a week they emailed saying that I did not get the position.

NDA   Answer Question

Oct 6, 2015
---------------
Nice colleague, excellent weather in California, high salary, nice profits, happy environment, everything is perfect here, but hard questions, and Nice colleague, excellent weather in California, high salary, nice profits, happy environment, everything is perfect here

isPalidrome   1 Answer

Sep 21, 2015
---------------
After screening and interviewing each candidate, the selection board scores and ranks each one, then checks the references for the top-ranking people. Once they have made their decision, they contact the successful applicant, as well as everyone who was interviewed. If you are selected for the position: Congratulations! You have met or exceeded the essential qualifications of the position. You may be given a conditional offer, pending appeals from bargaining unit employees.

Describe a function that would remove duplicate lines in a text file.   Answer Question

May 27, 2015
---------------
I sent in my application through their website, and soon I was in contact with a recruiter. I then gave my availability, and had 3 phone interviews in a row a month later. Each interview was about 45 minutes long, with a 15 minute break in between each. They were all nice, but they didn't really spend any time getting to know me, they just went straight into the questions. The interview questions were fair and challenging.

Probabilistic option selection from a list of choices   Answer Question

May 25, 2015
---------------
1st phone screening interview1st phone screening interview with an emplyeee related to my background. The process was setup quickly and in a friendly manner by a university recruiter. All communication was performed over phone or email and within at least 2 days. All people invovled were fairly transparent regarding what was to be expected

Find all equilibrium points in an array of integers. An equilibrium point is a position in the array for which the sum of weights on one side equals the sum of weights on the other.   Answer Question

May 27, 2015
---------------
Contacted by a recruiter on LinkedIn. Went through a phone screen with a rude interviewer who seemed to be talking down on me from the get-go since he's been at Google for 5+ years..

One that are easy to describe run length encoding/decoding bilinear interpolation game of life Find if a path exists through two points in a graph given a bunch of uni directional edges Finding if a path down a tree exists.   Answer Question

Sep 13, 2015
---------------
One phone screen with live google docs coding. This had questions on writing simple code for a simple problem. On site, the interview were much harder and longer. 5 interviews with a wide variety of problems. Topics covered include graphs, multidimensional arrays, trees, OO design and test, and encoding/decoding. They seemed disorganized and had people missing or late for interviews.

1) Print all paths of a binary tree. 2) Do part (1) without recursion.   Answer Question

Sep 4, 2015
---------------
I did a phone screen with the recruiter and then a phone interview with a current engineer. The phone interview involved talking on the phone and coding in a Google doc that the engineer also had open. The engineer was a little bit hard to understand. The interview was fair but I wasn't very well prepared for it.

No Question
Sep 7, 2015
---------------
Initially applied for the EP program and the recruiter contacted me soon after I applied. Went through 2 rounds of technical interviews coding on a Google Doc. After 2 weeks, the recruiter contacted me saying that I would be a better fit for the traditional SWE intern pool and have another technical interview. Around 2 weeks after this last interview, my recruiter contacted me saying I had made it to host matching. A host contacted me within a week and the day after I received my offer.

Standard data structure and algorithm questions. Nothing too special   Answer Question

Dec 10, 2014
---------------
A phone screen followed by a day of technical interviews. I heard back soon after that. Google actually gives you some material to help you prepare for their interviews, so that you can do your best and they can get the most accurate sense of your ability. That's helpful considering that many topics may require a refresher from your undergrad days.

Nothing was tricky or unexpected. All the questions were straightforward traditional computer science questions.   Answer Question

Dec 30, 2014
---------------
Two phone interview, every interview ask two to three questions. 45 mins each. No general questions. Only ask tech questions, not too hard, but you need to know some basic computer science in order to answer those questions.

string serialization and deserilization   Answer Question

Dec 27, 2014
---------------
The process is pretty standard. Two phone screens followed by an onsite. The onsite was much more difficult than the phone screens and also the bar to clear is also high. Obviously, Google being a great company, there is nothing wrong with that. I would suggest their phone screens also have the same high bar as onsite. This will help in not wasting the candidates time/money and theirs. The onsite consisted of 5 sessions. The first two were dictionary and bit manipulation questions. The third was a question about how to design a system that handles and logs the urls clicked on. The last two were pretty tough graph questions for someone who does not deal with graphs in his daily work. Know the usual graph algorithms. Actually, you need to have them at your finger tips and being able to implement them in a matter of minutes so you can solve the real problem that depends on those algorithms. They seem big on graphs. I eventually got to the solutions to all the problems with a few stumbles along the way. But I guess my lack of confidence in tackling graph problems showed. The interviewers are friendly and professional. They give you clues when you are stuck. There is sometimes a shadow interviewer who is learning and taking notes. Practice writing code on white board. Know your data structures and algorithms; Practice problems on the multiple web sites - hackerrank, careercup etc. Heard approximately ten days later that they are not interested in moving forward. Not a surprise.

Finding circles with a certain amount of vertices in a graph.   Answer Question

Dec 20, 2014
---------------
Initial contact came through a recruiter and HR. I was then connected to the hiring manager and had a phone interview with him. The phone interview focused on the relevant technical area (algorithm research & development), close to my expertise and expected area of work. This went well, and I was invited for a day of onsite interviews. The onsite interviews were disappointing. Both the recruiter and hiring manager were not available, and I did not get to speak to them at all. Several interviewers were not related to the team I was interested in and seemed to be randomly selected. They barely introduce themselves. Of course, most interview questions were computer science related, some very easy and some hard. Almost none of the interview questions were actually relevant to the position I was interviewing for. The interviews were very impersonal, the interviewers are focused on getting through their standard questions and recording my answers. They are not interested in your background or testing whether you can actually solve problems relevant to the position. As a result of the above, there is actually almost no relevant discussion or engagement with the interviewers possible. I received almost zero feedback from the recruiter afterwards, other than that "impressions were mixed".

Given a sequence of n digits, where each digit can represent three (or four) letters from the alphabet (as on a phone keypad), list all words that can be formed that are also in a given dictionary.   Answer Question

Dec 5, 2014
---------------
This interview was tough, unlike my Microsoft interviews, I only got through 1 question per interviewer. The exception was one interview where I got through 2. When they say it's all about your thought process and not the answer, they really mean it. During one interview we walked through the process of solving the question together, then the last 5 minutes I programmed the solution. I actually thought it was over but a few days later, the recruiter submitted a package to the hiring committee to hire me. I really enjoyed the interview, if you get the chance to interview study graph theory.

The easiest question was to make a thread-pool.   Answer Question

Jan 23, 2015
---------------
I got contacted by a recruiter through linked in. After a behavioral interview and a phone screen (topic: input sorting - see the interview question below) I was flown out to Kirkland to interview in person. The interview process there was pretty typical compared to what you see here - several interviews over the course of a day, each about an hour long along with an hour for lunch, and each covering one or two questions. The people were all pretty nice - I enjoyed talking with both my recruiters (the first recruiter, who did recruiting for multiple offices, and the second recruiter, who dealt only with the Washington area) although the salary negotiations were pretty annoying - be prepared to deal with tactics meant to push your salary lower than you would want otherwise (although the offer was pretty damn reasonable to begin with, so I can't complain). I'm not sharing any questions from the interview process here, as per the frequently mentioned NDA, suffice to say that you will receive ample information on what you need to prepare ahead of time. See other reviews for what your interview will look like - they're all pretty much on the ball. After the interview, you're run past a hiring committee, then submitted to VPs for approval, then salary negotiations, followed by the final offer.

(from the phone screen) given a set of inputs, sort them such that the proceeding digit alternates higher, then lower than the preceding digit (i.e. 1, 5, 2, 8, 5, 10, 1, 6, 2, 3, 1, 3, 2, 10)   Answer Question

Dec 19, 2014
---------------
3 technical interviews over the phone with a google doc. No behavioral questions. First one asked some language specific questions and a hard algorithmic question (about a matrix). Second one asked a few fairly basic implementation questions and asked for a series of test cases for a function. Third one asked a long object oriented question.

Rotate a matrix   Answer Question

Dec 18, 2014
---------------
Referral to interview took about a month (I put it off for 2 weeks because of university finals). 3 45-minute technical interviews, all with code through gdocs. The recruiters are willing to listen and give hints and walk you through anything. Sometimes they'll give a little overview about themselves, other times it'll be straight to the questions. My third interviewer had a thick accent which made communication more difficult.

Signed an NDA, but nothing unexpected - data structures are important!   Answer Question

Dec 15, 2014
---------------
Applied online through the standard application on the google. Got a response and had interview on my college campus within the next two weeks. Had two forty-five minute interviews back-to-back. Both were all technical. Did not receive another interview after the original two. Was informed of that within a week as promised.

Sign NDA but know your efficiency and data structures.   Answer Question

Dec 19, 2014
---------------
3 technical interviews over the phone with a google doc. No behavioral questions. First one asked some language specific questions and a hard algorithmic question (about a matrix). Second one asked a few fairly basic implementation questions and asked for a series of test cases for a function. Third one asked a long object oriented question.

Rotate a matrix   Answer Question

Dec 18, 2014
---------------
Referral to interview took about a month (I put it off for 2 weeks because of university finals). 3 45-minute technical interviews, all with code through gdocs. The recruiters are willing to listen and give hints and walk you through anything. Sometimes they'll give a little overview about themselves, other times it'll be straight to the questions. My third interviewer had a thick accent which made communication more difficult.

Signed an NDA, but nothing unexpected - data structures are important!   Answer Question

Dec 15, 2014
---------------
Applied online through the standard application on the google. Got a response and had interview on my college campus within the next two weeks. Had two forty-five minute interviews back-to-back. Both were all technical. Did not receive another interview after the original two. Was informed of that within a week as promised.

Sign NDA but know your efficiency and data structures.   Answer Question

Dec 14, 2014
---------------
Very Tedious. Two rounds of phone interview before onsite interview where I heard that it is more than 5 interviews and a special lunch with a person who will not be in your team.

It was not very difficult, but you definitely need to brush up and study a lot before you attempt the interview. It is hard to crack if you don't have detail fresh on your mind.   Answer Question

Jan 25, 2015
---------------
Applied online and scheduled 3 phone interviews in a day. Two of the interviewers were pretty into it but the third one just sounded board. Very quick turnaround time. Some standard questions about run times of certain data structures and algorithms. Should know your graph and tree search algorithms and their implementation. Also some brain teasers and mth questions.

Given a natural number how do you find the smallest (multi)set of perfect squares that sum to it?   1 Answer

Nov 20, 2014
---------------
I was contacted due to an open-source software I created in a very specific area. After two phone interviews that were closely related to topics close to my software I was invited to an on-site interview. The questions I got there were mostly general algorithmic questions, i.e. to write functions for a given task, such as "What is a deadlock. Give a code example that might cause one" and also about modifications and filtering of raw buffer data using bit operators. Most of it was out of my comfort zone as my expertise and the prospective job is in a very different areas so I had to improvise a lot, especially for the deadlocks and buffer data questions. There was surprising little questions concerning the area of why I thought I was invited. One of the questions I totally got lost and were not able to read that the interviewer tried to tell me to take a different approach. Also I did not take the chance after the interview to ask for the actual solution which might have spun a fruitful reflection about my admittedly silly attempts. I haven't yet gotten an answer for now I'll set it to "No offer" as that reflects what my gut feeling tells me.

A square matrix of size n^2 and random entries from 0 ... n^2, find the longest sequence of consecutive neighbours (i.e. top, left, bottom, right entries).   2 Answers Find the n-th digit of a number which is constructed by concatenation of all natural numbers.   2 Answers

Nov 24, 2014
---------------
A recruiter contacted me through Linkedin, and process took about 2 weeks. First talked with a recruiter, and then had a technical phone interview with one of Google's software engineer. Interviewer was very proud about working at Google, and when he asked me for any questions I have, he wanted get a question about Google.

It wasn't a difficult question. Just one of the questions from cracking the coding interview book   Answer Question

Jan 18, 2015
---------------
I applied to the general new graduate Software Engineer position online via the jobs website. I was asked to take an online coding assessment that was timed to 60 minutes. It was unscheduled, and they requested I complete it within 6 days. A recruiter got in touch about 1.5 weeks later to schedule a phone interview. The recruiter asked about my GPA, who I knew at Google (for a reference), and my transcripts. They also asked normal questions about my other interviews or deadlines, visa sponsorship, etc. The phone interview was about 35-45 minutes long. The interviewer called me late and did not introduce themselves, they just jumped immediately into the first question. They also asked me to type my thoughts and responses into the provided Google Doc instead of speaking out loud too much, so that they could have a record. The question asked was related to summed area tables for 2d matrices of integers. The interviewer did not seem impressed or friendly and immediately hung up after we discussed the single questionhere I heard that it is more than 5 interviews and a special lunch with a person who will not be in your team.

It was not very difficult, but you definitely need to brush up and study a lot before you attempt the interview. It is hard to crack if you don't have detail fresh on your mind.   Answer Question

Jan 25, 2015
---------------
Applied online and scheduled 3 phone interviews in a day. Two of the interviewers were pretty into it but the third one just sounded board. Very quick turnaround time. Some standard questions about run times of certain data structures and algorithms. Should know your graph and tree search algorithms and their implementation. Also some brain teasers and mth questions.

Given a natural number how do you find the smallest (multi)set of perfect squares that sum to it?   1 Answer

Nov 20, 2014
---------------
I was contacted due to an open-source software I created in a very specific area. After two phone interviews that were closely related to topics close to my software I was invited to an on-site interview. The questions I got there were mostly general algorithmic questions, i.e. to write functions for a given task, such as "What is a deadlock. Give a code example that might cause one" and also about modifications and filtering of raw buffer data using bit operators. Most of it was out of my comfort zone as my expertise and the prospective job is in a very different areas so I had to improvise a lot, especially for the deadlocks and buffer data questions. There was surprising little questions concerning the area of why I thought I was invited. One of the questions I totally got lost and were not able to read that the interviewer tried to tell me to take a different approach. Also I did not take the chance after the interview to ask for the actual solution which might have spun a fruitful reflection about my admittedly silly attempts. I haven't yet gotten an answer for now I'll set it to "No offer" as that reflects what my gut feeling tells me.

A square matrix of size n^2 and random entries from 0 ... n^2, find the longest sequence of consecutive neighbours (i.e. top, left, bottom, right entries).   2 Answers Find the n-th digit of a number which is constructed by concatenation of all natural numbers.   2 Answers

Nov 24, 2014
---------------
A recruiter contacted me through Linkedin, and process took about 2 weeks. First talked with a recruiter, and then had a technical phone interview with one of Google's software engineer. Interviewer was very proud about working at Google, and when he asked me for any questions I have, he wanted get a question about Google.

It wasn't a difficult question. Just one of the questions from cracking the coding interview book   Answer Question

Jan 18, 2015
---------------
I applied to the general new graduate Software Engineer position online via the jobs website. I was asked to take an online coding assessment that was timed to 60 minutes. It was unscheduled, and they requested I complete it within 6 days. A recruiter got in touch about 1.5 weeks later to schedule a phone interview. The recruiter asked about my GPA, who I knew at Google (for a reference), and my transcripts. They also asked normal questions about my other interviews or deadlines, visa sponsorship, etc. The phone interview was about 35-45 minutes long. The interviewer called me late and did not introduce themselves, they just jumped immediately into the first question. They also asked me to type my thoughts and responses into the provided Google Doc instead of speaking out loud too much, so that they could have a record. The question asked was related to summed area tables for 2d matrices of integers. The interviewer did not seem impressed or friendly and immediately hung up after we discussed the single question. The recruiter got back to me one day after the phone interview to let me know that Google wanted me to fly to the Bay Area and interview in person. The travel setup was easy and they paid for flights, hotel, meals, etc. The in-person interview was made up of 4 hour-long interviews with a lunch interview in the middle. It took place in Mountain View on the Google main campus. The interviews were mostly one-on-one and I was asked coding questions on the whiteboard, questions about my resume, and questions that required analysis of existing/provided source code. Some of the topics were parallel execution, algorithms / tree data structures, image processing, and C and C++. About 2 weeks after the in-person interview my recruiter got back to me again to let me know that the team was ready to make an offer. The offer was good and the position was located in the Bay Area. I negotiated the signing bonus and stock grant upwards by a fairly significant amount using several other offers I had in hand.

Analyze parallel counting code to determine what possible sequences can be output.   Answer Question

Dec 6, 2014
---------------
I was referred by a friend to be an intern. I had 2 phone screen interviews, where I wrote code on a shared Google doc in real-time while talking to the interviewer, and was told I passed by my recruiter. I then filled out a questionnaire about internship preferences (location/languages/types of projects), and was told by my recruiter that I would be contacted if they found a fit for me. A week later I matched, and had a phone interview with my intern host. Google values intern performance very highly, so I worked hard all summer and had great relationships with my host and manager. When I applied to convert to full-time, I had 2 on-site interviews and a lunch informational interview (lunch interviewer does not write feedback). Google hiring committee only meets once a week, so I waited 2 weeks to hear I made it through hiring committee, and an additional week to go through executive committee & compensation to get my offer. I was told during orientation that roughly 70% of interns receive conversion (to full-time) offers.

My other interview questions aren't online, so I won't spoil those... But one was: Given an 8x8 chessboard, write a function to determine how many moves it would take for a bishop to go from a start location to an end location. Then write a function to determine how spaces it would move.   Answer Question

Dec 3, 2014
---------------
I applied online. The process takes 1~2 weeks. First phone screen with hr and it was smooth since not any technical questions. Second phone technical interview with senior engineer, the questions are basic and simple but I was too nervous so I kept getting stuck. With some hints I finally solved the problem awkwardly but I knew I did bad. One week later I got a phone call from hr said they were not going to move forward with my interview.

No Question
Feb 3, 2015
---------------
2 phone screens followed by the onsite interview. The second phone screen contains basic technical questions. The onsite is 2x50min interview by developers in the team I applied to. After that a person(experienced employees) had lunch with me. No technical or anything at lunch, just Q&A part. After lunch there are 2x50min interview again, but with interviewers from other departments in Google. Each 50min interview includes a coding question to be done in 45min and 5min Q&A at the end. Write code on whiteboard. The questions are pretty easy but interviewee must make explanation of the idea/algorithm when writing the code. If one question is done with plenty of time left, they will follow up with another question, but no more than three, or they will ask some conceptual questions to fill the remaining time. I did like 10 codings and one design problem for the 4 interviews. Was pretty confident in my answers but still got rejected. The recruiter refused to provide any reason.

Not much hard but they expected answers they expected.   Answer Question

Dec 3, 2014
---------------
Recuriter setup phone interviews. An interviewer asked some C programming questions. It was not hard but I didn't give answer which the interviewer expected. Google interviews seem to be very proud as Google employees. After one week, I got email saying unfortunately I didn't pass the phone interview. Maybe I will try it next year again.

Write code that does X, with a good error-handling mechanism, fast runtime, and good decomposition.   Answer Question

Dec 5, 2014
---------------
Applied online. My recruiter contacted me few days after. I had 2 phone interview with algorithmic questions. The questions were pretty straightforward and reviewing data structure will help you. They ask you to think about what kind of inputs you would use to test your code.

I was asked an interesting question. You have a sheaf of papers numbered sequentially, and one paper flies off. You are asked to determine, in best space/time complexity the page number of the paper that disappeared.   1 Answer

Dec 19, 2014
---------------
1. I contacted my Google recruiter, who has been reaching out to me for several months. 2. I was invited to an onsite interview, which took ~6 hours total. There were 5-6 sessions, each of which lasted ~45 minutes. I was asked to write code on the whiteboard. Questions were pretty difficult, and assessed understanding of data structures, algorithmic problem-solving skills, communication skills, runtime analysis, system design, and programming languages. Overall, the interview questions were fair and tested my software engineering skill-set.

Given an array of strings, find the common prefix.   1 Answer

Feb 23, 2015
---------------
The process starts with a recruiter who asks basic technical objective questions. They are only looking for certain keywords. They ask 5-10 questions, and then a few "bonus" questions. If that goes well, then there is a fairly technical follow-up phone interview. Once you clear that, you're called onsite for 4-5 hours of interviews: 4-5 interviews of an hour or less.

How would you detect whether a string is an anagram of a palindrome?   1 Answer

Dec 29, 2014
---------------
There were a series of emails exchanged and I was passed through three different recruiters. I proceeded to an initial phone interview to discuss skills, background, and next steps. The recruiter I spoke with on the phone was curt. She asked a few broad questions, including why I would want to work at Google. I replied that I enjoy fast development with a small, agile team. She misunderstood me and suggested that I should apply to Facebook instead because they have a more constant release cycle. This question and her generally haughty tone left me feeling pretty defensive and not trilled about continuing. Nevertheless, I was given a technical phone interview a week and a half later. I did not know what to expect from the technical phone interview. I was sent an email detailing a long list of potential subjects, which I studied broadly. Instead, I should have been practicing coding problems. The technical interview consisted entirely of two programming questions. I coded on a Google Document along with the interviewer. I could only partially complete both questions. The first question was, "Given a binary search tree populated with numbers, find the closest match to an incoming number." The other question was, "Given an array of strings, find the common prefix." I left the interview knowing I had very little chance of continuing. Despite this, the recruiter called about a week and a half later to decline, but invited me to try again in "12-15 months". The call left a sour taste in my mouth as I again experienced a condescending attitude in a scripted call, especially when a simple email would have sufficed.

Nothing very difficult, though the graph question was good.   Answer Question

Oct 12, 2015
---------------
Asked about items on my resume, then went straight into a series of technical questions. Three interviews in one three-hour period. The questions were moderately difficult, standard tech questions you would find from any other company. The people who were calling were Software Engineers themselves and very friendly.

In place duplicate removal in an array or something like that!   1 Answer

Nov 24, 2014
---------------
Telephone interview: It was little weird - the first question had to do with topological sorting, which I was able to solve and code. The second question was about max length pairs of words in a dictionary, which I was able to answer too. The problem - the interviewer didn't understand what I was talking! He made me explain things again and again, even though I had written them down on the shared doc. He was satisfied with my answer at last, the same answer that I was telling him from the beginning, and asked me to code it. He also mentioned at the end of the interview that I will be getting a call for the next interview soon. However, they called in a couple of days to tell me that they won't be moving forward with the process.

None of the questions were particularly difficult. There were some questions about optimizing my code using dynamic programming but all of the algorithms were relatively simple if you use all of the test cases given.   Answer Question

Feb 23, 2015
---------------
Got in through employee referral, quick process! First one was HR screen. The guy was really nice, asked standard questions like how do you solve a problem when you come across it, which is your favorite project, what was your role in it, etc. Heard back in 2 days, scheduled a tech screen. The lady was helpful but I found the questions a bit difficult. Would really like one more chance at interviewing with the company!

No Question
Jan 11, 2015
---------------
I was first given a phone screening where they asked questions about my resume and interests. Next was the first phone interview. The phone interview was all technical questions on algorithm design. I coded on a shared Google Doc and the interviewer first explained the questions and then would give me a series of test cases before letting me get to solving the problem. I answered all of the questions but didn't make it past the phone interview with the reason being I needed more experience writing professional code.

No Question
Mar 13, 2015
---------------
They shortlisted candidates based on resume. Then they sent a mail regarding, that we were selected for the interview process. They wrote along mail describing the process. There were mainly 2 rounds. They will call us at a specified time & ask 2-3 coding questions. We have to say our logic ti them & code online on google doc. It lasted for around an hour. 2nd one was of of same kind, but higher difficulty level.

How to find ternay representation of a number ? FInd minimum spanning tree.   Answer Question

Dec 24, 2014
---------------
A university recruiter reached out to me in mid-fall to schedule an onsite interview (I was previously an engineering intern at Google). I had a short non-technical phone call with the recruiter during which she asked me about my technical interests, what I was looking for in a full-time role, and what products at Google I wanted to work on. After that, she connected me with a recruiting coordinator to set up my flight, hotel, and interview day logistics. The interview day was alright but felt a little rushed and impersonal to me. I was told that my interviews would begin at 10am. My interview host for the day greeted me in the lobby a few minutes after 10 and rushed me to my first interview at 10:15am. The room was tiny (I could barely write my code on the whiteboard) and not very sound-proof. The day consisted of four 45-minute coding interviews in total. The first two were in the morning, after which I had lunch with a different Google engineer than my interviewers. I then had two more interviews after lunch. The questions weren't too difficult overall - mostly standard questions on algorithms and data structures on a white board. I got two on manipulating strings and arrays, one on binary trees, and one recursive problem simulating a board game.

Given a list of Strings, how do you split it into lists of anagrams?   1 Answer

Jan 30, 2015
---------------
Applied online but did not get a response until I emailed my school's recruiter about an exploding offer. Had three back-to-back 45-minute phone interviews in the same day. These three interviews were completely technical in nature. Each interview consisted of one or two algorithmic questions. Heard back from recruiter a month later telling me I'd made it to the host matching stage. Had a phone debrief with my recruiter, then had several interviews with potential hosts. Host matching interviews were pretty laid back.

Given a license plate with four letters, form the shortest word you can that contains the four letters   Answer Question

Nov 23, 2014
---------------
Applied online. Two phone interviews and onsite interview. Phone interviews jumped directly to the coding problems but not very hard. Just basic algorithms. Four rounds onsite interview, not very hard. The atmosphere in google in really good.

Questions are main about string manipulations.   Answer Question

Nov 26, 2014
---------------
I applied online through their general link for internship applications. Was surprised to hear back just a few days later from a recruiting coordinator, who asked me to choose 3 time slots for phone interviews. The interviews ended up being about 3 weeks after our initial contact. The phone interviews were rather relaxed, the interviewers were very nice. I definitely over studied, I was memorizing complicated graph algorithms and other high-level topics and the interview questions ended up being much simpler than I expected. The three interviews were all back to back with 15 minute breaks in between, and I think I did pretty well overall. There was one programming problem (out of 6 total) I was not able to answer fully, and I'm going to be kicking myself about it for some time. I have not heard back from them yet (interview was yesterday), so no word on offer/ no offer.

I will honor the NDA I signed with Google, but definitely be comfortable with the edge cases of simple algorithms and data structures.   Answer Question

Nov 24, 2014
---------------
Write a Java function, printTree(), which prints a given tree with hierarchy. The argument of printTree is a stream of pairs of string values. Each string found anywhere in the input represents a unique node. Each item in the stream is a pair indicating a parent/child relationship in the tree. The first element in the pair is the parent. The second element in the pair is the child.Each parent can have many children. A generic class pair<T,U> is required to implement

I never thought generics implementation will be asked and I haven't done that for a while, which took me about 10 min to do the generics implementation   Answer Question

Nov 21, 2014
---------------
applied online, contacted by recruiter. The onsite consisted of 4 rounds of technical interviews and lunch. The interviewers were friendly and helpful. The hiring process is efficient. Had to write code on whiteboard and code needed to be working code.

coding questions, no design question   Answer Question

Nov 19, 2014
---------------
I got recommended by a Google employee. The recruiter came to me in a week and went me through the interview process. He asked me to pick 4/5 2-hour period on workdays to get two phone screen, each 45 mins. They have a google doc for each interviewer to write code on. On the day of my interview, the first interviewer didn't contact me. So I shoot an email to the recruiter. He called me in 30 mins to update the information. The interviewer was late or something so his interview will be after my originally second one. At that time, I got the call from one interviewer. The question he asked is basically how to find the point closest to given points on a grided plane. I didn't do well and the phone was not clear. The second one was nice. Question was about binary tree and palindrome. Easy stuff. Got rejected in two weeks.

How to locate the point with the minimal distance to all the given points. Which should be done by a connected graph as all the points on the grid can only move up and down. I tried to answer the question but the interviewer kept asking me is this the global minimum. I don't know!!!   3 Answers

Nov 18, 2014
---------------
Applied through a hackathon link. Received a first round behavioural phone interview about a week later, and a technical interview two weeks after that. Very disappointed about the technical interview, the engineer who I spoke to called 20 minutes late and seemed preoccupied with something else throughout the entirety of the interview.

Nothing too unexpected, sort an array of structs in O(n) time based on two specific characteristic of the structs.   Answer Question

Nov 18, 2014
---------------
Applied through a referral. The whole process took 2+ weeks. I was contacted by the HR to schedule an on-site interview. The on-site interview consisted of four 45 minute long interviews, each based on deriving an algorithm to solve a problem.

Write an API to start Google Now, when saying "Ok Google"   Answer Question

Nov 8, 2014
---------------
2 On campus interviews followed by 4 on site with lunch included. The interviewers are super nice except for one of them. Most of the questions related to DS and algorithms

1. Given a binary tree and inorder traversal, construct a new binary tree with additional pointers such that the inorder traversal is reflected in the new tree   1 Answer

Nov 9, 2014
---------------
The usual staff. 1 phone call from a recruiter, talked about details about me and about the role. 1 technical interview via Skype. asked me some array algorithm questions Another technical interview via Skye, asked tree questions I am not from the states that's why I had two Skype calls

sorting algorithm; basic mathematic questions   1 Answer

Nov 11, 2014
---------------
First round phone interview: 30-minutes. One math question (approximate log (2^10)), one coding question (reverse an input string); Second round phone interview: 30-minutes. One binary tree question (how to read and load a large dataset in the smallest memory)

Signed an NDA, but one of my interviews also relied pretty heavily on statistics.   Answer Question

Nov 10, 2014
---------------
A former intern referred me, and I was contacted by a university recruiter in mid fall. The interview process was simple--two 45 minute technical interviews, both were extremely doable. The second was slightly harder than the first. Both involved some data structure/algo questions, but nothing too complicated, and definitely no knowledge of obscure algorithms or data structures was necessary for the optimal solution. The host matching process was fairly quick (heard within a week), and my recruiter was responsive and helpful throughout the entire process.

I wouldn't say there was a specific most difficult or unexpected question, but overall I'd recommend studying Cracking the Coding interview and also be prepared to write code on a whiteboard. Another thing to remember is to keep talking out loud and explaining your thought process along the way. I thought I did poorly in the phone interviews, but I think that this helped me get to the onsite.   Answer Question

Nov 7, 2014
---------------
I was first called for a phone interview but got rejected. Google asked me to reinterview after about 5 months for another set of phone interviews. I am yet to hear from them but the interview didn't go as expected. The interviewer however was pretty cool with the questions as well as the answers. I wish a bit logical and less code intensive as it hardly tests your basic problem solving skills.

Design an elevator system   1 Answer

Dec 3, 2014
---------------
I got contacted by a Google recruiter sometime in September about a new grad Software Engineering position in Mountain View. Following an initial phone call briefly going over my resume and talking about my interest in Google, the recruiter set up a 45 minute phone coding interview. Unfortunately, no one actually called me as scheduled for my interview, so I contacted my recruiter and she rescheduled. After this interview took place, I was contacted about a week later saying that they wanted to do a second phone interview before deciding whether or not to bring me onsite for final rounds. I had that set up a couple of weeks later and then heard back again within a week that they wanted to fly me out for onsite interviews. At this point I was also transferred to another recruiter who dealt with onsite interviews and the rest of the recruiting process. I was flown out in early November for a day of four 45 minute whiteboard coding interviews with a lunch break in between the first two and the last two. Overall, it was one of my better onsite interview experiences and the interviewers were receptive to actively participating in the process (not just telling you the problem and then sitting there in silence). I even had one interviewer who took extra time after the interview to go into more detail explaining another way that I could have solved the problem. The engineer I had lunch with was also very nice and helped to paint a good picture of what working at Google would be like. Following this, my recruiter made sure to keep me updated as to how things were going in the review process. I heard back in about a week that my feedback from the interviews would be going through the hiring committee. Then, a few days after that I heard back that I passed the hiring committee and needed to have my package submitted for executive review. About a week after this I got an email from my recruiter saying I had the offer! We discussed the details over the phone and I accepted the offer the following week. All in all, from onsite to getting the offer was a little over 2 weeks. While it was certainly a lengthy process (September - end of November) this wasn't all Google's fault and I appreciated the recruiters keeping me up to date every step of the way.

Signed NDA, can't reveal my questions. Study data structures, study text parsing, text searching, pretty much anything text related. It might seem like an overload on one topic, but remember...they are a search company at heart.   Answer Question

Oct 29, 2014
---------------
Two rounds of phone interview followed by onsite interview. First phone interview was about arrays (move all elements of value v to end of array) while the second was on string manipulation (find longest substring with two distinct characters). The onsite interview questions were more varied 1) Matrix manipulation 2) Binary search tree 3) Lunch 4) String compression 5) Question with lots of edge cases followed by a design question

No Question
Nov 7, 2014
---------------
I applied online and was contacted the next day for a non-technical phone interview. We then scheduled a technical interview for the next week then I was contacted and was asked to code in a live google document about technical questions

No Question
Feb 14, 2015
---------------
First a phone call with a recruiter. They go over the job, why you'd love it, and talk to you about your experience and what you're interested in. If they see it's a fit, they set you up with an engineer for a phone screen. The technical phone screen is done online using a Google Doc. You'll be asked a fairly basic coding question or two, and you'll code it out in the Google Doc where the engineer can see it. If you pass this round, you move on to the on site interview. On site interviews consist of five separate 45 minute interviews with an engineer. They keep a card with the topics they've covered and how deeply, otherwise, they don't communicate with the previous interviews. This is a great system, because it prevents your interviewers from having preconceptions - if you bomb one interview, that's no problem, just do well in the next one. Expect hard algorithmic computer science questions. They will be very heavily based around data structures, some sort of text parsing or searching, and algorithm performance. Study up on things you might not use every day like tries, graphs, as well as more basic things like binary trees and hash tables. Be able to recognize the Big-O performance of an algorithm you've written, and know how to improve it. Interviewers are generally very helpful. They want you to get it right. They'll drop hints, help you get through parts where you're stuck. But you are expected to get it in the end - if you haven't come up with a working, high performance solution to the problem by the end of the 45 minutes, you'll probably fail that leg.

No Question
Apr 8, 2015
---------------
The process was very long and stressful. This was my second time interviewing at Google. After an phone screening, I was invited to the office for an onsite interview. My interviews happened to be split-up between two visits. I had three interview on my first visit and three more on my second. The interviews were fairly relaxed and I managed to find solutions to each interview question, but was still denied an offer. Given my performance during the interviews, the recruiter was willing to work with me on finding a team at Google that might be a good fit for me, and then try to appeal to the Hiring Committee once more. Speaking with teams combined with long wait times for feedback resulted in a 4 and half month long interviewing process. In the end, I wasn't given an offer. Appreciate Google effort in trying to find a place for me, but the process was draining and raised my hopes several times only for me to leave with nothing in the end. I don't see myself interviewing for Google again, unless I had better assurance for faster feedback.

No Question
Jan 7, 2015
---------------
CONTEXT: I had been contacted by different Google recruiters over the past few years (and had been referred internally but I didnt know about that) and I had kept asking them to contact me later. FIRST CONTACT: I was then again contacted first for an S.R.E position. The recruiter took a mini 5-10 interview about time complexities and some Linux systems questions which they expected people to be well versed in. The recruiter was a little misleading about what the position was about and made it sound alot closer to S.W.E than it actually is. I did my research spoke with people who interviewed for SRE. I then insisted that I wanted to interview for SWE. The recruiter tried hard to convince me to apply for SRE but my heart was not in it. EVENTUAL CONTACT: After 1-2 conversations with the recruiter, I was then handed over to another recruiter for SWE. I had multiple conversations so that they can ascertain which team should interview me and what should be a good fit. They really do try to set you up for success, I can assure you that much. They were unable to initially be precise about which team I would be a fit for. So they suggested that I atleast do the phone interview (which would be reaosonably generic) and then that would give them some clues. PHONE INTERVIEW STAGE: I gave the phone interview and next day got an email that they want to move forward. I then spoke with a different recruiter who was supposed to handle my case. I again had some clarifying conversations with her about my strengths and interests and made sure that my onsite interview would be something that I expected it to be. This recruiter was fantastic and very detail oriented. I had limited time because I had 2 existing offers whose deadlines were approaching. They scheduled my interview on a day of my choosing. ONSITE INTERVIEW STAGE: The onsite interview went well. The interviewers were friendly and polite. Some young, some slightly older. They were excited to be a part of Google. I had a great time talking and solving questions. The interview questions were not very difficult. I concentrated alot on code organization, cleanliness and correctness. Debugging my code in the interviews and convincing myself and the interviewer of the absolute correctness was very important. If you are comfortable with recursion, Dynamic programming, Arrays, Trees etc that should be fine. I dont think they really wanted to test knowledge of advanced concepts. They concentrated more on basic fundamentals, good solutions, clean & correct code. There were 5 technical interviews and 1 lunch interview. The lunch interview was not technical. It was me who was asking the constant questions in that time. POST INTERVIEW STAGE: Since I was on a tight timeline, things moved at LIGHTNING SPEED. I couldnt imagine that it was possible for this to be done so soon. On the SAME DAY of my interview, I got a positive response and my packet for the Hiring Committee was being prepared. They checked out my references the NEXT day and by nightfall the next day, I knew I was approved by the hiring commitee. OFFER PHASE: The verbal offer was given 2 days later. 2 days of negotiation. I was given the final written letter basically within a week of my interview which I signed. Over all: The recruiter was diligent and FAST. I couldnt keep up, it was that quick. I was very lucky I would say to work with the right people. I made sure i myself was prompt at every stage.

I cannot disclose the questions. Some system programming, fact based questions were unexpected.   Answer Question

Nov 3, 2014
---------------
Recruiter give a call first, and ask about questions on the background. She will help schedule an interview with another technical recruiter. The material that she suggest to prepare is helpful. But I didn't read it too much before interview. In the process of interview, the recruiter gives a lot of hints, however I was not able to solve the problem

Test Cycle in a directed graph.   Answer Question

Nov 2, 2014
---------------
My interview and hiring process was extremely tiring but satisfactory. I studied and mastered computer science alone at home within 2 months. I applied online and quite suprisingly; they replied back the next day to set-up an phone interview. They asked a few question and then told me "Alright, we'll call you again next week."

Given two intervals, return true/false for some condition   Answer Question Given a list of intervals and another interval, do something based off of the previous condition from q1   Answer Question

Nov 6, 2014
---------------
Got referred by an employee and got two back-to-back phone interviews. The first interviewer arrived half an hour late, but they didn't even extend the interview and my second interview was delayed. The first interviewer didn't give a lot of hints. Whenever I asked some questions, she would say "What do you think?" The second interviewer was much better, but because we were running late, I didn't get to finish my code.

(1)Find Binary Tree's most deep leaf. (2) Missing Ranges   Answer Question

Jan 6, 2015
---------------
First I was contacted by a college recruiter on LinkedIn. Set up a phone interview with the recruiter. The call lasted about 15 mins and we discussed my background, interests, and the Google interview process. Next, the recruiter forwarded my preferred technical interview times to a recruiting coordinator to set up a technical interview. Technical interview started with the interviewer briefly discussing what they do for Google, and asked a couple of questions about projects on my resume. Then jumped into the technical questions. Won't give the exact questions, but instead a general idea of what was asked. First question involved returning true or false for some condition regarding 2 input intervals. Could be approached in a simple one line return statement (by approaching as when is the input going to return false), or a less optimal solution of finding all of the cases where true is returned. Was not thinking and took the less optimal route. Realized that wasn't the best way after the interview. 2nd question was basically an expansion of question one. Given two inputs, a list of intervals and another interval. Function from part 1 can be used to do something with the list of intervals. Ran out of time to code if for the final edge case to be completely functional, but told interviewer what had to be done to make it work for all cases. The questions were not really difficult or unexpected, but making silly mistakes lead to a less optimal/not entirely functional solution. Recruiter called back within the specified timeframe with very very general feedback from the interviewer. Nothing specifically saying what went well (or not well). Recruiter told me that at the time they would not be continuing with my application.

"List an interesting bug you've worked on."   Answer Question

Jan 11, 2015
---------------
The recruiter is very nice. And I had three phone technical interviews. The first one and the second were easy and the third one was a little bit hard. And I didn't get an offer because of the bad performance in the third interview. But the interviewers and the recruiter are all very nice and I will apply the next year.

SImple question to code a solution for something. It required knowledge of design patters and data structres.   Answer Question

Jan 16, 2015
---------------
I was contacted by a recruiter about this job. It was a great interview process, with some minor bumps on my end. There were a couple technical issues with the phone call, which I felt led to a less than stellar interview, but all in all, the interviewer seemed to want a successful outcome.

broad design question   Answer Question dynamic programming question   Answer Question

Feb 20, 2015
---------------
I got contacted by a Google recruiter. She was really nice schedule my interview for following week. I was busy with current projects and didn't really get a chance to review theory which I learned back in college. So during the phone interview I did ok. but I was not really satisfied with my answer.

Signed NDA and will respect the NDA. For a new grad, they focus primarily on CS fundamentals, so know your data structures and algorithms well. However, be able to think through your code design in terms of scalability, even if they don't ask you to parallelize the code. I think they test the same concepts as Microsoft does, but I'll summarize the difference between the two companies without revealing any coding questions. Microsoft will ask you questions like, "If apples cost $2 and bananas cost $3, how much does it cost me to buy 3 apples and 2 oranges?" Google will ask you a question along the lines of, "If apples cost $2 and bananas cost $3, and I have a $1 million dollars, how many unique fruit combinations can I buy?" Simply put, Google questions are more in depth and require more thought and finesse, even though the same concepts are used in solving them.   Answer Question

Feb 19, 2015
---------------
Received an email a few hours after I applied. Scheduled three phone interviews back to back. Interviews were done using Google Voice and Google Docs for coding. The first two interviewers were very nice. The last interviewer went straight into the technical questions - no small talk.

No Question
Nov 21, 2014
---------------
Applied online with employee referral. Also talked to an engineer at a university career fair. Was then offered an on-campus (school) interview about a month later, which consisted of 2 45-minute interviews. A couple days after that, I was called on-site in Seattle, which consisted of 3 60-minute interviews. Since I had a competing offer, I was informed of the decision 3 days later by phone, with the recruiter informing me that the hiring committee did not approve of my hire. The process was really dragged out (considering I originally applied in early September) and they only left me an hour to respond to my competing offer. Google HR can be surprisingly disorganized. For example, half of the interviewers had an outdated copy of my resume on hand, from an application I had submitted 3 years ago.

No Question
Feb 19, 2015
---------------
Received an email a few hours after I applied. Scheduled three phone interviews back to back. Interviews were done using Google Voice and Google Docs for coding. The first two interviewers were very nice. The last interviewer went straight into the technical questions - no small talk.

broad design question   Answer Question dynamic programming question   Answer Question

Nov 21, 2014
---------------
Applied online with employee referral. Also talked to an engineer at a university career fair. Was then offered an on-campus (school) interview about a month later, which consisted of 2 45-minute interviews. A couple days after that, I was called on-site in Seattle, which consisted of 3 60-minute interviews. Since I had a competing offer, I was is part of the college engagement team, and had the phone screening interview in python on Google Docs. The interviewer was nice. I wasn't sure if there were going to be two questions but I only solved one. I solved it in n cubed time. I don't know how syntactically correct I was. I can reapply in a year.

Largest rectangle of 1s in 2d binary matrix   Answer Question

Apr 1, 2015
---------------
It was two 45 technical phone interviews with engineers. Then one 45 interview with the project manager. I wait almost two months after I passed first two interviews. You really need to be patient for this internship.

Usual Google interview questions: mostly algorithm and data structure.   Answer Question

Feb 2, 2015
---------------
I applied on line, the first round is phone interview. It takes two weeks before your interview. The coordinators are nice, one is in Mountain view another is in London(I don't know why). On the day of the phone interview, you need to write code and solve a question on Google doc.

The interviewer asked a question that involves graph and DFS. I did not answer it very neatly.   Answer Question

Feb 4, 2015
---------------
Applied online, was offered an on campus interview. Attended a info session prior to the interview day. Interviews consisted of questions by two different engineers, each lasting 45 minutes. One of the engineers was moody, the other seemed to be much more friendly.

Implement binary search on a rotated array. Given the position of the minute and hour hands on a clock and a time interval, how many times does the minute hand pass the hour hand?   Answer Question

Dec 1, 2014
---------------
[Recruiter contact] The recruiter contact is incredible. I had two initial phone calls with my recruiter who wanted to hear how I'm doing with my preparation. She also called me later for giving me feedback after the interviews. [interviews] To be honest, I had the worst interview experience with Google. My interviewer very too straight forward and it seemed like they didn't care who I am. Also, there was no initial question about me. Instead, we had a conversation like that "Hey, is this xx?" "yes" "okay, let's start with the first coding question". My interviewers didn't even explain who they are or what they do. That made me feel very uncomfortable.

No unexpected questions. However KNOW YOUR COMPLEXITIES! They asked me about time complexity for each paragraph.   Answer Question

Jun 3, 2015
---------------
Three 45 minute technical interviews all on the same day. Took a few weeks for them to get back to me. The recruiter was really nice but the interview questions were pretty tough. Definitely helps to have your friend interview you beforehand and to just work through practice questions. They call you back VERY soon after you apply if they're interested. For me it was the next day, so be ready to interview before you hit the submit button.

Fundamental coding questions, NDA so cant share specifics.   Answer Question

Sep 2, 2015
---------------
Consisted of 3 back to back 45 minute phone + Google doc interviews. First interviewer had a strong Indian accent and seemed completely apathetic, clearly did not want to be interviewing. Second and third interviewers were actually very nice, made up for the poor experience in the first interview. They were enthusiastic and actually went past the 45 minute time limit to help walk me through the final problems.

Find the subarray within a 2D array with the largest sum of all elements.   Answer Question

Oct 26, 2015
---------------
First gave my resume to the recruiter during career fair. Afterwards, they contacted me and scheduled two back to back phone interviews 1-2 weeks after. I'd recommend getting familiar with math, probability, bits, threading, etc. Not just algorithms. Getting matched was the most difficult/annoying part. You really need to keep emailing the recruiter and tell them you have deadlines.

One was a threading/stack question and the other was basic algorithms.   Answer Question

Oct 29, 2014
---------------
Submitted resume online and got called from a recruiter the third week to schedule a phone interview. It was earlier than I thought. Probably right now it's a job seeker's market. Got a reject email after interview.

Reverse a linked list without using temporary variables.   4 Answers

Oct 30, 2014
---------------
Met google recruiter through the Harvey Mudd CS-Google pipeline. Very easy to schedule an interview, two back to back forty-five minute interviews with really nice engineers- mudd alums! They were really nice and helpful and I felt I learned something

Not allowed to divulge questions   Answer Question

Oct 29, 2014
---------------
I was referred by my friend and got phone interviews after a few weeks. I got 2 consecutive phone interviews. The first one was good, the interviewer asked two algorithm questions and I finished them. But the second one, kept asking language knowledge like difference between c and java. I haven't used c for a long time. So I didn't do well.

Language syntax like difference between c and java.   1 Answer

Oct 28, 2014
---------------
I interviewed on campus at my current university. I had two technical interviews about 45 minutes in length. Nothing super challenging, but definitely want to study for them. I highly recommend Cracking the Code Interview and other similar prep materials to master all your common data structures, Big O times, etc.

Cannot comment specifically due to NDA. Similar difficulty as most technical interview prep materials. Be sure to speak your thoughts all out loud. Even if youre doing poorly, if they understand how you're thinking, its better than standing there dumbfounded .   Answer Question

Oct 28, 2014
---------------
Applied through referral. phone, then onsite. 4 interviewers onsite. Was a bit disorganized, some interviewers were late. lunch with an engineer (not part of the 4). they didn't let you see the rest of campus too since you needed an ID to get in. great campus though.

Implement a circular buffer ; make it thread-safe   Answer Question

Oct 25, 2014
---------------
Skip the first initial interview because I did good in their interview one year ago. The onsite was 5 rounds. 10 questions asked. All about coding. No design questions. 1 question is from cracking code interview.

Design a algo. to compress a string. If there are multiple repeated characters aaaa, put a3 instead. Need to deal with numbers and math equations   Answer Question

Oct 23, 2014
---------------
A friend inside Google reference me and get an on-site interview shortly after a HR phone screen. The onsite interview is 4 rounds and questions are not difficult. However, the whole process is pretty exhaustive.

Signed NDA. Can't tell.   Answer Question

Oct 28, 2014
---------------
Applied through referral. phone, then onsite. 4 interviewers onsite. Was a bit disorganized, some interviewers were late. lunch with an engineer (not part of the 4). they didn't let you see the rest of campus too since you needed an ID to get in. great campus though.

Implement a circular buffer ; make it thread-safe   Answer Question

Oct 25, 2014
---------------
Skip the first initial interview because I did good in their interview one year ago. The onsite was 5 rounds. 10 questions asked. All about coding. No design questions. 1 question is from cracking code interview.

Design a algo. to compress a string. If there are multiple repeated characters aaaa, put a3 instead. Need to deal with numbers and math equations   Answer Question

Oct 23, 2014
---------------
A friend inside Google reference me and get an on-site interview shortly after a HR phone screen. The onsite interview is 4 rounds and questions are not difficult. However, the whole process is pretty exhaustive.

Signed NDA. Can't tell.   Answer Question

Oct 23, 2014
---------------
The interview process was handled in a very profesionnal manner throughout. It's great to know that your recruiters will accommodate your schedule (e.g. give you a few weeks to prepare if you need that time) and keep you updated at every stage. Although I originally applied for a non-engineering job (given my background), I got contacted by a recruiter who asked if I was willing to apply on the software engineering track with a focus on my niche skills. Since it didn't hurt to try and actually learn about computer science fundamentals, I gave it a shot. I was interviewed by 6 people total (1 phone screen + 5 onsite interviews in a single day with lunch in the middle). Over the course of the process, I was in contact with 2 recruiters, one for the phone screen stage, one for the on-site stage. Some of the interviewers seemed to be aware of my niche skills and had obviously been selected to interview me based on the match between their skills and mine. Some of the interview questions did reflect that concentration but most didn't and were focused on CS fundamentals, algorithms and data structures. Overall, it was fun and challenging.

The most unexpected question I had to answer had to do with some research I did more than 10 ago as part of my PhD dissertation.   Answer Question

Oct 22, 2014
---------------
Got contacted by a recruiter after submitting a resume on a recruiting fair. Took ~3 weeks. Interviews were scheduled quickly. Recruiter was very helpful and accommodating. While they have a reputation of harder questions, these were not hard, but they make you write code on paper and they type it in a compiler which is slightly unusual.

The questions were ok, nothing crazy unexpected, but the interviewers were unhelpful and didn't give much feedback   Answer Question

Oct 20, 2014
---------------
Phone interview starts directly with technical questions. The acknowledge it involves is about the array of string, of array of integer. Therefore it is simple for the algorithms part, but tedious for the coding part, many corner case to consider. The interview may give you some hint, buy it is not positive I guess, they really want people who are writing code every day.

The corner case is not easy to cover completely.   Answer Question

Oct 10, 2014
---------------
Phone screen, I applied online for the position and the very next week a recruiter emailed me to set up an interview. An interview was set up 4 or 5 days later.

Asked me one prompt about iterators.   Answer Question

Oct 17, 2014
---------------
Reached by a recruiter. She was nice and provided me with a detail list of prep material. The technical interview did not go well. The interviewer had a strong accent and we didn't understand each other half of the time. The first question is easy--find common elements in 2 sets. He asked me about time complexity. I answered correctly but there came the communication barrier. He did not hear me correctly and I wasted a lot of time explaining my thought. Then next question is about scalability. What if the sets are very large(10TB)? I did not prepare for that. The third question is a brain teaser: if 1000 couples are to give birth to male and female babies(50% change each), and they would keep giving birth until they have a girl, what's the boy to girl ratio in 20 years. I got this one. Finally reverse bits of an integer.

Scalability   Answer Question

Oct 16, 2014
---------------
It took few weeks,somebody called me for first time and after some general chatting he sent me an email to have technical phone interview. Questions were not that hard but the interviewer had very bad accent and breakage in the voice.The call quality were very low and I hardly could understand the questions. The interviewer was not helpful.

ambiguous question.   1 Answer

Oct 16, 2014
---------------
I applied online and got an email back the next day. The recruiter was very nice and very quick to reply. We set up two back-to-back phone screen interviews requiring live coding. The first was pretty straightforward and we completed 3 questions. The second was a tougher question that took longer.

I'm not allowed to post anything about the specific questions.   Answer Question

Oct 6, 2014
---------------
I get in touch with Google Recruiter through an employee referral. The recruiter is so cool, and some informal discussion about my background and he explained the interview procedure. One week after they organized a phone interview, but the phone line was pretty bad and very hard to understand what the interviewer is asking. I think it my unlucky day and everything was uncomfortable. All the questions were unexpected and no small mistakes are tolerated.

Reorganize array of numbers in "s1 &lt; s2 &gt; s3 &lt; s4 &gt;.... " fashion. The numbers may include duplicates.   6 Answers

Oct 13, 2014
---------------
I was contacted by a recruiter on LinkedIn. She set up an initial phone "interview" with me to find job openings at Google that were suitable for my background. The recruiter was very nice and helpful. She informed me about the interview stages and how to prepare for them. The initial stage was a technical phone interview which would involve coding in Google docs. I gave her my availability and the interview was set up. Take as much time as you need to prepare for the technical phone interview. It is best to be prepared than to rush into it. I wasn't well prepared, so I didn't make it to the next stage.

Agreed to an NDA, so I cannot disclose. But it was a graph related question, very similar to the graph related questions on hiredintech.   Answer Question

Oct 13, 2014
---------------
Got my initial phone interview through an employee referral. This was followed up with a second phone interview since I didn't do too well on my first one, I think. I did manage to get to an onsite interview in San Bruno with four interviewers. However, I ultimately failed to get hired.

None of the questions were really difficult in a logical sense after preparation from provided materials, but I think I misinterpreted the question the second interviewer gave me after later reflection.   Answer Question

Oct 9, 2014
---------------
Get email from recruiter stating that they wish to contact me because I dropped my resume last year, and see if I am still interested to this position. After that I had an interview with one of the engineers. Interview was fair, including some behavior questions and one technical question. I was asked to talk about the algorithm to the problem, its complexity before writing it down on google doc. After I finished I was also asked to state any potential problems. After 2 days I got a call from recruiter and said I need to have a second phone screening from another engineer. The 2nd interview was pretty much the same format as the first one besides there are more behavior, and there are two technical. The interviewer only asked me to give the algorithm to the first one, and I need to actually write down the code for the second one. I cant finish writing, because the interview is limited in one hour, and the interviewer called me somewhat late. Recruiter called me few days later to inform me I didn't get through to the final round.

Array ordering, find the submatrix   Answer Question

Oct 10, 2014
---------------
I put up a sparse profile on LinkedIn and was contacted in a few days. The first call was from an HR person and was very short. Just a cursory look at the interview process and a appointment scheduling. Also, I was given an email with a great deal of study material. Second call was a 45 min technical interview. I got the first question in about 25-30 minutes then the interviewer asked me other questions about my resume. We never got to the second I got a call back a week later or so saying they wanted to fly me out. The on-site was four interviews and a lunch in the middle. The final interview had a second employee sitting in a shadowing the interviewer. After this, it was about a month until they got back to me with the verdict.

The final interview had a tricky question about converting a post-order tree to pre-order.   Answer Question

Oct 10, 2014
---------------
Talked to recruiter over the phone who then sent me an email with all of the details on what the interview would be like over the phone with an engineer. I had one technical interview with the engineer but apparently got mixed reorganize array of numbers in "s1 &lt; s2 &gt; s3 &lt; s4 &gt;.... " fashion. The numbers may include duplicates.   6 Answers

Oct 13, 2014
---------------
I was contacted by a recruiter on LinkedIn. She set up an initial phone "interview" with me to find job openings at Google that were suitable for my background. The recruiter was very nice and helpful. She informed me about the interview stages and how to prepare for them. The initial stage was a technical phone interview which would involve coding in Google docs. I gave her my availability and the interview was set up. Take as much time as you need to prepare for the technical phone interview. It is best to be prepared than to rush into it. I wasn't well prepared, so I didn't make it to the next stage.

Agreed to an NDA, so I cannot disclose. But it was a graph related question, very similar to the graph related questions on hiredintech.   Answer Question

Oct 13, 2014
---------------
Got my initial phone interview through an employee referral. This was followed up with a second phone interview since I didn't do too well on my first one, I think. I did manage to get to an onsite interview in San Bruno with four interviewers. However, I ultimately failed to get hired.

None of the questions were really difficult in a logical sense after preparation from provided materials, but I think I misinterpreted the question the second interviewer gave me after later reflection.   Answer Question

Oct 9, 2014
---------------
Get email from recruiter stating that they wish to contact me because I dropped my resume last year, and see if I am still interested to this position. After that I had an interview with one of the engineers. Interview was fair, including some behavior questions and one technical question. I was asked to talk about the algorithm to the problem, its complexity before writing it down on google doc. After I finished I was also asked to state any potential problems. After 2 days I got a call from recruiter and said I need to have a second phone screening from another engineer. The 2nd interview was pretty much the same format as the first one besides there are more behavior, and there are two technical. The interviewer only asked me to give the algorithm to the first one, and I need to actually write down the code for the second one. I cant finish writing, because the interview is limited in one hour, and the interviewer called me somewhat late. Recruiter called me few days later to inform me I didn't get through to the final round.

Array ordering, find the submatrix   Answer Question

Oct 10, 2014
---------------
I put up a sparse profile on LinkedIn and was contacted in a few days. The first call was from an HR person and was very short. Just a cursory look at the interview process and a appointment scheduling. Also, I was given an email with a great deal of study material. Second call was a 45 min technical interview. I got the first question in about 25-30 minutes then the interviewer asked me other questions about my resume. We never got to the second I got a call back a week later or so saying they wanted to fly me out. The on-site was four interviews and a lunch in the middle. The final interview had a second employee sitting in a shadowing the interviewer. After this, it was about a month until they got back to me with the verdict.

The final interview had a tricky question about converting a post-order tree to pre-order.   Answer Question

Oct 10, 2014
---------------
Talked to recruiter over the phone who then sent me an email with all of the details on what the interview would be like over the phone with an engineer. I had one technical interview with the engineer but apparently got mixed reviews so they are giving me a second chance.

Asked 1 relatively well known programming question plus some questions about prototyping.   Answer Question

Oct 4, 2014
---------------
I applied online and the process took about three weeks. Then it was two back-to-back 45 minutes general technology interviews. The interviewers were nice and helpful. One week later, I was asked to do an additional 45-min general tech interview. They didn't say much about why but it was hard. Unfortunately I didn't make to the next round.

Signed NDA. But they were pretty common coding questions.   Answer Question

Nov 13, 2014
---------------
After a career fair at my school I talked to the Google recruiter, who suggested I apply online within the next few days to be eligible for an on-campus interview in a few weeks. A recruiter contacted me 10 days later for a technical phone screen--seems I didn't make the on-campus interview. I arranged a for a phone interview, to take place in 5 days' time. The phone interview stretched on for >45 minutes. Connection wasn't very good. I was asked about experience, general knowledge, and two coding problems, one easier, one harder. On the easier problem I had to re-imagine the algorithm twice to get a time complexity the interviewer was satisfied with. On the second problem I got stuck for a few minutes on an off-by-one error. Recruiter called me later offering an onsite interview. I asked to be interviewed for the Seattle/Kirkland office so she transferred me to a different recruiter who handles that location. I scheduled the onsite as soon as I could (in about 2 weeks' time) because I had a deadline for another offer. Both recruiters were understanding and gave me prompt responses. The onsite was four technical interviews, each an hour long, with an hour-long lunch break in between. All five interviewers asked if I had questions, so by the end of the day I was grasping at straws for any new questions to ask. Each technical interview had two whiteboard coding questions of about equal difficulty. (On interviewer asked three coding questions, but the first was just a warm-up.) On two interviews I answered all questions before time ran out. On one interview, the interviewer made me realize the function I had just coded up wouldn't solve the problem, right as time ran out. I held him back for a few seconds as I drew out the correct solution on the board for him. On the last interview, the time ran out before I could code up the answer to the problem. It was all data structures and algorithms with no architecture questions, but that's probably because I was a new grad. One interviewer was friendly and enthusiastic. Two of them were pretty withdrawn, so I had no idea whether they liked what I was doing or not. The last one was blunt and quick to tell me when I was doing something wrong, but he also never brushed off my questions or weird algorithm ideas. Two weeks after the onsite interview, I got an offer for after graduation. I feel like coding interviews are just as much psychological as they are technical. You have to keep a cool head during a stressful situation and accept criticism with good grace. You also have to be able to communicate your ideas really quickly and effectively. I drew out diagrams on the whiteboard as I was brainstorming--having visual aids really helps.

I was surprised when the first thing they asked about was the prior experience on my resume. I was expecting only technical questions and hadn't brushed up on my past projects.   Answer Question

Oct 6, 2014
---------------
Applied online and three weeks later received an E-mail from the recruiter saying that I'm going to have two on-site interviews at the Fremont Google office in Seattle. Each interview takes 45 minutes. The questions are straightforward, involving array searching, binary tree searching, and recursion/DP, but I got stuck in one question and took a while to finish it. One week later I got the rejection letter.

No unexpected questions   Answer Question

Oct 6, 2014
---------------
Interview process is fairly normal, but recruiters can be fairly slow with responding. The host-matching process can take an excruciating amount of time, so be aware of that. Most recruiters are decent in their speed at replying emails, but there were some windows of time that took a bit too long.

No Question
Oct 10, 2015
---------------
I applied online. I had two phone screens. Then I gultiple nodes are at the deepest level, then return the rightmost node.   1 Answer

Nov 3, 2014
---------------
An online challenge, followed by a conversation with a recruiter, followed by a phone interview.The phone interview is 45 minutes long and includes a discussion of projects as well as coding questions.

How would you design & build Twitter from scratch?   Answer Question

Dec 21, 2014
---------------
Several recruiters from Google reached out to me a few times over the last few years - they were quite persistent. The recruiter clearly explained the official interviewing process to me. For some reason they skipped the phone interview for me, and the first time I spoke to any Google Engineers was on my in-person interview. I didn't officially "apply"until just before I scheduled the interview & didn't apply for any specific job. The questions were interesting & the engineers super smart, quite friendly, helpful, and sometimes awkward. I had five technical interviews in one room over the course of a day in the GoogleNY office during my in-person interview - most were one-on-one and one had a junior engineer sitting in. Each interviewer wrote down information about the specific question they asked on a sheet of paper, but each of the interviewers noted that they couldn't read the previous interviewers' handwriting. I was taken to lunch in the Google cafeteria. Everybody was very intelligent and excited about working at Google. I feel pretty good about working through solutions to all of the interview questions, but stumbled a little on my probability.

reverse a linked list using iteration, find max, min in a first increasing then decreasing array, write a pow function, a hard dynamic programming question   Answer Question

Mar 10, 2015
---------------
Submitted application online. 2 phone interviews about algorithm. Passed the interviews and went to the project matching phase. Waited for the result of project matching for a long time. A host was interested in me finally and conducted an interview about my background in the specific area and fitness for the project. Then I got offer.

Signed contract   Answer Question

Feb 14, 2015
---------------
Applied on the career fair. After one month, got a notification from an HR said that they were willing to have a technical interview with me. It was two back-to-back phone interviews. After that, got into the host matching phase and matched with three groups. Finally got an offer from one of the groups.

I didn't write any SQL query for a while at the time, so I kinda messed up.   Answer Question

Sep 28, 2014
---------------
The phone interview questions were easy if you have read CLRS. I had a shared document opened and I had to write code in that page. Pseudo code was accepted.

The questions were not that difficult, I just wasn't prepared enough. I was asked to implement an LRU cache. Interviewer was patient and helped me through it.   Answer Question

Oct 3, 2014
---------------
Applied online and got an email the next day saying that I am a good fit for the position. HR was friendly. She set me up for technical interview next week over the phone. I was made to write code in this interview on a Google doc.

Basic Java question   Answer Question

Oct 5, 2014
---------------
First round, you will have a phone interview. They will ask some basic programming question and one technical questions. Asking writing code on Google Doc. Second round, another phone Interview, ask another round technical questions. Stop it this point.

No Question
Oct 3, 2014
---------------
Applied online and got an email the next day saying that I am a good fit for the position. HR was friendly. She set me up for technical interview next week over the phone. I was made to write code in this interview on a Google doc.

The questions were not that difficult, I just wasn't prepared enough. I was asked to implement an LRU cache. Interviewer was patient and helped me through it.   Answer Question

Oct 5, 2014
---------------
First round, you will have a phone interview. They will ask some basic programming question and one technical questions. Asking writing code on Google Doc. Second round, another phone Interview, ask another round technical questions. Stop it this point.

Basic Java question   Answer Question

Oct 5, 2014
---------------
It's Phone Interview. First, he asked me some questions about projects on my resume, some low level questions. Then coding, merge intervals which is on Leetcode. Then I asked some questions about him. One word, it's not enough to just practice algorithm question!

merge intervals Leetcode   Answer Question

Sep 26, 2014
---------------
Was contacted by a Google recruiter. Talked to two people on the phone. Both had large egos and fresh out of school. One asked some algorithm questions, and then suddenly hung up. There was second interview a few days later- the other person focused on scalability. There was significant disagreement between us on how to achieve it.

NDA was signed so cannot provide question.   1 Answer

Nov 23, 2014
---------------
I applied online. After about a week, I received an email from a Google College Recruiter. She help me to make a schedule for a technical phone interview, and gave some information about it. Usually you may have two weeks to prepare for it.

My question was about tree in C++: Given a tree(single linked), in which each node had an integer value and multiple descendants, I was asked to calculate the number of the nodes whose value was as same as all of its descendants.   Answer Question

Feb 20, 2015
---------------
I applied online, through my college's career website. I was contacted within about four or five weeks and was told to respond with my availability to have 3 phone interviews. The woman that I was communicating with was great. During the interview, we communicated over the telephone and shared a document on Google Docs. I coded for them on the Google Doc, and they gave me immediate feedback. Two out of three of the interviewers were aggressive and not very kind. It was clear they had no interest in who I was, just what I knew.

Recursive, Classes   Answer Question

Feb 15, 2015
---------------
I first met with a recruiter on campus, the recruiter instructed me to apply online to be considered for the position. Got an invite for an interview a few days after I submitted my application. Interviewed in October 2014. The interview was two back-to-back 45 minute interview. Lots of technical questions as you'd expect from Google.

A couple behavioral questions such as describing a project you've done, how you overcome difficulties etc for the first 5 minutes. Followed directly by technical questions and problems.   Answer Question

Nov 4, 2014
---------------
Applied online and through a career fair. Was invited to an in-person interview at my university but couldn't make it so instead I received a phone interview. Had to sign an electronic application and NDA through adobe reader and return to recruiters along with an unofficial transcript. Was given documents and tips on what to study for. Had 2 phone interview with 2 engineers who asked technical, algorithm questions.

Given two sets of data of unknown size and of the same type - sets A and B, find all occurrences of A that are also in B. (*Need better than O(n^2) time)   1 Answer

Jun 4, 2015
---------------
Received phone call from interview coordinator / recruiting manager to set up a phone screen. Phone screen went well, so recruiter then set up a technical phone screen with a software engineer. The technical interview consisted of answering coding questions online via a Google docs form shared between the interviewer and myself.

Binary tree and binary search   Answer Question

Sep 16, 2015
---------------
I applied for an internship and I got two phone technical interviews. The first phone interview was not very hard and I think I did well. The second one is a little bit harder and I had some difficulties in answering it. I got a response the day after the interview.

No Question
Sep 16, 2015
---------------
I applied for an internship and I got two phone technical interviews. The first phone interview was not very hard and I think I did well. The second one is a little bit harder and I had some difficulties in answering it. I got a response the day after the interview.

Binary tree and binary search   Answer Question

Sep 22, 2015
---------------
2 45-minute technical interviews (either on-campus or on the phone) A week or 2 later recruiter tells you if you get into the host-matching process. If you get in, then you fill out a preference form for what you're interested in/skills/preferences for locations etc. Potential managers or hosts review your information and give you a 30-min interview if they're interested in you where they describe the project and you get a chance to ask questions. Potential managers tell recruiter if they want to move forward. Then you're allowed to decide if you want to move forward with the current team. If not, then you wait for other potential managers to contact you. There are cases when people in the host-matching stage don't get matched.

Binary search, anagrams, and binary trees   Answer Question

Jul 23, 2015
---------------
I had two back to back phone interviews. The first was harder due to communication issues. I couldn't understand the interviewer properly because of his accent. The second interview was fine. There were no questions I didn't expect, and the interviewer was helpful in answering my questions. I passed the interview stages and entered the matching stage very early on. However, I waited months for the first match and did not get picked for that project. Finally, I was denied the internship due to a lack of match. I would say that the interviews were not extremely hard. If you prepared then there should be no problem. The matching stage is really the issue. If you're lucky you get matched early on. If not you can wait for months and not get a match.

There&#039;s an array filled with characters/numbers along with spaces. Each index contains only one ASCII character or a space. Give an algorithm that moves all spaces to the end or beginning of the array while keeping the rest of the characters in the original chronological order. (this can be done in O(n))   Answer Question

Jan 16, 2015
---------------
HR contact me and schedule three phone interviews. There are all basic questions about Java and data structures. After two weeks passes, the hr told me that I passed the interview. And I got one host match interview. And I passed.

Questions are similar to the ones on leetcode.   Answer Question

Feb 8, 2015
---------------
First I applied the position online. Then few weeks later they scheduled a phone interview. After that, they scheduled an onsite interview in Mountain View. Phone interview took 45 minutes and onsite took 4*45 minutes.

Given an integer, convert it to a string in Roman Numeral notation.   1 Answer

Dec 18, 2014
---------------
The interview process was rather pleasurable. I made it to the final round of interviews and was flown out to their California campus. Everyone was very friendly, but the interview questions were very difficult. I highly recommend hard studying before going into the interview.

Not difficult. The difference between Hashtable and binary search tree, how to reverse a linkedlist.   Answer Question

Nov 18, 2014
---------------
I was contacted by a recruiter from Google. He first made a phone call to me and informed everything about Google hiring process. And he asked about my interest and former projects and experiences. Then, he sent me an email about that and told me to pick up an appropriate time for a phone interview.

it's a questionnaire.   1 Answer

Feb 25, 2015
---------------
I just take a questionnaire that about 1 hour long. the questionnaire is asking something about your personality, knowledge background, and something maybe related to their job required. Most of the question maybe matched to what you performed on the resume, like what you learned? are you good at that? or how good as you rate yourself.

OOP design issues, linked list, IO, recursion, DP, and a little bit system-design-discussion. Very straightforward. Most discussions are open-ended.   Answer Question

Apr 12, 2015
---------------
Applied online and got a response in a week with a request of online coding problem, which can be solved in 20 mins. I passed it and got a phone interview within that month. This is also not that difficult, but just went through some basic concepts such as OOP design and concepts. The coding question is straightforward as well, as long as you know how to deal with IO, strings and basic programming. Then I got a phone call from recruiter the other day, and I was told the phone interview went well and the next step is onsite. Onsite interview is cool. 4 rounds, and every round was interesting. We talked much about OOP design and explored the potential issues that may occur if I chose a bad design. The programming problems was not that difficult if you have practiced with enough coding interview problems. I did a bad job in the last round, where I was asked to implement functions of a self-designed data structure. I was kind of tired and did not understand the functionality until I coded it through, and of course I made several mistakes that made my interviewer believed I "catch" things slowly. After 2 weeks, I got a notice phone call that telling me I was rejected, with a slice disadvantage.

First question is to write a sort function, i wrote bubble sort, next is sort linked-lists. I'v tried to write a right version, but the interviewer wants me to optimize it. The final answer is "you can pre calculate the length of the linked-list". The questions are easy, but hard to tell if it's good for selecting programmers.   Answer Question

Oct 15, 2014
---------------
I got a phone interview after a career fair. I tried to convert it to a on campus interview but failed. I got a phone call and starting to coding on google docs.

No Question
Oct 21, 2014
---------------
Started from the campus recruiting. But have not got back for two month. Then from friend's referral. Only phone interview finished but failed to pass the phone interview. I know there are onsite interview afterwards. But I am not able to get in.

Some basic sorting algorithms and data structure. Easy but need to consider a lot of boundary conditions   Answer Question

Oct 30, 2014
---------------
It was a 45-min technical phone interview. A question that is not hard (very basic array manipulation given a desired final state) was asked but I didn't do it well because I over-estimated the complexity of the problem at the beginning. One important thing to mention is that you should know something about the interface and how your code will be used in a bigger system. The interviewer is very nice though.

Interface   Answer Question

Nov 7, 2014
---------------
Applied through university career fair and got an interview 2 weeks later. Two back to back interviews on campus. Each took 45 minutes.The first interviewer asked several concept questions, mostly OS and network questions. Then there is a coding questions, was not very hard. The second interviewer gave only one coding question, very straight forward.

I had the idea that Google is all about challenging/tricky coding questions, but they did ask some conceptual questions, which I hadn't reviewed for a while.   Answer Question

Nov 6, 2014
---------------
The process was smooth. They contacted me through LinkedIN and asked me to send my resume and my unofficial transcripts. After a couple of days I was contacted by a person asking me details about my Projects and asked me in what Language I would liked to be interviewed in. Then an interview was scheduled. It did not go that well and I was contacted in a couple days informing me that they were not moving forward with my application.

UTF 8 encoding   Answer Question

Nov 9, 2014
---------------
I applied to Google software engineer intern. I asked one Google employee to refer me. After only one day, I was contacted by a Google recruiter. She scheduled an phone interview for me at a day three weeks later. In my interview, there were two rounds, with the first one from 2pm to 3pm, and the second one from 3pm to 4pm (CST). The interview questions are not hard. They are basic string problems. But I didn't answer them well.

In a sorted array, find the number of pairs whose sum is less than a given value.   2 Answers

Sep 30, 2014
---------------
No phone screening. Followed by on-site interviews. The recruiter seemed to prefer Python and network related experience. Recommended some books and web links, a couple of weeks before the interview started. Was asked to write code on the white board while explaining what is being done. Chose C++ but Python or Java would have been a better suit. Seems to be important to prepare for impressive questions to ask the interviewers.

Embarrassed that most interview questions were about database design, not quite related to my background given in the resume.   Answer Question

Sep 29, 2014
---------------
Submitted resume online and got 2 phone interviews, both technical. Process time about 3 to 4 weeks. Asked about projects on resume and coding questions. One is really easy and the other is build a multiplier

build a multiplier   Answer Question

Sep 28, 2014
---------------
Applied online, a few weeks later a recruiter emailed me to set up phone interviews. Two back to back phone interviews with coding through a google doc. One was with a software developer and one with a manager. Decision took another few weeks before it came back.

Basic data structures questions and sorting algorithms   Answer Question

Sep 9, 2014
---------------
Contacted by HR at early July, asking whether I can have an phone interview in 3 weeks. Replied "not available until August". Contacted again in late July and scheduled a phone interview in late August. During the interview, I was asked to talk about my resume, including project and research experiences. Then asked to write a class to define a deck of cards, and write shuffle function for the cards.

was asked to write a class to define a deck of cards, and write shuffle function for the cards.   Answer Question

Sep 11, 2014
---------------
Applied online without referral. Recruiter reached out to me. I filled a questionnaire to indicate my interests. Got two phone interviews. They were not very hard. After the phone interviews, you learn in a few days if you have passed. Then, you are in a pool and wait for someone to be interested in you. If you know people at the company, definitely let them know so that they can inform their friends that you are looking for an intern host. If someone is interested, a host interview is set-up. This is usually non-technical and only to see if you are interested in the project. If no one comes up after some time, they defer your application to next internship season. Next time, you directly enter the pool without any additional interviews. Recruiter is also a key person. Sometimes, they look out for you, sometimes they don't care.

Nothing unexpected. Typical questions that you can find in "Cracking the coding interview" or "Programming interviews exposed".   Answer Question

Sep 11, 2014
---------------
Applied online without referral. Recruiter reached out to me. I filled a questionnaire to indicate my interests. Got two phone interviews. They were not very hard. After the phone interviews, you learn in a few days if you have passed. Then, you are in a pool and wait for someone to be interested in you. If you know people at the company, definitely let them know so that they can inform their friends that you are looking for an intern host. If someone is interested, a host interview is set-up. This is usually non-technical and only to see if you are interested in the project. If no one comes up after some time, they defer your application to next internship season. Next time, you directly enter the pool without any additional interviews. Recruiter is also a key person. Sometimes, they look out for you, sometimes they don't care.

Nothing unexpected. Typical questions that you can find in "Cracking the coding interview" or "Programming interviews exposed".   Answer Question

Sep 14, 2014
---------------
Through website, set up phone interview. During phone interview, had basic questions about previous projects and then had to code in a google doc. If you review the material they give you going in and have a quick mind, you should do fine. If you haven't covered at least have of it though, you probably will have to reapply whenever you have learned it.

Cannot reveal because I signed a confidentiality statement.   Answer Question

Sep 14, 2014
---------------
Online coding exam. Not too hard if you know what you're doing. People were very friendly and allow you to take your time. After exam, if the out come is good, they would invite you over for second interview

There were no questions particularly difficult, but what I did not expect was that the second interviewer asked me a problem of segment tree.   Answer Question

Sep 6, 2014
---------------
Referred by an employee in MTV. HR called me soon, and scheduled two 45-miniute online interviews for me. The HR was very nice, for I was in Beijing and applied for an internship in MTV that time, in order to help me perform well in the interview, she scheduled the engineers from Canada to interview me, that helped me a lot, because the time zone of Canada office was better for me to take the interview on form. The interviews went well, and the interviewers were nice and patient. The coding problems they asked were mainly about algorithm and data structure, and some of my project experiences were asked in detail two. I think the most challenging thing in the interviews was that I should describe my thought in English to the interviewers, it is very important to have a good communication with interviewers.

Find the minimum number required to insert into a word to make it a palindrome.   8 Answers

Nov 23, 2014
---------------
I got an email from a recruiter, who forwarded me to another recruiter. She explained to me the interview and hiring process: I would go on-site (in my case, Google Pittsburgh), and have 4 interviews in one day on the white board. I would also get lunch. However, since I could only come later, I had lunch before all of my interviews back-to-back. Each interview was 45 minutes, and the interviewer definitely guided me in the right direction at times.

I was asked to come up with an algorithm for a problem that I was unfamiliar with and did not know the parameters of.   Answer Question

Oct 4, 2014
---------------
HR staff calls you to talk about your interest in the job, your location preference, and the interviewing process. They schedule for you a phone screen interview. The phone screen is a 45 minute technical interview: you code with the interviewer in a Google Doc. If you pass the phone screen (or two), you're invited to on-campus interviews. On-campus interview takes all day: 4 or 5 technical interviews of 45 minutes each, plus one hour lunch with an engineer. Each technical interview you are talking to one engineer, solving technical problems by describing algorithms and coding on the white board. Interviewers want to see how you think and code. They don't ask about your past experience or education. Your interviews submit their reviews to a hiring committee, which makes the decision whether to make an offer. It takes about two weeks for the HR staff to call you back to let you know if you got an offer.

The technical question itself.   1 Answer

Sep 3, 2014
---------------
The interview was an phone interview, mostly technical and lots about previous projects which i have done, and also work flow of projects, technical questions were also mostly.. Most of the questions are logical thinking and puzzles

What was your most difficult challenge in your project?   Answer Question

Nov 4, 2014
---------------
Connected to a recruiter through the employee referral program. Set the date for the phone screening. The interviewer asked a typical Google type algorithm question, which took me some time to understand. I thought I solved the problem, with series of hints by the interviewer. Maybe I took too much time and/or my solution was not satisfactory.

Coding problem : Given a string "aycvxfz" and a smaller string "fxa" Return a pointer to the location of the letter that first occurs in the bigger string from the smaller string. i.e. in this case return pointer to position of 'a' in the case of "abcdef" ; "cba" return pointer to 'a' in the case of "csxfbg" ; "xgf" return pointer to 'x'   Answer Question

Oct 31, 2014
---------------
The recruiter was very quick to contact me, unfortunately the position was filled. They said they would contact me in the future if my skill set matched a new job opening.

No Question
Oct 21, 2014
---------------
Round1: Phone HR - Resume based interview with some basic questions like what is the bigO notation. Round2: Phone Technical - Coding question - String based Given a string "aycvxfz" and a smaller string "fxa" Return a pointer to the location of the letter that first occurs in the bigger string from the smaller string.

No Question
Oct 1, 2014
---------------
it took about 2 weeks to process phone interview from submitting my resume. most of question were regarding my status and basic concept of data structure and algorithm. they asked me about only BASIC CONCEPT which are written in textbooks and looked like they wanted me to answer exactly the same answer in textbooks. when I tried to explain using examples, they asked me to usel very specific wording.

nothing special, just typical interview questions which are more likely be in midterm exams   Answer Question

Oct 1, 2014
---------------
Applied online, and received an interview request within a couple of days. Did a 45 minute interview which stretched to be an hour. The interviewer was kind of nice, talked about what they did, and their experience at Google. They also asked me about my previous experiences in school and work. We jumped into the technical question. Ended up getting a reply a week after the interview stating that they going forward with me in the job interview process. I didn't study enough for the interview... make sure you are prepared.

NDA. But, it was an algorithmic problem involving arrays.   Answer Question

Sep 26, 2014
---------------
Submit a resume, after submission IF selected you then have to take a survey to let them know a little bit more about yourself and complete a coding exam. After coding exam no results are shown however you're contacted in roughly a week as to whether or not you'll have an in person interview.

The coding exam. Be prepared for anything. Two questions in an hour isn't the easiest. The first is easy but the second is far more challenging.   1 Answer

Sep 15, 2015
---------------
I had 2 phone interviews and then was flown on site for a full day of interviews, 5 in total, back to back with a different engineer in each. Had lunch with another developer in between. I would recommend bringing ear plugs in case the hotel you stay at isn't great. But overall the process was straight forward, the recruiters and interviewers were all very friendly and fair.

What are you looking to do further on in your career? And standard HR questions. All the technical questions I got aligned with the areas they sent in the preparation package.   Answer Question

Oct 10, 2015
---------------
Straightforward. Two rounds of phone interviews followed by several host matching interviews. Phone interviews were just recursion, nothing surprising. Host matching interview is mostly talking about your experience and see if you are interested. Host matching process is painful and could wait a long time. So be prepared. Overall it is not so hard to land an internship at Google.

Give a combinatorial explosion of subsets.   Answer Question

Aug 29, 2014
---------------
5 in-house technical interviews. 4 algo/coding and 1 design. - strtok implementation - given set of characters duplicates possible, and given dictionary (list of words). Find longest word from dictionary that can be made from given characters. How will you do it if '*' (matches one wild character) is also included? - Access card system design - Implement a stack with find_min api as well. - Given set of points, find line with max points on it. - utf-8 byte stream verification and character extraction.

Most difficult part is judging what interviewers want who don't talk that much and just keep on scrribling stuff down.   1 Answer

Aug 15, 2014
---------------
First step was to submit an application through Google's online system, which included a resume and (optional) cover letter. I was contacted by a recruiter within 3 days (including the weekend) and set up an interview for 2 weeks from that date. It was two back to back technical phone interviews. The interviewers let you choose what language you wish to demonstrate your knowledge in. I chose Java for both. My first interviewer was great. He introduced himself and throughout the interview, was very proactive on trying to guide me through a difficult part of the problem or hinted if he wanted more to the solution. I had to constantly verbalize my thought process, as it was a phone interview, so he mainly responded to that. My second interviewer was not so great. He was 10 minutes late and seemed like he didn't want to help at all. Even after his "explanation" of the problem, including a confusion-inducing analogy, I was still a bit uncertain about the problem, so I just went with what I thought was right. It ended up being mostly correct until he literally started to yell at me over the phone for the last line, which was parsing an object to an int, then back to an object when there was another method that did what I was trying to do already (which he didn't explain, so I didn't know what it was, go figure). He seemed to not be paying attention at all, as there were multiple times where I asked a question, only to be answered with silence. After that, I received a follow up email from the recruiter, stating I would know the results in a week or so. I ended up not getting the position (most likely due to that second interviewer), but am not deterred from applying again. I will admit my Java was definitely not up to par, considering that wasn't the dominant language I programmed in for the past half year and only really "studied" for two weeks before the interview.

Prove P = NP   1 Answer

Aug 14, 2014
---------------
Google is remarkably quick at getting back to applicants when applying through directly on Google's employment opportunities page. I received an email two days after submitting my resume and was asked to schedule two back to back 45 minute interviews the following week. Each interview was technical in nature and I was asked to solve two coding questions by typing code into a shared Google document with my interviewer. After asking questions and coding my solutions, the interviewer and I went over my solution and discussed aspects of it such as the running time, security and readability of the code. I did not get past the first round but was pleased by the swiftness of the process.

Answering the questions correctly within a timely order.   Answer Question

Aug 13, 2014
---------------
Received email for interview & scheduled a interview date. The employer was very precise & called the date of the interview at the scheduled time slot. However during the interview when a question was being asked the interviewer gave very little time to answer or even think about the question or answer. The interviewer basically rushed me through the 2 questions. The interviewer also, didn't give me any feedback as to how the interview went or what else I need to work and practice more concepts on.

One of the reviewers was a bit cocky. Stay calm in situations like that, ignore whatever is bothering you, and just address the question at hand.   Answer Question

Aug 22, 2014
---------------
Recruiter was very helpful, but the whole process can take a few weeks. Usually 4-5 technical interviews about algorithms and data structures. Each one gave a problem with a specific question but it develops several concepts. Be sure to think outloud and start from something simpler if you are stuck. Pretend the interviewer is your colleague. Spend some time beforehand practicing code on a site like hackerrank.com so that you are comfortable writing code on command.

No Question
Aug 13, 2014
---------------
Received email for interview & scheduled a interview date. The employer was very precise & called the date of the interview at the scheduled time slot. However during the interview when a question was being asked the interviewer gave very little time to answer or even think about the question or answer. The interviewer basically rushed me through the 2 questions. The interviewer also, didn't give me any feedback as to how the interview went or what else I need to work and practice more concepts on.

Answering the questions correctly within a timely order.   Answer Question

Aug 22, 2014
---------------
Recruiter was very helpful, but the whole process can take a few weeks. Usually 4-5 technical interviews about algorithms and data structures. Each one gave a problem with a specific question but it develops several concepts. Be sure to think outloud and start from something simpler if you are stuck. Pretend the interviewer is your colleague. Spend some time beforehand practicing code on a site like hackerrank.com so that you are comfortable writing code on command.

One of the reviewers was a bit cocky. Stay calm in situations like that, ignore whatever is bothering you, and just address the question at hand.   Answer Question

Aug 15, 2014
---------------
Day 0 — I apply to seven different Software Engineer positions in the Bay Area simultaneously via their website. Day 0 — 38 minutes later, I receive an email from a Recruiter (call him R1), who's also an Engineering Manager (?). He asks when we can talk over the phone about "matching me up with the right opportunities at Google." I send a timestamp back. Day 2 — Phone call with R1, about ten minutes. He asks to tell him about myself, what my background is, what I'm interested in, why I want to work for Google, etc. He ends by telling me we'll set up a phone interview, which I intentionally schedule for a couple weeks later. (R1 asks me to choose a programming language for the interview, and mentions that he'll be sending me a syllabus to prepare.) Recruiting Coordinator 1 (RC1) emails me the details of the phone interview, which we confirm. Day 9 — Still no syllabus. I email R1. He sends me a verbatim excerpt from the Steve Yegge blog post you've already read. Day 15 — Phone interview day. 25 minutes into the schedule time slot, no call. I email RC1. Auto-reply: that account no longer exists. Great. I wait a bit longer. I give R1 a call; no answer, leave a voicemail. He replies within the hour, says he's sorry, asks for availability to reschedule. I reply. Day 23 — Phone interview finally rescheduled for day 28, by new Recruiting Coordinator (RC2). Day 28 — Phone interview, take two. Interviewer (a Software Engineer) asks me a little about myself, then moves on to the questions (I won't go into details, due to the NDA). About twenty minutes of basic Q&A about my language of choice (nothing remotely advanced). Then he asks me to describe (just out loud) the 'find' method of a common data structure. Then he modifies the problem definition slightly, and asks me how I would change the 'find' method. This seems fairly straightforward to me. He asks me to implement it in Java in a shared Google Doc. I do. I step through it with some examples. That's about it. I hang up: I think I nailed it. Day 36 — I email RC2 to check for any feedback. She defers to R1, who within minutes invites me on site to interview. I send my availabilities. I receive confirmation of my interview from RC2. I confirm, and send back two filled out forms (application + NDA; travel form). Day 37 — I make my travel arrangements through their travel agency. They pay for my flight, lodging for the night before and night after, rental car for the duration, transportation to the airport, and food for the duration. (I easily add two more days at my own expense.) Day 37 — R1 emails me to tell me he's leaving Google. R1 introduces R2 (not an engineer, this one). Day 38 — R2 emails introductions and asks when we can talk by phone. Day 42 — Introductory email from RC3, with two documents which are, again, verbatim excerpts of Steve Yegge's famous blog article. Day 43 — Phone call with R2, describes the on-site interview; nothing I didn't already know, except (fairly useless) one-line bios of my four interviewers. Eventually I start wondering why I'm seeing and hearing "Google/YouTube" when it used to be "Google," so I ask. I find out I'm apparently applying for YouTube now and no one bothered to tell me. R2 also tells me she won't be able to make it to greet me on the day of my interviews, so R3 (also not an engineer) will be replacing her. Day 54 — On-site interviews. I show up to the wrong lobby, having assumed there was only one. (Pro-tip: check your email from the Recruiting Coordinator for the exact building and address.) Luckily, I was early enough to make it to the right building on time. Interview, interview, lunch, interview, interview. No breaks at all between interviews. Interviewers either give you a blank expression with no feedback as you talk or else hold your hand all the way to the solution. No middle ground. Half the interviewers didn't seem to want to be there. Thought I did kind of okayish in three, badly in one. Very hard to tell over all, but I was pretty sure I wasn't getting an offer. Day 57 — Within three minutes of each other, emails from both R2 and R3, asking to talk over the phone. I sort out the disorganization, get a call from R3, and am informed I will not be moving on. The only feedback I can get is that my "coding" is lacking, which doesn't make much sense to me. Day 58 — On to other companies. (Day 73 — Still no reimbursement of expenses...)

(Signed NDA)   Answer Question

Jul 25, 2014
---------------
Couple of emails exchanged with the HR, followed by the phone interview with a software engineer. Did not make it through the first round, should have prepared better. The wiggle problem, given an array of integers arrange them such that alternate elements are large and small.(2,5,3,6,...)

The wiggle problem, given an array of integers arrange them such that alternate elements are large and small.(2,5,3,6,...)   5 Answers

Apr 15, 2015
---------------
The process began with a recruiter on LinkedIn contacting me after viewing my profile. The first phone screen was with the recruiter and seemed to be directed towards "placement" in the company. Questions involved things like "Do you like front end or back end coding more?", "What is the time complexity of QuickSort?", "How would you estimate some large exponential function?". There were 0 questions regarding experience or resume information. The second phone screen was with a technical interviewer within the company. The phone connection was awful, the speakerphone on Google's end increased the awfulness, the poor English of the interviewer increased the awfulness even more, and the lack of respect and attentiveness of the interviewer was the icing on the awful cake. The interviewer was not interested in any discussion of my experience or resume at all. He began by asking an esoteric math related programming problem. I frequently asked questions of the interviewer and was met with no response. At some point, I thought the phone dropped out because of 2 minutes of silence even after I asked multiple times if the interviewer was still there. Eventually, the interviewer said he had to leave to use the bathroom while I was struggling and asking questions. He didn't return for 15 minutes. After my time was up, the interviewer said "OK, time is up, good bye" and hung up on me. This isn't how a company as large as Google should be conducting interviews. After notifying the recruiter of the poor interview, she set me up with a third phone screen. The third phone screen had a much more attentive and polite interviewer. Again, no questions regarding experience or resume information were asked. We began immediately by working in a Google Docs window about solving a path finding problem. Google Docs is really bad with code formatting and syntax highlighting, so it was a bit of a nightmare to type out a solution. I left this interview feeling a little better. The final part of the process was to schedule onsite interviews in Mountain View, CA. I was bounced between 2-3 different recruiters and a third party travel agency, so coordinating the travel was frustrating. I'm surprised my application wasn't lost during all the transfers. The onsite process was similar to other tech companies in the sense that there was a long, full day of interviews. In total, there were 6 interviews across a 7 hour period with a lunch interview shoved in there somewhere. Many of the interviewers seemed to be bored or not interested in conducting interviews, so it was a similar experience as my second phone screen. I get the feeling that Google forces their engineers to perform interviews but doesn't hold them accountable to the quality of their interview process. In addition, many interviewers spoke poor English and couldn't successfully communicate the problem that I was required to solve. And finally, I was never asked experience or resume related questions. Google simply doesn't seem to care about experience. In the end, I was contacted with the standard "We are not moving forward with your application" with no feedback that would allow me to improve.

Writing a function that calculates points in a circle Implementing some features of Google Docs   Answer Question

Apr 29, 2015
---------------
One person was expecting ninja code and did not pay attention to approach, and did not say anything throughout the process. In the end, he jot down certain things on the paper and gave it to next interviewer. I had to try to say things again and again, but he was not responding in negation or positive.

How do we find all the numbers between A and B in a binary search tree?   Answer Question

May 1, 2015
---------------
I had sent in a resume, then talked with a recruiter who set up a technical phone interview for me. The technical interview was first an algorithm question. Then, we moved on to talk about an architectural problem. A few days later I got back from the recruiter, I was rejected after the first phone screen. They said I could reapply in a few months.

Going through the thought process aloud was quite difficult.   Answer Question

Aug 25, 2014
---------------
Applied online and received an e-mail for a phone interview. I received some links and documents on how to prepare for the interview which are already in other reviews on glassdoor. The interviewer asked a programming question (to write a code for a simple game) which required the appropriate use of classes. The phone interview lasted around 45 minutes.

I signed an NDA, so I cannot say, but there are some brainteasers before the main coding question in some of the interviews.   Answer Question

Dec 29, 2014
---------------
A Google recruiter contacted me early in the summer (I had interviewed with them previously), and set up a phone interview. I passed that, and they sent me an invitation for an on-site interview. The visit to their Mountain View HQ was very pleasant. I had two interviews, lunch with a Google employee, and another two interviews. I did not find the interview problems particularly difficult, and solved most of them well before time ran out, so I ended up with a lot of time to chat with the interviewers. I think I got them all correct (I hope!), because the interviewers didn't really have many comments about my solutions, and they didn't tell me that anything was wrong. They told me it would take around two weeks to give me my decision but it ended up taking ten weeks, because one of the interviewers left the company without turning in the interview feedback, so I had to do another phone interview. I think some other stuff got lost, so the recruiter contacted me and asked me to fill out some more forms. Either way, it took a really long time, and I was disappointed when I did not get an offer :(

After a fairly standard question (took about 7 minutes to code up) the interviewer went VERY in depth with how I would test the code to make sure it worked.   Answer Question

Sep 23, 2014
---------------
A representative from Google came to our schools ACM club, and that is when I gave my resume to Google. About 4 months later, seemingly out of the blue, I got a call from a recruiter asking if I was interested in interviewing with them. We set up another call to get to know me better. During the call, we talked about the technical interviews that would be coming and what to expect. My

No Question
Aug 1, 2014
---------------
I was emailed about an opportunity to work at Google. The email asked me to set up a phone interview where they asked about my interests and background. They they set up another phone interview, this time a technical one. The technical interview involved coding and asking the interviewer questions about his role at Google. After the first interview, I received another phone call from my recruiter. My recruiter said I needed one more technical phone interview before an on-site interview, so we scheduled one. The second interview was similar to the first.

Write code to determine if a given input string contains balanced parentheses.   3 Answers

Jul 25, 2014
---------------
Interview was easy. Technical questions are no harder than the average company, but they really talk up their interview process to the candidates before the interview. Sent an email with "tips" that was longer than 1000 words

Algorithms.   Answer Question

Jul 23, 2014
---------------
1st Phase: Phone interview and coding is done on google doc. You say what language you are comfortable with and they pair you with a google developer who is knowledgeable in that language.

Write a function with integer input which returns an integer having been flipped around in the binary sense. Example: Given 3, it should be turned into 0000 0011, then flipped 1100 0000, then return 64+128 = 192. I commented that this was easily done via bitwise manipulations, but I have not done those in a while so I wrote a program out in C to do it manually.   2 Answers

Jul 18, 2014
---------------
Initially emailed by HR to set up an initial screening. Phone screening was just background questions and questions about my education. Technical interview came about a week later. It was a bit strange because the person who originally contacted me (HR) ended up either moving to another position or got left for some reason, so I got passed around a lot and had 3 HR people throughout the process.

Find the local minima in an array. A local minima is defined as a number whose left and right indices are greater than it in value.   4 Answers An array contains integers with the property that a particular number, called the majority element, appears more than 50% of the time. Give an algo to find this majority number   8 Answers Implement std::vector's push_back() Also asked for maximum contiguous subarray problem   1 Answer There are n points in a plane. Find the max number of points that lie on a line   1 Answer In a given binary tree, find the number of elements that lie in a given range.   1 Answer

Jul 22, 2014
---------------
Standard: 1 phone screen + 5 on-site technical rounds. Overall the interviewers were pleasant and they look for coherent solutions with bug-free code. Prepare for computer science fundamentals especially algos and data structures. I was lucky that they did not ask any system design questions.

in order traversal of a binary tree, next element in inorder traversal   1 Answer

Jul 8, 2014
---------------
2 Phone interview, 45 min for each. Using google doc to type codes. Most questions are coding problems. Not hard, but need to be careful not to make silly mistakes. After that it tooks very long to tell me the final result

How would you design a system to do such and such? I thought the interviewer wanted me to talk about functions and data storage but in the end he seemed he wanted specific SQL statements which I was not too familiar with.   Answer Question

Aug 6, 2014
---------------
Applied online and received an email within a few days by a Google recruiter. A technical screening interview was organized for the following week. A Google engineer called me and started by introducing himself and Google, then went quickly into the programming question. I managed to solve the problem using recursion within about 40 minutes with only a few hints. After 1 week, I received an email for onsite interviews which was organized for the second week after. The first onsite interview went well. I actually recognized the interviewer from my previous university. The programming task involved class declarations and pointers. I believe I did ok with this question but ran out of time to really give a solid solution. In my second interview, the interviewer gave me a few hints since I was not making progress and I eventually solved it. Then it was lunch with another engineer. My third interview was the worst. He asked me the same question as the 1st interviewer, and I said I had already been asked that question. He then asked a different question that I did not fully understand which direction he wanted to go and in the end it was an SQL command question. I made a mistake in the third question he asked: I started coding before I had fully considered the entire question. The 4th interview was a presentation of my work. This went smoothly and the interview was very cordial. The 5th interview went well although I ran out of time. 2 seemingly simple coding questions. Even though it was past time, this interviewer kept talking about the groups within Google so I thought I did well with this guy. Overall I managed to solve all the questions but with hints. I believe I did well with 3 interviews, 1 ok, and 1 bad.

The one that tripped me up asked me to write code to return all words in a dictionary that can be formed from a string of numbers (e.g. 34556), where the numbers map the same why they do on a phone (e.g. 1-&gt;A, B, or C).   4 Answers

Jul 8, 2014
---------------
I got an email from the recruiter within 45 minutes of submitting an application, but the whole process of the interview took nearly a month. The first interview was a phone interview, which wasn't too tricky. The interviewer was very kind and help with any questions I had. After passing the phone interview I moved to an onsite interview. I had a series of 4 interviews. None of the questions I got asked where too challenging, but all of the interviewers pressed me for more or to expand on what I had after I had worked out a problem. All but one of the interviews were kind and helped me with any questions, but the last one was tight lipped throughout the interview, and just expected me to figure it all out and write it on the board.

Questions about data structure, algorithm. Also object oriented design   Answer Question

Jul 4, 2014
---------------
I initiated the process by responding to an email message from a sourcer and was handed off to a recruiting coordinator. I spoke several times with the recruiting coordinator, who was my primary contact point throughout the proces. After an intial phone screen, I was invited onsite to speak with 5 engineers (with a break for lunch mid-day). Folowing the interviews, I received a tentative "not officially an offer" congradulatory call at which point we discussed teams that would be a good match for my skill set. Once one was selected, I received a formal offer, which I had 5 business days to accept.

No Question
Jul 28, 2014
---------------
Contact by recruiters a couple days after submitting my application online. The interviewers are very nice and gave me hints when I were stuck. We had a very friendly conversation.

No Question
Jul 28, 2014
---------------
Contact by recruiters a couple days after submitting my application online. The interviewers are very nice and gave me hints when I were stuck. We had a very friendly conversation.

Questions about data structure, algorithm. Also object oriented design   Answer Question

Aug 11, 2014
---------------
45 minute phone interview: program a computational geometry problem, the phone interviewer did not ask anything else at all. onsite: preparation: I prepared for two weeks. I had been asked to brush up on my algorithms. So I basically took, the online versions of Prof: Tim Roughgarden's Algorithms class @ Stanford and parts of Prof. Erik Demain's class on Advanced data structures. @ mit. Also geeksforgeeks.org also helped me. Even if you don't get into google, I would say that taking these classes are very good for your future technical skills. 5 people interviewed me, 45 minutes each. None of the 5 interviewers asked me any algorithm heavy questions. There was no topcoder style questions either. Most of the questions were related to my domain area viz: computer vision and machine learning. Since I had just switched into these areas, I was not an expert and my answers were often patchy. One of the interviewers asked me a question on large scale system design. I am just waiting for the results.

An open ended question on large scale system design, for this you need to be an internet programmer, knowing about issues related to data replication, data availability, large scale scaling etc. I was very patchy on all of these areas.   Answer Question

Sep 29, 2014
---------------
was reached out to by recruiter via linkedin following an internship at another company. I talked with the recruiter for about 15 minutes on an initial phone call, before they scheduled a 45-minute technical interview. I'm currently waiting to hear back from them. According to recruiters, the process is generally 2 45-minute phone screens followed by an on-site, day-long interview at one of google's campuses.

Given a graph as input, write a java method returning boolean true if the graph is bipartitie, else false.   1 Answer

Aug 24, 2014
---------------
Google's actively seeking software engineers so it's not difficult to get an interview, but don't let that trick you into believing the interviewing process is easy. They're looking for engineers that have both good analytical and design skills. Once you're set up with a recruiter, he'll be your point of contact in terms of scheduling interviews. You'll first be given a phone interview and if you pass that, they'll bring you on-site for several 1:1 interviews.

Given a sorted matrix where the number below and right of you will always be bigger, write an algorithm to find if a particular number exist in the matrix. What is the running time of your algorithm.   5 Answers

Apr 17, 2015
---------------
All I can say is. WOW. Absolutely infuriating experience. LLOOONNNGG story short: I interviewed with Google NINE MONTHS ago today. The interview went well, I liked the people there. I was told I'd be getting an offer. For 9 months, on average I'd get a call every 2 weeks saying something to the effect of "we're sorry this is taking so long, you'll hear something no later than Friday". Eventually I got fed up with this and complained about the person telling me this that was consistently breaking his promises. After complaining, I got genuine phone calls of apology and then another "you'll hear from us within 2 weeks." 2 weeks passed. You can gather how the story goes on. I complained again. I felt that 9 months was unreasonable. Fool me once, shame on you. Fool me 20 times, shame on me. After my last complaint, I got a call from the recruiter telling me I'm no longer a candidate at Google. Absolute waste of time on both our parts. In the end no one won, which is what is so baffling to me.

Data structures and algorithms   Answer Question

Mar 25, 2015
---------------
Applied online and contact from a recruiter after a few weeks. Then on-site interview with more than 5 folks. Question given and shared my thought with them. So much pressure because of 1:1 interview.

traditional algorithm questions as well as some system related   1 Answer

Oct 20, 2014
---------------
I used to apply intern at google but get no respond. One day the recruiter found me and ask me to consider their software engineering position. Then he arranges technical interview. I worked on the google doc.I have other things at the previous scheduled date, so the recruiter re-schedule the date for me. It is about 45 min.The question is very easy.

Rotate an m*n image that is stored in an array.   Answer Question

Sep 28, 2014
---------------
Had a initial phone screen which consisted of coding interview session on google doc and one object oriented system design question. Onsite interview consisted of 5 interviews. All consisted of coding questions and design questions. I also had interview with hiring manager later something like host matching phase which happens for internship.

Nothing unexpected. Questions tested programming skills and overall thinking process.   Answer Question

Jul 23, 2014
---------------
Generally are two coding questions and mostly didn't ask the resume. One is about array and another is tree question. The questions are kind of hard and good coding preparition are needed.

The difficulty of questions is expected but is harder than average coding questions I have seen.   Answer Question

Jul 12, 2014
---------------
Going for first technical this Monday! Applied online a long time ago, more then a few months ago but less then a year? maybe. So the first phone call was a basic screening, see if your a candidate for the process, you set a date and your left to study for that, which I am currently doing. Will keep this upto date.

Study, Study, Study. I'm reading Gayle Laakmann McDowell's Cracking the Coding Interview 5th edition to prep.   Answer Question

Jul 8, 2014
---------------
I had three rounds of interview with Google within one mouth. I got the information 1 mouth before the interview, so I found some open judge website to solve some algorithm problem which I might encounter during the interview

We took the interview through Google Hangouts and coded in a Google docs. In the first round of interview, the interviewer asked me: given a set of points in the plane, output all the set of points which are collineation.   3 Answers Given a array of numbers, output the array like this: a1 &lt;= a2 &gt;= a3 &lt;= a4 &gt;= a5...   4 Answers

Jul 15, 2014
---------------
Contacted by the recruiter, interview was scheduled around 3 weeks later. I had 2 back-to-back interviews, each for ~50 mins. I will not disclose the questions because I respect the NDA, but generally the Google interviewers like to start with a question and make it more and more difficult as the interview proceeds. The first interviewer was not as friendly. In fact he was a little intimidating. The question that he asked, I hadn't even heard of it despite the fact that I always over-prepare, and in the first 2 mins I really thought I am gonna screw this up since I had no clue where to start from, but I anyways started and was surprised by my own performance. They are not looking for people who have crammed the code line by line and just write it perfectly. They are looking for people who can think and implement on the fly. The second interviewer was pretty cool and when he asked the question, it was a piece of cake, but I was amazed to see how difficult he made it as the interview proceeded. At a couple of points, he even told me that he just expected a verbal solution since there was not much time left to write the code, but I told him I will write the code instead, which I did. Needless to say, he was very impressed by my enthusiasm all throughout the interview. I was contacted by the recruiter in less than 4 business days that I qualified for the 2nd round, and after 3 weeks I had a host-matching interview with a team. I took the offer. The best tip I ever got - Always review your code before you say 'I am done'. Walk through code, see that you have covered all the edge cases and say you are done when you are done.

None were easy, but won't disclose any because of the NDA.   Answer Question

Jun 6, 2014
---------------
The first interview was a behavior interview. The recruiter asked some question about my resume, such as the projects I have participated in, and my previous work experience. Since the position I apply was software engineer, so she also ask me about my professional skill like which programming language I am most familiar with. This behavior was easy, but unfortunately, there were still 6 months to graduate that time, the recruiter told me they can't wait that long.

Why you quit last job.   Answer Question

Jul 9, 2014
---------------
Timeline: * Reached out to recruiter: day 0 * Call with recruiter: day 2 * In-person interview: day 15 * Calls with managers: days 28 - 32 * Three offer revisions: days 33 - 43 In-Person Interview: A pretty standard affair with 5 45-minute inreviews and a lunch after the first 2. Most of the people seemed genuinly interested in the interview (save 1 person who seemed annoyed at having to do such a menial task) and were a lot of fun to talk to. I can't go into too much detail on the questions themselves (covered by NDA), but it's standard fare and if you know your stuff, you won't have any trouble. How to Prepare: Just brush up on your algorithm design (iterative/recursive algs, big-o, etc). It might be helpful to just read up on some really clever algorithms from your academic days since the thought processes for those can have a lot in common with algorithms you might be asked to design. Culture: The people who interviewed me seemed intelligent and very happy to be working at Google. One surprising factor for me was that every single person answered "what's you favorite part of working at Google?" the same way: "the people".

follow up with this: someone modified your binary search code and the result is bad(modified version may not be binary search any more). create a test case to find out whether the code is binary search without source code on hand.   Answer Question

Jun 21, 2014
---------------
refered by a friend, then quickly got a phone interview one week after. First I described my current work and project and experience on my resume. Then was asked difference btw interface inheritance and implementation inheritance. coding problem is simple: binary search.

One was implementing LRU cache, another is about convert LinkedList to BST.   Answer Question

Sep 14, 2015
---------------
There were only two phone interviews. They went smooth. But after interview, there was a phrase called team match. Team match took me about 1 month to find a team that wanted me.

Find the kth largest element in a sorted array.   2 Answers

May 23, 2015
---------------
I recently interviewed at Amazon. The interview had 5 rounds. 4 technical and 1 hr round. The Technical rounds mainly focussed on algorithms and system design. Most of the questions were take from career cup and jigar's. There was also a lunch interview after 3 rounds.

Low level question, which I wasn't expecting (far from my area of expertise).   Answer Question

Aug 23, 2014
---------------
Was approached by a recruiter, we had an initial phone screen. From there, I had a technical phone interview with a SWE. The questions were pretty straight forward, nothing too difficult. After that, I had four on-site interviews. Two of them went very well, one went pretty well, and I did pretty poorly in the other. I signed an NDA, so I can't go into details, but my suggestion to anyone would be to prepare as much as you can.

I signed an NDA and cannot disclose questions. However in my case, there were no complicated questions. I could choose to code either on a Chromebook or on the whiteboard.   Answer Question

Jun 15, 2014
---------------
A recruiter contacted me, mentioning he is following up with past CodeJam participants. While I am not really intending to change jobs at this point, I decided to take an interview. I talked with him on the phone and he asked simple questions (e.g., experience in developing mobile apps, intention to move to California, etc.). He introduced me another recruiter who is in Seattle. I talked with her on the phone and she scheduled an onsite interview at the Seattle office. I didn't have phone interviews, possibly because I have passed through ones in the past (rejected at onsite), or possibly because I'm currently working in Seattle and they don't need to reimburse for transportation and lodging. I had interviews with 5 engineers (+1 engineer for lunch). Questions were rather simple and with moderate difficulty. While I thought I did well on the questions, the recruiter called me a week after the interview and told me that the hiring committee decided not make an offer. As other people also say, they don't give me any feedback, but the recruiter mentioned it was "close", though I don't know if she actually had detailed information about my interview. What's frustrating and made me feel negative about the process is that they do not give me any feedback. I don't even know if it was because of my performance at the interview or because of my past experience (I'm not a software engineer right now and coding is not my main job responsibility). I explicitly asked this point to the recruiter but she didn't clarify. I'm suspecting it's the latter and if that's the case, this whole process was totally a waste of time, but I never know. Another reason for my negative feeling is that the recruiter left a message on my home phone saying that she needs to follow-up about the interview. The fact I was taking an interview was secret to my family and I've repeatedly asked the recruiter not to call my home phone, but she didn't care about that. This has brought a situation in my family, even bigger than the fact that I was rejected. Recruiters should be more careful about each candidate's privacy, though failed candidates may not be important to them.

How would I implement the autocomplete function on an iPhone or Google search?   Answer Question

May 22, 2014
---------------
Interviewer seemed tired and uninterested in doing the interview. After asking the initial question, he was reluctant to clarify questions or talk through potential approaches. Allowed for awkward silences and didn't try to make the process more comfortable. As this was my first interview, it was very jarring and difficult to concentrate.

No Question
May 29, 2014
---------------
Two Phone Interviews, mostly about data structures and Algorithms. 1St interview they asked string manipulation questions and a Puzzle. In 2nd Interview they asked about Tri-Tree implementation. They asked me to implement tri-tree in a google document. Implementation in a google document was a bit confusing and tricky.

No. of paths between two points in a grid   2 Answers

May 21, 2014
---------------
A recruiter contacted me on linked in and set me up with a phone interview. The phone interview was conducted through a text editor similar to notepad. The interview was conducted by an engineer. He couldn't tell me anything about what openings existed or what positions they were looking to fill or even if the job would bin in California or Washington.

You and opponent alternate picking gold pots out of line. You can pick either from the left or the right. All amounts of gold in all pots are know. Write an algorithm to pick the most gold. Assume you opponent is using the same algorithm.   1 Answer

Jul 23, 2014
---------------
Recruiter contacted me via email or linkedin, can't remember exactly. Asking if I would be interested in Google. I have a long resume and somewhat specialized set of skills in embedded systems so I said ok I will give it a go, but that I am not quite sure how my skills would be useful at Google. They waived the phone screen and moved me directly to an onsite interview. They send you a list of things to go over to prepare for the interview that looks like something out of college computer science course. I was really busy at my current job so I had little time to go over it, but it was fun revisiting the basic algorithms and data structures. Onsite was 3x45 miutes 1on1 interviews, lunch and 2 more 45 mins sessions. All back to back, no breaks other than lunch. 1st session: Interviewer introduced himself gave me time to introduce myself for the 1st 10 mins. Then asked 2 questions. 1st was arrays didnt require to writ code, 2nd was dynamic programming asked to wrote code. I did well on both so we had 10 more mins to spare where I asked him questions. 2nd session: Introduction took a really long time, interviewer talked at great length about himself and his work. Asked me if I am interviewing for real or just there to get some interview experience, because apparently thats what he did initially himself. When we got to the question there was only about 15 mins left. Tree related question, that in my opinion wasn't really presented very well. Code was required. I started solving it but he was basically walking me through every step. Not sure if he just wanted to pass me or realized that he already spent too much time talking. Got the correct solution, but I felt like I was being lead to it. 3rd session: Embedded systems engineer, asked me a lot about my actual resume. In the end asked me a pretty basic question embedded system specific, asked to write code. Was really easy for me, did really well. Probably the most enjoyable session. Lunch: The weirdest part of the day. Interviewer only got notified the night before, didnt look like wanted to be there. Didn't even know where the closest cafeteria was. Ended up walking for about 15 mins around the campus. Dropped the tray when getting food and spilled lunch over clothes, got really upset. Then suggested we sit outside because its quieter there. But the day was hot and it was really uncomfortable, I was glad to get back inside. 4th session: Usual introductions. General distributed systems question. Went pretty well in my opinion, but then I am not a distributed systems specialist, so cant really judge. 5th session: The worst one ofthe day. Usual introductions. 2 Questions. 1st question supposed to be a warmup, really simple bit manipulation, but for some reason my brain just went into a feeze, not sure if it was the stress or the sun from the lunch. Anyway I worked manually through some samples and did come up with an algorithm and a correct solution. In fact the interviewer corrected something in my solution, but when I started running it through a test case it turned out my initial code was in fact correct, so we reverted it. Because 1st question took so much time, we only had about 10 mins for the 2nd one which was supposed to be the main question. So we didn't really finish it. Recruiter called me a week later saying that they decided not to go forward with my candidacy at this time. I am not really too bothered since I am pretty happy at my current job and this was more of a learning experience, but I admit that if they did make me a good offer, I would've seriously considered it. While driving home I did come up with a really good solution to that unfinished question from the 5th session. And then also found every single question that I got asked in my interview on programming websites. So looks like if I wasn't so busy and just spent more time preparing, the interview would've gone much smoother. I thought just experience would be enough to pull me through. Other than the lunch person and the 2nd session interviewer, everybody else was very pleasant and enjoyable to talk to.

All were unexpected. I didnt prepare for any, but was able to work through most of them. None really difficult under normal circumstances.   Answer Question

May 17, 2014
---------------
I was not looking to switch jobs, but I was contacted out of the blue by a recruiter on LinkedIn. I was happy with my job that I held with the same company since college graduation (10 years). However, I decided to give Google a shot. If anything it would probably teach me something about myself. The recruiter set up a phone interview for roughly 1 month later. I apparently did well as the recruiter contacted me about 2 hours after the interview to say I passed. I was forwarded off to a recruiter in Mountain View that set up an on-site interview for about 1.5 months later. I'm sure the time frames here could have been quicker, but for each step I wanted time to study. During the on-site interview, I met with 5 different engineers (4 where feedback was taken and 1 lunch interview). Each interview lasted between 45 minutes and 1 hour. I interviewed with members from 2 specific teams, the potential ones I would be joining if offered a position. Despite the fact the lunch interview was not supposed to count, I was told that the lunch interviewer was instrumental in getting me hired. It took quite a long time after the on-site interview until I received an offer. It took 2 weeks to collect interview feedback and 1 week to get the go-ahead to put me through the hiring committee. It took 2 weeks to go through the hiring committee and an additional week to go through the executive committee. At that point I had an offer, but it took another day or two to negotiate the details. I initially wanted to decline the offer since I was leery of moving my family, but the recruiter gave me the weekend to think about it. I verbally accepted after the weekend. It took another two days to choose a relocation package and 1 more day to receive a formal offer letter which I electronically signed. I hope I made the right choice! I am worried that I took a step or two down in responsibility, but the compensation was a little bit better than what I was making even cost-of-living adjusted. If anything I'll have an interesting experience to talk about and Google on my resume.

However, I received 2 different dynamic programming problems which I didn't expect and I found to be quite difficult. 3 of the interviewers had me do whiteboard work but only 1 of them actually had me do any coding, which was a basic singly linked list type problem.   Answer Question

May 11, 2014
---------------
I was contacted by a recruiter on LinkedIn to ascertain my interest in the company. They set me up with a 45 minute technical screening interview on the phone where I was asked to write code to solve a simple problem in a Google Doc form. After this, another recruiter at Google contacted me with a specific job/team that I would interview with. I flew down to Mountain View where 5 different interviewers asked me coding questions to solve on a whiteboard, similar to the phone interview. After this, Google verified all my references, who were each asked to fill out a very detailed questionnaire. Everyone I dealt with was very pleasant and professional.

I was surprised that the questions were not very difficult. Anyone with a decent grasp of very fundamental CS concepts should be able to do well in this interview. None of the questions needed any clever tricks or "aha" insights, just straightforward application of fundamental computer science.   2 Answers

Oct 13, 2014
---------------
I applied through Google's online web form, and was very surprised to be contacted by a Google recruiter a couple of weeks later -- I had no contacts at the company, and applying via web forms usually doesn't work. After some short communications with the recruiter, I scheduled an on-site interview in New York City. The best part of the Google interview process is that they tell you exactly what to expect. The recruiter sent me a list of topics and suggested study materials, and the interviews didn't have any questions that weren't covered in that list of topics. I spent about three weeks studying for the interview, and didn't have any surprises when I finally got there. Google is very good about arranging transportation for the interviews. They covered all costs for me to fly to NYC and spend one night before my interview. Google paid for airfare and hotel directly, and reimbursement for meals and public transit was quick and easy. After the in-person interviews, there were two stages of hiring committees. (I heard about this from my recruiter, but didn't have any contact with the committees beyond my on-site interviews.) During this time, I had phone interviews with several team leaders, trying to figure out where I would best fit. Part of this process was for the Google managers to decide if they wanted me, but it was at least as much for my benefit -- after several of these phone interviews, I picked the team which seemed to be the best fit for me. Everyone was very friendly, and the entire interview process was smooth and enjoyable.

There were no difficult or unexpected questions.   Answer Question

Apr 6, 2015
---------------
My Interview process was composed of an initial phone interview, 5 or 6 face-to-face interviews (for which I was flown to the Pittsburgh office) and a couple of extra phone interviews. These last two by phone were due to a confusion on their side: they needed to assert my knowledge of Java but all interview responses ended up being done in Python. It took about 2.5 months from application to final offer. Questions are all technical and not easy. The interviewer is there to help you and you need to talk to him even to fully understand the question being asked. Talk through your logic process, he needs to understand it and can better assist you in case you are going the wrong route. Unless you are really smart and very knowledgeable of CS (algorithms, data structures, analysis etc), you need to study, train and prepare. Online courses, interview preparation books and Wikipedia are very good reference material. They ask for previous colleagues/managers for referrals and do call them.

Just in the final interview, the interviewer give me a question that he made 2 days ago. He said there is no best answer, but I told him that the question could be solved by BFS.   Answer Question

May 4, 2014
---------------
4 interviews on one day in Pittsburgh. Nothing difficult, and interviewer said that small bugs are accepted. The questions involve typical strings, BFS and coding skill (to solve a problem, no algorithm involved.).

Given: class EventCounter { public: void Increment() {} int GetEventsLastSecond() {} int GetEventsLast24Hours() {} }; Fill in the functions, where Increment is called on every event.   1 Answer I was asked how to implement a memory allocated, used for allocating thousands of objects of a single type.   1 Answer What are the key features that help make a successful project/product/etc?   1 Answer (This was actually the first question) Explain the difference between a process & a thread.   1 Answer

May 30, 2014
---------------
Recruiter contacted me via my GitHub profile. We had a phone screening, then scheduled a technical phone interview with an engineer one and a half weeks later. I studied a lot of material in that time.

The java language questions   Answer Question

Jul 30, 2014
---------------
1. HR Recruiter: standard chat 2. Technical Recruiter: scheduled the interview 3. On site Interview - 5 rounds of technical interviews - system design questions - recursive questions - some java language questions Three out of five engineers doing the interviews were not very friendly. One was very abrupt. One behaved like a police officer who pulled me over. One was late and kept interrupt me while I was writing code

No Question
Aug 5, 2015
---------------
Very extensive interview process. Several technical interviewers too turns asking very difficult math and logic questions. Applicant is expected to solve the problems on the whiteboard while the interviewer watches and asks questions.

Estimation question: Google employment has doubled each year for the last x years.. given the current employment, how many years before Google employs the entire world population of y.   1 Answer

Jul 15, 2014
---------------
Was contacted by a recruiter before graduation. Had a phone interview which went well and was then brought on site. I regret that this was my first on-site interview, and I wasn't as prepared as I needed to be. The technical questions were very hard - harder than the other companies I've subsequently interviewed at - and I wasn't able to give satisfactory answers to several.

The technical questions   Answer Question

Jul 14, 2014
---------------
I was contacted by a recruiter, waited several weeks, passed a technical phone screen, waited several weeks, had an on-site interview with 5 technical sessions and an informal lunch in the cafeteria. After another week I was called with my results. Interviews ranged from a thought provoking discussion of "What features and issues would you watch for if you implemented [a given mobile app]?" to processing streams of ints and traversing tree structures efficiently.

Describe how you would design a fully automated continuous build/test/configure/deploy system for arbitrary applications and software packages. Feel free to dive into any piece of this problem that is of interest to you.   Answer Question

Oct 16, 2015
---------------
We went through 3 phone screens over two weeks – the emphasis was on being a problem solver, not necessarily that you have all the computer science textbooks memorized. If you asked questions about the problem space, they were helpful. Think out loud! They'll find out you're smart, which you assuredly are if you got to the point you're getting an interview at this wonderful shop

What's the fastest way to calculate a cube root?   Answer Question

Jun 4, 2014
---------------
Just like eveybody else. 2 phone screens and 4 onsite. You need to write codes using Google doc during the phone screens and the difficulty of the questions are the same as onsite. So you can really feel how the questions will be. For the onsite, Google did pay my hotel for one night and breakfast + lunch. Onsites are 1-1 and you need to write codes on the white board. They didn't ask me much about myself though. Most the time is just writing codes.

The questions are not as difficult as I think though. Compare to the book "Cracking the code interview", I can say the questions in Google is 50% as hard as the questions in the books.   Answer Question

May 27, 2014
---------------
I applied and was contacted by a recruiter within 2 days. I was given a long checklist of things to review and told I would be given a phone interview in about 10 days. I prepared quite a bit, but there's only so much you can do. You have to be a little lucky with who you get and hope you both find the same topics important. That said, I've been told the interview process at Google is a bit silly and I have to agree. It did not feel very kind, at least. My interviewer started with "Hi I'm an Engineer at Google and you have an interview schedule for this time. Is this still a good time? Okay good. Let's start with the following question: ". Very little small talk, straight into a coding question. Okay, no prob. Except I could hear him typing away on his keyboard the whole time. There was basically zero commentary while I was coding, and nothing to say about my "thinking out loud". I completed the question, perhaps it took a bit longer than it should have, but it's an interview....nerves are gonna play a part. Anyway, I was definitely being scored on a timer. There is little doubt about that in my mind. If I wasn't given a timed score, then I lost points for there not being enough time to get around to other questions. He did go through it line by line, and I fixed all the little mistakes (which of course never would have happened in an IDE) and wound up with some decent code. It wasn't the best thing in the world, but it was fast and it worked. After the weekend I was told they would be going with some more experienced candidates. So again, little doubt in my mind that my score was somehow lessened due to the amount of time I took on the problem. I didn't sit and do nothing, I just wrote out code, then replaced it with something cleaner or better. Moved some sloppy stuff into a new function, etc.

Google asks that we do not share their questions, so I won't share the entire thing. I will however say that it was a common question (Think along the lines of reverse a string, calculate fib sequence, etc) with a little twist thrown in which should just cause you to hesitate and think a bit, even if you've seen the core of this problem before. It was by all means a fair question.   Answer Question

May 27, 2014
---------------
Process took a bit longer than other companies, so start early. The questions are quite easy in my mind and I think I did OK. However I am rejected after the phone screen and I am not sure why. The recruiter would not share feedback either. I wish the process is a bit more transparent.

No real difficult questions   1 Answer

May 31, 2014
---------------
The interview process seems simple enough. A recruiter found me on LinkedIn, and I was asked to do a quick screen with him the following week. I was basically asked about my software engineering experience and current job as well as projects I have done in the past. I was given some material to prepare for the technical phone screen. It was very in depth, and none of it really came into play on the phone screen. I felt like the phone screen had gone well, but the recruiter got back to me the next day to tell me it was a no go. I appreciated him following up so quickly because I had recently been presented with the opportunity for other positions, which I made him aware of.

Describe memory fragmentation and how it relates to the garbage collector.   Answer Question

Jun 11, 2014
---------------
The process was pretty straight-forward. A recruiter got in touch with me and scheduled an HR round. This was followed by a technical phone screen. I was then invited on-site (Cambridge, MA) for a full day of interviews. The whole process took a little more than 10 weeks. I personally thought the on-site interviews went very well. Did everything recommended by the Google recruiting teams. But in the end (after a painful wait of more than two weeks!) I was told that they've decided not to make an offer. I wasn't given feedback on what went wrong, even though the decision-making process took forever. I was told "it is Google's policy" not to elaborate on the reasons behind the decision!!!

I would not say any of the questions were particularly difficult, but they were a bit tricky. Make sure you test your code for boundary conditions and with different inputs. And always, THINK OUT LOUD!   Answer Question

May 8, 2014
---------------
Things move quickly around here. At Internet speed. That means we have to be nimble, both in how we work and how we hire. We look for people who are great at lots of things, love big challenges and welcome big changes. We can’t have too many specialists in just one particular area. We’re looking for people who are good for Google—and not just for right now, but for the long term.

Algorithms   Answer Question

Apr 11, 2014
---------------
First, a person will contact you to arrange time for the interview. For internship, I have two 1-hour phone interviews in the same day. It'd better to have at least 2 weeks to prepare after you get the contact from Google. Also the phone signal might be bad so be prepared to have alternative way to contact. The first question is about bitwise operation. Study from Cracking the Interviews might help.

Design a class where you can add elements, and return the mean of the latest N elements.   3 Answers

Apr 16, 2014
---------------
Interview process was very expedited. I was in touch with the recruiter for a few months before I interviewed. Within a couple of weeks of expressing my interest in the job, I interviewed onsite. The overall experience was positive and I enjoyed solving the interview problems. And yeah, the offices were amazing.

Code was done in Python on a Google Docs document. First weeder question was implementing binary search. Next question was about text processing and after the initial solution was given, additional constraints were added to encourage me to make a better solution.   1 Answer

Apr 10, 2014
---------------
Had initial contact from a recruiter over email, had a short 20 minute phone conversation where recruiter asked about my professional background and asked me to rate myself in a few technical areas, then asked some trivia questions. We scheduled a phone interview a few weeks later. Interview took about 45 minutes with 10 minutes at the end to clean up code and then ask questions to the interviewer. Interview was a success, scheduled a second phone interview in another couple weeks.

Merge sorted and with different inputs. And always, THINK OUT LOUD!   Answer Question

May 8, 2014
---------------
Things move quickly around here. At Internet speed. That means we have to be nimble, both in how we work and how we hire. We look for people who are great at lots of things, love big challenges and welcome big changes. We can’t have too many specialists in just one particular area. We’re looking for people who are good for Google—and not just for right now, but for the long term.

Algorithms   Answer Question

Apr 11, 2014
---------------
First, a person will contact you to arrange time for the interview. For internship, I have two 1-hour phone interviews in the same day. It'd better to have at least 2 weeks to prepare after you get the contact from Google. Also the phone signal might be bad so be prepared to have alternative way to contact. The first question is about bitwise operation. Study from Cracking the Interviews might help.

Design a class where you can add elements, and return the mean of the latest N elements.   3 Answers

Apr 16, 2014
---------------
Interview process was very expedited. I was in touch with the recruiter for a few months before I interviewed. Within a couple of weeks of expressing my interest in the job, I interviewed onsite. The overall experience was positive and I enjoyed solving the interview problems. And yeah, the offices were amazing.

No Question
Apr 10, 2014
---------------
Had initial contact from a recruiter over email, had a short 20 minute phone conversation where recruiter asked about my professional background and asked me to rate myself in a few technical areas, then asked some trivia questions. We scheduled a phone interview a few weeks later. Interview took about 45 minutes with 10 minutes at the end to clean up code and then ask questions to the interviewer. Interview was a success, scheduled a second phone interview in another couple weeks.

Code was done in Python on a Google Docs document. First weeder question was implementing binary search. Next question was about text processing and after the initial solution was given, additional constraints were added to encourage me to make a better solution.   1 Answer

Apr 2, 2014
---------------
Got an phone interview from Google. The interviewer was very good, and the question was not that hard. However, I took too many time to figure out the first question, and not remaining much time for the 2nd question. The interview takes 45 minutes. For each interviewee, it should take 20~25 minutes to tackle the problem and during the process, discuss with the interviewer.

Merge sorted, non-overlapping list of intervals with another interval [(1,3), (5,10), (12,30)] + (9,31) = [(1,3), (5,31)]   2 Answers Implement a system so that the billionth search query at Google each day wins a car.   Answer Question

Jun 17, 2014
---------------
My resume was referred by a current employee. I got a call from a recruiter a couple weeks later and had a 10 minute conversation with her about the whole process, bit on my background, and what I'm looking for. She sent me an email with all of the content that is considered fair game for an interview. I asked for a month to study before the phone interview. The phone interview was 45 minutes, with maybe 35 of it being technical questions and coding in a Google Doc. The recruiter called me later that day saying they wanted to bring me in for on-site interviews. I asked for them to be scheduled as soon as possible (already been studying, didn't want to forget anything). The on-site interviews were scheduled for almost 3 weeks later. My round of interviews on-site wasn't as smooth as the recruiter claims they usually are. I was taken to a small conference that was to be my "home" for the day and the recruiter wrote the schedule of who and when on the white board. The first guy that showed up was not the one listed. Second guy was 15 minutes late. Last guy of the day turned out to be working at home and they had to substitute on the fly (15 minute delay again). Not really a big deal, but I think worth noting. The interviews themselves were 45 minutes each, again about 35 - 40 minutes of which were technical questions and coding on the white board. All questions fell within the review content suggested by the email. One interview was more of a design/approach interview and np-complete did come up once. In general the questions were designed to be challenging, but solvable in the time-frame. To study, I read Wikipedia pages and took notes for the topics mentioned in the email. I used a couple other materials for design and integration patterns. This worked as sufficient review for me. My final comment is regarding how I think they determine level. I was out of undergrad for four years when I interviewed. My experience in the field is longer than that. The recruiter said for their purposes my level was "four years", which I think worked in my favor because they expected less.

The design/approach interview was the hardest simply because it's far more open ended.   1 Answer

Apr 9, 2014
---------------
I submitted my CV online and and was contacted by a recruiter. After communicating with the recruiter a technical phone interview was scheduled with a coding session via a shared Google doc. Following the phone interview a follow second technical phone interview was scheduled. Google decided not to proceed after the second interview.

The coding questions weren't particularly difficult, however they were very open ended. This means discussing your thoughts out loud as you progress through the question is the most important factor.   Answer Question

May 20, 2014
---------------
One in person interviewer openly told me that he hates his job and that he would not recommend anyone work at Google...when he first walked into the room! He didn't even say hello, it was just the first thing he said! Overall after speaking with 6+ people only 2 introduced themselves or told me what teams they work on. My phone interviewer called 1.5 hours early and apologized for being 30 minutes late. He told me either get to a computer or the interview is off. He never introduced himself, he hung up during the call for 10 minutes while I coded and called back after I was done. He looked at my answer, asked a few questions for 10 minutes, and then just hung up without a goodbye- I never even got his name! Apparently he was happy with my answer though because I got a call back from a recruiter only 20 minutes later. My onsite timing was very poor. My first interviewer went on for over 1.5 hours The next interviewer was upset that he had to wait outside for over 45 minutes and not only didn't introduce himself, but was also happy to take his frustration out during the interview. He took his interview over in time, leaving me only 15 minutes until the cafeterias closed for lunch. Therefore we went to a smaller cafeteria which had nothing to drink but water. This would have been fine except after rushing through a meal and desperately needing caffeine (and bathroom) I was not in great shape for the next interview. The first 15 minutes were fine as I wrote 6 different tree algorithms for pre, post, and in order traversals in both iterative and recursive forms. The interviewer then asked me if I likes sudoku to which I replied that I didn't actually know the rules of how it worked. At that point he immediately ended the interview saying he wouldn't have time to explain it before asking his interview question. I was surprised that he didn't want to explain his interview question, but more surprised that he didn't have a backup question either. Since we were over an hour over schedule anyway the next person was already at the door and this is likely why he ended after only 15 minutes. I never got his name, team, or had an opportunity to ask a single question- which was also true for the next interviewer. He asked me a classical question that is common in universities. I already knew some of the possible answers and was upfront with him about this. He responded by taking the white board markers and saying he would like to discuss possible answers instead of coding them. After an hour of good discussion we had not written any code at all and he ended his interview. I assume that for the committee this probably did not reflect well since they like to see code. My system design question was interesting and went on for over 3 hours. The interviewer asked me "As a team lead- what do you do when an [expletive] pm is trying to make your team death march, saying he will just replace employees as they burn out." Having been through similar situations at Microsoft I was very good about handling this sort of thing in a way that is beneficial for all parties involved. I have to say that I was (and am still) surprised by the question though! By the end of my last interview the recruiter had left so I didn't say good bye to anyone. I was just escorted out.

NDA prohibits me from sharing these, but of the 10 or so questions I was asked 6 of them were graphing algorithm related, and 2 of them were discrete math related.   Answer Question

May 20, 2014
---------------
I was applied for the software engineer for new grad. The HR is very nice. I got one phone interview. He asked about writing a code for write a fractional number a/b to decimal c.def(gh...i). I have explained the algorithm and write down the code on google doc.

no difficult questions   Answer Question

May 15, 2014
---------------
I applied online. Then recruiters contacted me for a telephone interview. There were three recruiters in total. They were all very nice. The interviewer called me on time at 11: 00 am. He asked whether I had any question. I said not really. Then he wrote the question on Google doc.

Tree construction, I was asked many other questions during my process writing code for this question.   Answer Question

May 2, 2014
---------------
I got a mail from Google after a friend of mine referred my CV. after scheduling a phone interview I got a call from a HR recruiter. the interview was very personal, with no professional questions. I was asked to describe my work experience in more detail. what kind of projects was I involve with and what kind of technologies do I know. I was asked why do I want to work for Google, and am I open to new technologies.

I was asked to give 3 top products of the company that I love. why do I love them and how I would improve them.   Answer Question

Mar 19, 2014
---------------
I was first contacted by a recruiter. He emailed me out of the blue, and said he really liked my github profile. Honestly, at first, I didn't believe it was real. We emailed back and forth a few times, but I wasn't really looking to moving to the Bay Area, so I never actually sent in my CV. About a month goes by, and he emails me back. He just wanted to follow up. Said that he never received the resume, and hoped I would get back in touch. So I told him about my situation, and he mentioned that they had an LA office. This was news to me, and much closer to home. So I sent in my resume, and he connected me to a recruiter who was closer to me. All in all, I talked with about 4 different people in recruiting. All of them were incredibly nice and helpful. My first "interview" was with the second recruiter. It was really just getting to know me, what my interests were, and trying to get a feel for my fit with the company. After that interview, we scheduled a technical phone interview. Gave me to weeks to study up. Lots of review material was sent my way, which was awesome. Ended up reading my algorithms text book again, it was quite a nice read, but I don't believe I would have done poorly on the phone interview, even had I not read it. The tips/references they sent to me were extremely helpful. They sent me Titles/Authors of some amazing books, I recommend reading them even if you aren't interviewing with Google. After passing the phone interview, we had an on-site scheduled about a week later. This was much harder than the phone interview. I get the idea that the phone was just to weed out the weaker candidates. The on-site consisted of 5 one-on-one interviews, plus one lunch "interview" where I was able to ask all of my questions. All of them were about 45 minutes each. Every interviewer I talked to was very interesting, and we always had something in common to talk about. The questions were all very interesting problems. There was one point in one of the questions where one of the interviewers put a star next to a line I wrote to remind him to go back and follow up on a comment I made that sounded interesting. I enjoyed the interviews, because it felt like I was back in college, talking to my peers about fascinating problems. There were one or two interviews that I feel I didn't do so hot on. I only managed to get through one of the questions on two of the interviews. However, I figured they really just wanted to see how I approached the problems, so I made sure to explain myself very thoroughly.

I can't go into details about the problems. But I wish I had studied my graph algorithms a little more closely. Make sure you know your big-O algorithm classifications. Almost every interviewer asked me something to do with that.   2 Answers

Aug 13, 2014
---------------
Each of the questions were designed such that you will never get the perfect answer, especially on the first try. The problems were specifically made to stump you, and so you can continuously improve your design and show that you're curious to learn and improve.

They asked about servers and how networks functioned and I have no background with that topic.   Answer Question

Mar 19, 2014
---------------
I was first contacted by a recruiter. He emailed me out of the blue, and said he really liked my github profile. Honestly, at first, I didn't believe it was real. We emailed back and forth a few times, but I wasn't really looking to moving to the Bay Area, so I never actually sent in my CV. About a month goes by, and he emails me back. He just wanted to follow up. Said that he never received the resume, and hoped I would get back in touch. So I told him about my situation, and he mentioned that they had an LA office. This was news to me, and much closer to home. So I sent in my resume, and he connected me to a recruiter who was closer to me. All in all, I talked with about 4 different people in recruiting. All of them were incredibly nice and helpful. My first "interview" was with the second recruiter. It was really just getting to know me, what my interests were, and trying to get a feel for my fit with the company. After that interview, we scheduled a technical phone interview. Gave me to weeks to study up. Lots of review material was sent my way, which was awesome. Ended up reading my algorithms text book again, it was quite a nice read, but I don't believe I would have done poorly on the phone interview, even had I not read it. The tips/references they sent to me were extremely helpful. They sent me Titles/Authors of some amazing books, I recommend reading them even if you aren't interviewing with Google. After passing the phone interview, we had an on-site scheduled about a week later. This was much harder than the phone interview. I get the idea that the phone was just to weed out the weaker candidates. The on-site consisted of 5 one-on-one interviews, plus one lunch "interview" where I was able to ask all of my questions. All of them were about 45 minutes each. Every interviewer I talked to was very interesting, and we always had something in common to talk about. The questions were all very interesting problems. There was one point in one of the questions where one of the interviewers put a star next to a line I wrote to remind him to go back and follow up on a comment I made that sounded interesting. I enjoyed the interviews, because it felt like I was back in college, talking to my peers about fascinating problems. There were one or two interviews that I feel I didn't do so hot on. I only managed to get through one of the questions on two of the interviews. However, I figured they really just wanted to see how I approached the problems, so I made sure to explain myself very thoroughly.

I can't go into details about the problems. But I wish I had studied my graph algorithms a little more closely. Make sure you know your big-O algorithm classifications. Almost every interviewer asked me something to do with that.   2 Answers

Aug 13, 2014
---------------
Each of the questions were designed such that you will never get the perfect answer, especially on the first try. The problems were specifically made to stump you, and so you can continuously improve your design and show that you're curious to learn and improve.

They asked about servers and how networks functioned and I have no background with that topic.   Answer Question

Apr 10, 2014
---------------
4 45min interviews done in one day, most of which was technical. One interview was dedicated to non technical stuff but all others were pretty much 95% technical.

Asking about performance complexity of items.   Answer Question

May 2, 2014
---------------
Algorithm and design a ranking system

Design a ping-pong ranking system   5 Answers

May 4, 2014
---------------
It took more than a month for the HR manager to arrange me an interview. An engineer called and asked questions regarding to only memory processing, not much algorithmic.

In c++ what happens if an int value overflow?   Answer Question

Oct 11, 2014
---------------
Contacted by a recruiter - my former colleague referred me. I wasn't asked to do a phone screen because my another former colleague joined in Google and recommended me. The HR is quite responsive to onsite interview scheduling and answering my questions thoroughly. There were 5 interviews, one of which had two interviewers together. Those guys all seemed to be quite nice except one kept typing instead of interacting with me.

NDA   Answer Question

Feb 16, 2014
---------------
Read my negotiation phase summary down below. That is the reason I wrote this. Two phone screens. Technical programming challenges. On-site 5 hour interview. Goes well. My best advice here is to buy a whiteboard Meet with teams to see if there is a fit. This happens only after you convince the recruiter you will come to Google. They do NOT want you wasting team member's time.

Prove that this algorithm does the right thing.   1 Answer

Apr 25, 2015
---------------
I was contacted by a recruiter through my linkedin profile. The recruiter had a particular team in mind for me. It turned out I knew some people who already worked there, who highly recommended me, so I was able to bypass a phone screen. I was told I would have to do all of my interviews in either C, C++, or Java. I didn't know any of these languages particularly well (my professional experience has been more in dynamic scripting languages), so I told the recruiter I would need some time to review Java. I managed to drag it out for a number of weeks, but ultimately did not come in adequately prepared for Java coding exercises. The interview consisted of four or five back to back one hour one-on-one sessions with engineers asking challenging algorithm questions. One session seemed more focused on system design. One thing that was very challenging about this interview was its sustained level of intensity over a long period of time. By the time I hit hour 3 or so, I was mentally drained. The other was that I was trying to use a language I didn't know well. In addition, the algorithm questions are obviously just designed to be challenging, and your time is very limited. I did come away feeling like Google would be a great place to be an engineer. The interviewers seemed to want me to succeed for the most part.

Write some code to parse a particular grammar. The grammar was ambiguous, so you would have to be able to discuss how your code impacted the way that statements in the language would be interpreted.   Answer Question

Sep 28, 2015
---------------
I applied online through the google career web site and I was later contacted by a recruiter 1st round phone interview basic data structure and background 2nd round on site fly to hq and do some backboard coding 3rd round onsite backboard coding algorithm and data structure Then I wait about a week and got the offer

Invert binary search tree   Answer Question

Jun 21, 2014
---------------
Extremely competent, friendly and respectful human resources. We get personalized emails, they reply to their emails and calls. The vast majority of employees I met were extremely friendly.

All questions are challenging. Best to prepare well by reviewing the material they send us before the interview. Ideally review the Algorithms courses given at Coursera..   Answer Question

Sep 8, 2015
---------------
The interview process was very pleasant. The recruiter first contacted me when I was in the middle of exams and they gave me plenty of time to finish up my school obligations and prepare for the interview. Questions were intriguing and interesting to play with and every person (both interviewers and recruiters) I engaged with was very friendly.

Sort words with the same root based on their Caesar cypher rotation value.   Answer Question

Jul 8, 2015
---------------
I was referred by a friend and applied online. I had one 45-minute phone interview and then they flew me up for 4 in-person interviews in a row. The screener helped me through the question for the phone interview, and I ended up getting it. I thought I did well on the 4 in-person interviews, but I didn't end up getting the job. They told me that if I wanted to re-apply in 8-12 months I could skip forward to final round and they would fly me up again.

If you had a magazine full of letters to cut out, how could you test if you had the right amount of letters to say a message you wished to convey?   1 Answer

Jul 14, 2015
---------------
1. HR will tell you the benefit to work for google and let you pick the most interesting work location. 2.Interviewer let me introduce my self and then go to algorithm question.

Find out all special character in a string and replace it with another character   Answer Question

Jun 25, 2014
---------------
Applied online. New grad. Had a phone interview about a week later for LA Google. The interviewer is very nice. It is a 45 minutes phone call. First of all, the interviewer introduced himself and his team a little bit and so did I. Then some basic technique questions such as TCP vs UDP, stack vs queue. At last, a programming question. Nice experience. I think I failed because of bad English and not very well prepared.

Nothing unexpected   Answer Question

Feb 15, 2014
---------------
Applied for Google Software Engineer position online. Recruiter contacted me within a week to set-up a phone interview. The phone screen was scheduled within week. The interviewer asked about various data structures and general computer science concepts. Asked me several questions about queues, and heaps. After that two programming questions: 1) traverse array in a spiral order. 2) check if directed graph contains a cycle. in 2 weeks I was contacted to set up on-site interview. I asked to schedule interview 3 weeks later, so I could prepare for it. There were 4 technical interviews onsite, one lunch interview (just informal talk with some guy from Google glass department), and lastly PhD dissertation discussion. First question was in-order traversal of BST. I wrote the code. Then asked me two check if two different BSTs have same inorder traversal. I suggested to store first inorder traversal into vector, and while traversing second BST check if the element values match. I also started suggesting using linked list, or modified recursive approach, but he said to make life easy and go with the simple solution. Second interviewer gave me array, with elements first strictly increasing, then strictly decreasing. Asked me to find the largest number. I suggested to use binary search. O(logN) time complexity, with no additional space required. After implementing the code he asked another question. Given infinite doubly linked list, and separate list of elements, which are linked to some linked list elements. Find out from the list of elements how many neighboring groups are formed. I suggested to use Hashtable, to make look-up process quick, and traverse the elements and check if they are neighboring elements. O(N) time and space complexity. Implemented the code, and time ran out to test if with different cases. Third interview was the weirdest. The guy had thick accent and from the beginning became apparent communication was an issue. He gave me system design question: Observer class has three methods AddObserver(), RemoveObserver(), NotifyAllObservers(). After asking some clarification questions, I suggested to use doubly linked list to keep track of all observers, and hash table to look-up the individual observer. Then he asked to implement three methods. After implementing the code in JAVA he told me the program would not work. Apparently the Observer was designed for Chrome browser. He went into details when user clicks on mouse and then key-press is released. I responded the initial question was very vague and asked for more clarification and precise requirements. I suggested what I would change to go around the problem, but time ran out and didn't get a chance to modify the code on whiteboard. After that I had lunch and came back for fourth technical interview. Fourth interview: the guy told me to add two numbers in base 3 system. The input: two base 3 streams provided as String. function should return sum of the two numbers also in String format as base 3 stream. I suggested to convert from base 3 into base 10, add numbers and convert back to base 3. I know how to add two (base 2) binary streams without conversion, since I was under the time pressure I went easy way. I implemented conversion from base 3 to base 10. The interviewer said he was satisfied and wanted me to solve another problem. He gave me file size, and asked me to partition file into chunks, so that each chunk size is power of two, and the number of chunks is minimal. I suggested to find the nearest power of two and obtain absolute value of difference between the original file size, and nearest power of two. Then re-apply the process until reminder is power of two (1 is 2^0). There was time pressure, so didn't have time for analysis, just implemented and turned in the code. Last interview was PhD dissertation discussion. It went alright. Most interviews went ok, except the 3rd one, during which I had hard time communicating. Within a week recruiter emailed me saying hiring committee didn't want to move forward with hiring.

I didn't feel any of the questions were difficult, I haven't been stuck at any point, but apparently that wasn't enough. I also had chance to look up online the most optimal answers to the questions I was asked. To be honest there is very little I would have changed in my responses.   Answer Question

Mar 26, 2014
---------------
My technical screening algorithm problem was challenging enough. I enjoyed that time on solving the problem. At first i had solution with much time complexity and finally I got the best approach to solve the problem. Interviewer told me that wast the best solution they are looking for. But I was stuck on the coding part at last moment so I was not selected to go even further. I always thought like how you come up to solve the problems matter rather than the exact code, but that is not true with google. They need perfect code in very short 30 min time. I guess they always missed very innovative and a different kind of software engineer by judging like this way.

String manipulation question and unit test quetstion   Answer Question

Mar 23, 2014
---------------
The recruiter contacted me via LinkedIn and was very friendly and nice. I was then contacted by a software developer by phone and was asked two rather simple questions. I approached the questions too much like an undergraduate student and they decided to not go any further with me. The major aspect of the interview was concerned with end cases and rare cases that could happen. I was also asked to design a series of unit tests for a certain method. I did not have to do any coding, just explain what I would test for and why.

I don't remember it exactly, but a coding question in my first interview with an engineer who didn't speak English very well. I had no feedback from her about whether I was even on the right track. She just typed into her laptop and said almost nothing.   Answer Question

Mar 5, 2014
---------------
Most software engineers do a phone screen first. I had two referrals who recommended me highly, so I skipped the phone screen and went straight to on-site interviews. Five technical interviews in a single day, with a break for lunch. Interviews were heavy on coding, algorithms, and software design. Practice solving coding problems on a whiteboard.

How to protect data when you transfer it online. e.g. You need to submit your username and password from your client to the server and there is people who is listening to the information.   Answer Question

Apr 14, 2014
---------------
4 rounds technical interviews plus lunch. They are very nice and almost agree with you on everything. When your write the code on the board they always say "great", "perfect"... I think this is the trap. They make me less nervous which is great but I also started thinking that the problems are not hard and I can definitely get the job. Here is when things goes wrong.

Data structures and algorithms are a must. The most complicated algorithm one would use in these sorts of interviews might be Dijkstra's (all of my questions were simpler though). Get used to coding on a whiteboard and be sure to understand the problem fully before jumping into the code. Bring thin-chisel markers, especially if you anticipate writing a couple of long lines of code.   Answer Question

Apr 1, 2014
---------------
I applied to Google through an employee referral, and heard back from a recruiter within a week of them receiving my resume. The process was pretty quick and easy -- only a few required forms prior to my phone screening. The phone interview was a simple data structure question requiring ~25 lines of Java code. After the interview, I was then offered to fly to Mountain View for an on-site interview. This consisted of four 45-minute interviews, plus an hour for lunch. All of them were algorithm/data structure questions (trees, graphs, arrays), so I can't comment on the nature of the design style questions. In two of these interviews, I successfully answered the first question and was asked a second. In one interview I answered the first question and we discussed my resume for the remaining time. The final interview was a bit more tricky, requiring careful handling of edge cases, so I got a bit mixed up and wasn't able to fully complete the problem (I did have a full whiteboard of code by the end of it). I felt good about the interview, but was notified 2.5 weeks later that the hiring committee decided not to continue the process. My recruiter suggested I get more experience, but cited no more reasons beyond that.

No Question
Mar 10, 2014
---------------
Got an email from a recruiter for setting up an interview which included the topics that will be covered in the interview: mostly algorithms, datastructures, coding skills. Had an initial screening interview.

Mostly covers algorithms and data structures, complexity analysis. Expected to work through the code on whiteboard   Answer Question

Mar 6, 2014
---------------
It is 45 mins. 2 questions, first one about distributed algorithm, not very clear about the request, which is confusing, second one about array, to delete the duplicate. For the first question, I even could not fully understand the question itself because limited information. For second one, it is very easy to answer.

how to design a algorithm which could run in a large computer systems?   Answer Question

Mar 24, 2014
---------------
Phone interview

given K files and N machines, N is much larger than K. given function long sum(int fileID,int machineID) which use particular machine calculate the sum of file. Question:write function which calculate the sum of all files   3 Answers

Apr 10, 2014
---------------
I was contacted by a recruiter from Google. We then arranged a time for a phone interview. Basically talked about my background and he then introduced google working environment and advantages. He then arranged a phone screen for me after half a month. The questions on the phone screen are not difficult, but very tricky. You need to be very familiar with algorithms and data structure, and also be very experienced to code with your most preferred language. The materials sent by the recruiter is very helpful. I was graduating during the time, so I didn't have enough time to practice coding. I didn't pass it.

Design a cache with O(1) search time and delete time.   2 Answers

Mar 29, 2014
---------------
first contacted by recruiters, then had the phone screen. Asked about the OOP directly, talk nothing about the background and resume.

Design the classes to draw different shapes   1 Answer

Mar 11, 2014
---------------
Applied online. Within 1 week I was contacted for a phone interview. The phone interview was scheduled 1 month after their first email. 1 week afterwards, the onsite interview was scheduled 3 weeks after. There were 4 interview sessions and a lunch in between. Currently waiting on their decision.

The lunch session with the Google employee will not affect their hiring decision. You should ask about the internal workings of the company. How are projects assigned? How much is annual income increase?   Answer Question

Mar 13, 2014
---------------
2 rounds on-campus interview and 3 rounds on-site

convert tree to html   1 Answer

Mar 22, 2015
---------------
I was contacted by a recruiter after taking second in a hackathon. I wasn't really planning on switching jobs, but I figured "hey, it's *Google*", so I accepted the invitation for an interview. When I interviewed, I was finishing my last year of university two hours away, and working full time for a startup, so I didn't give studying for the interview the attention it deserved. The recruiter set me up a call with someone who had some overlapping knowledge. The interview itself was standard coding in a Google Doc of some algorithms. I tried to follow the suggestions in Cracking the Coding Interview, but ended up doing worse trying to over analyze the situation. The phone call quality was absolutely terrible. You'd really think Google would prefer a Hangout where you can actually hear what the interviewer is saying. It sounded like the guy put me on a speakerphone wrapped in saran wrap at the bottom of a fish tank... I had to ask him to repeat himself multiple times, making me feel silly. I learned later that apparently they do this type of thing on purpose to see how you handle extra stressful phone situations. Questions were standard algorithm questions.

Determine if a binary tree is balanced   1 Answer

Dec 9, 2014
---------------
They contacted me through email and the recruiter set up two separate phone interviews on the same day within one hour of each other. The recruiters were very nice and gave me a lot of information before the interview. The interviewers were okay. One of them directly went into the technical questions and did not talk much about anything ( mostly like a robot). he would point out if my code had a bug and I would try to solve it. but I was not that prepared as this was my first technical interview ever. Overall I did finish all of the programmings and they worked when I checked afterwards, but I think my problem was that I wouldn't notice the bugs myself before they pointing it out to me. I got stuck a little bit in the classes and objects ... make sure to check if the input is null or not when creating methods for a class...

They asked me to create a class and then create a function that the input for it is from the same class... then asked me how I can check if the input is appropriate... I had to use Instanceof()   Answer Question

Jun 17, 2015
---------------
Right after 2-3 days I submitted my application, I was contacted by a recruiter via e-mail. She asked if we could arrange a time to speak over the phone. We scheduled some time for later that week. During that initial phone screening we discussed my interest in the position, my current job, and established a deeper understanding of the role I was applying for. After we scheduled some time for phone technical interview. On the phone interview day I was contacted by an engineer. After some talk about my resume he gave me an algorithm question. We were on the Google Docs. I couldn't come up with a good solution. After a week I received an email saying they decided not to move forward with my candidacy.

Something about palindrome number. I don't remember exact question.   Answer Question

Mar 22, 2015
---------------
I was contacted by a recruiter after taking second in a hackathon. I wasn't really planning on switching jobs, but I figured "hey, it's *Google*", so I accepted the invitation for an interview. When I interviewed, I was finishing my last year of university two hours away, and working full time for a startup, so I didn't give studying for the interview the attention it deserved. The recruiter set me up a call with someone who had some overlapping knowledge. The interview itself was standard coding in a Google Doc of some algorithms. I tried to follow the suggestions in Cracking the Coding Interview, but ended up doing worse trying to over analyze the situation. The phone call quality was absolutely terrible. You'd really think Google would prefer a Hangout where you can actually hear what the interviewer is saying. It sounded like the guy put me on a speakerphone wrapped in saran wrap at the bottom of a fish tank... I had to ask him to repeat himself multiple times, making me feel silly. I learned later that apparently they do this type of thing on purpose to see how you handle extra stressful phone situations. Questions were standard algorithm questions.

Determine if a binary tree is balanced   1 Answer

Dec 9, 2014
---------------
They contacted me through email and the recruiter set up two separate phone interviews on the same day within one hour of each other. The recruiters were very nice and gave me a lot of information before the interview. The interviewers were okay. One of them directly went into the technical questions and did not talk much about anything ( mostly like a robot). he would point out if my code had a bug and I would try to solve it. but I was not that prepared as this was my first technical interview ever. Overall I did finish all of the programmings and they worked when I checked afterwards, but I think my problem was that I wouldn't notice the bugs myself before they pointing it out to me. I got stuck a little bit in the classes and objects ... make sure to check if the input is null or not when creating methods for a class...

They asked me to create a class and then create a function that the input for it is from the same class... then asked me how I can check if the input is appropriate... I had to use Instanceof()   Answer Question

Jun 17, 2015
---------------
Right after 2-3 days I submitted my application, I was contacted by a recruiter via e-mail. She asked if we could arrange a time to speak over the phone. We scheduled some time for later that week. During that initial phone screening we discussed my interest in the position, my current job, and established a deeper understanding of the role I was applying for. After we scheduled some time for phone technical interview. On the phone interview day I was contacted by an engineer. After some talk about my resume he gave me an algorithm question. We were on the Google Docs. I couldn't come up with a good solution. After a week I received an email saying they decided not to move forward with my candidacy.

Something about palindrome number. I don't remember exact question.   Answer Question

Sep 19, 2015
---------------
Contacted by email and asked if I was interested in software engineering position. The technical interviewer was conducted by telephone and I was asked to write the answer in a Google Docs document. Unfortunately, the telephone line was not clear, so I had some trouble hearing the interviewer, make sure your phone works well on speaker mode, you will need both your hands to write the code!

I was asked not to publish the questions being asked in the interview.   Answer Question

Aug 7, 2015
---------------
On site interview. posting on behalf of another person the interview was onsite and the person got hired for the position of software engineer. The person posted about this question on an online social network site and also wrote that he used similar algorithms for actual projects. which tells you the importance of this question.

Given locations of buildings and their heights generate a skyline that they would present?   Answer Question

Oct 16, 2015
---------------
I was recruited via LinkedIn, and had two phone interviews. The first interview let called me 2 hours after the scheduled time. I emailed the recruiter after the engineer was 30 mins late, and it took him at least an hour to travel him down. Other than that it was a pleasant if not nerve wracking experience.

Simple programming question that grew in difficulty as it went along and added constraints. The second interview had to do with load balancing a web server   Answer Question

Mar 5, 2014
---------------
Contacted by recruiter February 2014, did phone screen March 2014 and get rejected the next day

The coding question have nothing to do with data structure or algorithm, coding is short and extremely easy and no improvement needed(brute force). However, the background is complicated, lots of question needed to be asked before any coding is done, otherwise you will be doomed as I did.   Answer Question

Mar 10, 2014
---------------
I applied online and 1 week later a HR contacted me by email and we skipped the phone interview, scheduled a onsite interview three weeks later and later there are 5 onsites interviews in one day. Offices there are awesome, a little bit crowded. Interviewers are friendly. nice company worth visiting.

what is my favorite Google product, need to show passion about it   2 Answers

Feb 24, 2014
---------------
got interview with google. first a little check with my resume, about 5 mins, then asked what is my favorite google product, then asked about a question: you got a fence, you need to paint the boards with black and white, but can not have 3 or more boards same color in a roll. how many ways do you have.

Design a system that accepts a small amount of data from every user, and serves it up internally at a Google scale without knowing google's architecture, replication, or authentication services.   1 Answer

Mar 22, 2014
---------------
Process was a series of phone screens and collaborative work sessions on Google docs. Each step of the process was largely a repeat of the previous step. All steps focused on computer science. None of the interviewers were able to give me a firm date as to when the next step would happen. From the interview process one must conclude Google is an academically demanding and hostile place.

No Question
Feb 11, 2014
---------------
phone interview. (1) I have a linked-list and a node has a digit. For example, 1->2->4->6->8. 1 is a head and 8 is a tail. It means the number 12,468. I want to add 1. Then, it should be 1->2->4->6->9. Implement it. what is the time complexity. (2) explain abstract and interface. what are they different? give me an example. (3) Bill has a fifty billion dollar. you have a dollar. your money become 2 times larger than a year before. (ex: 1->2->4->8->...) How long year does it take that yours is more than Bill's. give me an answer without calculator.

I think it is just typical questions.   2 Answers

Mar 3, 2014
---------------
contacted through recruiter

Mathematical and coding questions. not unexpected.   Answer Question

Apr 13, 2014
---------------
I applied online at the Google jobs website. I was contacted by a recruiter and was invited to do a back to back interviews at Google. I initially had a phone conversation with the recruiter about the Google interview process. I heard back from the recruiter about a week after the back to back interview.

Build a pseudorandom maze. Write a method to deep copy a graph. Given an n x n matrix of numbers, how do I find a number?   Answer Question

Feb 10, 2014
---------------
Got phone screening then onsite. Onsite contains 4 rounds, 45 min each, with a 15 min break. Problems are not common and hard to guess. But know your algorithms and master your programming languages wouldn't be wrong. That's actually quite energy consuming, so be prepare with a decent breakfast and some chocolates would be a good idea.

one question similar but simplified subset sum   Answer Question

Feb 6, 2014
---------------
2 rounds phone interview. back to back

nothing too difficult, many trivia questions   Answer Question

Mar 19, 2014
---------------
I had applied through their job portal online. I was contacted by the first recruiter in January 3rd week. We exchanged emails, she had me fill out a couple of forms, and then I was handed over to another recruiter. She, in turn, handed me over to yet another recruiter. The recruiter coordination was not good, their responses were all over the place. Two recruiters were working in tandem to schedule my phone interview and they managed to convert the interview time from PST to my local time with an 1hr error. This ended up with me waiting for the phone screen call one hour earlier than it actually was. I had given up and decided that the person would not call and then I receive a call 1 hour later. The interview itself was appallingly conducted. First of all, the interviewer seemed to be in a room with a lot of echo. Second, he must have been using some kind of phone system on speaker or something similar because I could hear my own voice echoed back. I mentioned this to him twice, since it made it difficult to hear his words with the reverberation in the room blurring his voice and my voice echoing. The first time, he said I must be using a headset and that the microphone was too far away from the mouth. I told him that I wasn't using a headset. He waved it away. The second time, he said the same thing. By then I had given up on the interview. I couldn't hear much, he wasn't helping. Trying to decipher the conversation and trying to code simultaneously had become a horrible adventure. Besides, he wasn't listening to half of what I'd said, be it trying to explain my problem-solving method or be it my concern regarding the fact I couldn't hear much over the garble. Some of the start-off questions (break-ice questions) he had asked regarding my resume were pointedly patronizing or so I felt. I understand however that a phone screen doesn't give you enough indicators about these things and I could be wrong. The questions themselves were basic programming, then some threading, concurrency, map-reduce trivia questions. I understand many people have the ambition or life-goal to work for the company. Perhaps to them this process might be forgivable. Most interviews probably aren't like this and I might have had something of an exception. I consider it disrespectful of my time and an unwillingness to listen to what I could potentially provide.

The question was on n-ary tree data stream. Not unexpected, but there was a misunderstanding between myself and the interviewer. The question is to find the head of the tree given a data stream of key value pairs.   1 Answer

Apr 2, 2014
---------------
Phone interview took 45 minutes. Asked a question about graph travesal. gave a working solution but interview was dissatisfied. Failed me after 2 days

The NDA prevents me from discussing the actual questions I was asked.   Answer Question

Apr 25, 2014
---------------
Recruiter got in touch with me in Dec 2013. Interview scheduled for Feb 2014.

I don't remember the most difficult question, it was something along the lines of computational complexity, but I got two really long problems (see review).   Answer Question

Feb 20, 2014
---------------
I had been contacted by a couple of Google recruiters in the past but I wasn't interested at that point. When I decided to pursue an opportunity with Google last month, I just contacted them back and they set me up for a loop. Since I was interviewing for a role in MV, there was one phone screen. The question itself wasn't very interesting but I had to write code in a shared Google doc. The next day, I was told that the phone screen had gone well and was invited for the onsite rounds. There were 5 technical rounds (and an hour around noon for lunch) - each had 2 questions and some time for my questions. While I won't discuss the actual questions here, I'll say that it wasn't 'difficult' (Basic data structures and algorithms). There were no questions involving fancy data structures (Binomial heaps / skip lists etc) either. Two days after the onsite interview, I was told that the hiring committee had approved it, a week after that, I got the final offer.

No Question
Feb 3, 2014
---------------
First phone interview was short and very easy -- basic questions about data types, complexity, concurrency. Second phone interview did not happen: interviewer got sick and did not warn the recruiter. After struggling to reschedule for about a week they decided to skip that phase and do an on-site interview. Onsite interview consisted of five rounds 45 minutes each. Most of the interviewers gave one large problem and kept me polishing the solution until the time ran out. I did not really get a chance to ask a lot of questions about the company (just asked two and answers did not really amuse me). I don't remember the most difficult problem, but two largest ones were: write `Game Of Life' (not in pseudocode, in Java!) and write a procedure that draws a line in a bitmapped array (again, in a real programming language). That had to be done on a whiteboard (side note: while I has writing interviewers were copying my solutions into their notebooks by hand). All problems throughout my interview included questions about complexity and some included questions about optimization and testing. I got a feeling that the work is challenging from technical point of view, but the interview process seems quite ridiculous (especially writing substantially large programs on the board) and most interviewers' attitude can be described as `quite arrogant.' I did not get any background on the company and its nature of work I throughout the interview process and did not feel frustrated when they did not proceed with an offer. P.S. One tiny upside, their recruiters are the best: prompt, good at personal communication and very organized.

No Question
Feb 3, 2014
---------------
First phone interview was short and very easy -- basic questions about data types, complexity, concurrency. Second phone interview did not happen: interviewer got sick and did not warn the recruiter. After struggling to reschedule for about a week they decided to skip that phase and do an on-site interview. Onsite interview consisted of five rounds 45 minutes each. Most of the interviewers gave one large problem and kept me polishing the solution until the time ran out. I did not really get a chance to ask a lot of questions about the company (just asked two and answers did not really amuse me). I don't remember the most difficult problem, but two largest ones were: write `Game Of Life' (not in pseudocode, in Java!) and write a procedure that draws a line in a bitmapped array (again, in a real programming language). That had to be done on a whiteboard (side note: while I has writing interviewers were copying my solutions into their notebooks by hand). All problems throughout my interview included questions about complexity and some included questions about optimization and testing. I got a feeling that the work is challenging from technical point of view, but the interview process seems quite ridiculous (especially writing substantially large programs on the board) and most interviewers' attitude can be described as `quite arrogant.' I did not get any background on the company and its nature of work I throughout the interview process and did not feel frustrated when they did not proceed with an offer. P.S. One tiny upside, their recruiters are the best: prompt, good at personal communication and very organized.

I don't remember the most difficult question, it was something along the lines of computational complexity, but I got two really long problems (see review).   Answer Question

Feb 26, 2014
---------------
The recruiter contact me through linkedin and ask if I am available. Then she arranged two phone interviews. Both are from the knowledge project group. Google document is used to share the idea. And the conversation is through phone call.

Designed a method to identify utf-8 characters.   Answer Question

Feb 16, 2014
---------------
2 rounds back-to-back first round: coding problems. wiggle property + graph second round: String manipulation The problems are not that hard, but you need to write real codes which makes this not that easy. The interviewees are good, except the first one, who did not give you so many instructions when you are stuck

They asked coding problems and letted me write code on paper, only coding   Answer Question

Feb 16, 2014
---------------
Applied through the school career website. Got phone interviewed. quite hard programming and algorithm questions and some brain teaser questions. The phone interview lasted 40 mins . I was not able to answer all the questions. :(. The overall process is fast and tough.

programming and algorithm questions and some brain teaser questions.   Answer Question

Nov 12, 2014
---------------
I got my interview scheduled two weeks after my application. After taking 2 rounds of telephone interview, I was informed of passing the interview. The next step is team match. It took 1 week to get picked by 2 team hosts.

Details of MapReduce implementation.   Answer Question

May 26, 2015
---------------
They called me in for an interview, asked me a few questions and asked me to write some lines of codes for a specific function. So I did that then they asked me to design a program to carry this out, easy enough for any software engineer really, so we did that. After this they asked me a couple of questions describing different scenarios and what I would do in them.

Why do I want this position?   Answer Question

Oct 20, 2015
---------------
There were three phone interviews, and I had to code on a Google doc. One interviewer was not able to make it to the interview, so instead, we had the interview a few days later. That interview went terribly, but mostly because I couldn't understand his English. I did the best I could in the interview, and then afterwards I wrote to my recruiter telling her what happened. A few days later, I was pleasantly surprised to hear I got the internship! My recruiter said that it was good I told her what happened. They discounted the feedback from that interview, and they would have re-interviewed me, but it was later on in the year, and my scores from the first two were good enough to let me through.

One interviewer asked something about Pascal's triangle and binary coefficients.   Answer Question

Jan 30, 2014
---------------
I was recommended by a friend who already worked at google. I got an email asking to schedule a phone interview almost immediately after he sent in his referral. The phone interview was slightly less than half an hour and involved solving a simple problem with linked lists. They then flew me out to Mountain View and had me spend a full day interviewing with people from four different teams. Two interviews were programing challenges. One was a discrete math thought problem, and the last was a data structures and algorithms problem.

The data structure question was confusing because the interviewer couldn't keep track of we were talking about his ridiculously contrived thought problem (something about postcards and amnesia) or the cs problem it was obviously a metaphor for.   Answer Question

Feb 11, 2014
---------------
The interview was about 1 hour, the recruiter asked only one simple question, how to intersect two arrays, I misunderstood the question first and then write down the code. He also asked about how to test the function, and how to improve the performance. The question is simple, but I didn't do very well. Tooo nervious.

No unexpected question.   Answer Question

Mar 3, 2014
---------------
Recruiter contacted me via linkedin and started the process. He was responsive and helpful in figuring out the logistics. Did two phone interviews initially and then a full day of interviews at the google campus. Everyone I spoke to was cordial and patient as I was working through the solutions.

Most questions were related to general data structures and graph algorithms.   Answer Question

Jan 20, 2014
---------------
A recruiter found me on LinkedIn. She is very professional and super nice. I sent her my resume via an email on which I answered a few questions about my background in techniques and research; about school and employment. She planned a phone interview for me with one technician, 45 minutes. I answered 2 tech questions.

The tech question isn't really hard. I answered the basic solution and then was expected more efficient solution and finally the problem has to be solved in a scalable scope. I bet these should be completed in 20 minutes at most but that took me 40 min. Of course I didn't get further interview.   Answer Question

Jan 20, 2014
---------------
Recruiters are really nice and efficient. I had 4 interviews and it takes almost 4-5 hours. The recruiter's hints in email are not very helpful. They are quite different from problems in my interview but still thanks for their help in the whole process. It was a nice experience

Not quite difficult if you had seen similar problems before but for me some of them are unexpected. I expected to see problems in algorithm and data structure, like tree and graph. they took me some time to figure out.   Answer Question

Jan 16, 2014
---------------
2 Phone Interviews (45mins * 2) was placed in the first round. I believe they have further rounds for people who passed phone interviews. In the phone interview, they don`t ask what you have done before. They will give you the instruction for the interview and start examining your programming skills and your abilities for the software engineer.

generation random number not in list   Answer Question

Feb 26, 2014
---------------
applied via a friend and got a call the following week and then on site.

What area of would you say are you an expert in   Answer Question

Jan 9, 2014
---------------
I was contacted by a recruiter through LinkedIn. We set up a time when she would call. She called about 15 minutes later than the time she specified. She seemed like she was in a rush and wanted to get through her generic questions quickly and move onto the next person. It didn't seem like she wanted to really learn about me or if I'm a fit. She asked the basic questions of what I'd like to work on, what's my area of expertise, etc. I wanted to ask some questions but could barely even ask before she interrupted me. After the phone call I decided not to continue with the process.

2D matrix with 0s and 1s. Try to find out how many countries in this matrix? For example: [[1,1,1,0] [1,1,0,0] [0,0,0,1]] return 3, because one for 1s, one for 0s, and one for the last one. another example: [[1,1,1,1] [0,0,0,0] [1,0,0,1]] return 4   1 Answer

Feb 12, 2015
---------------
Get referred by friend in Google, and then get scheduled an HR interview soon after that. That was nice and easy. Followed up by a technical interview over the phone. Not that good answer. So it was finally declined without explicit explanation. I think this is pretty normal for such a big company like google. nothing else could say.

nothing difficult expect the accent of indian   Answer Question

Jan 8, 2014
---------------
quick phone interview very easy programming question just like return average of nearby 5 points.

honestly not difficult questions. Just basic stuff.   Answer Question

Jan 14, 2014
---------------
5 onsite interviews. 1 guy was *so* rude and that showed he is not experienced. Didn't allow me to think more and just pushed me to implement my first solution which I said it is gonna take a long time to implement. Clearly I didn't manage to finish ontime and he left the room with describing what a mess I did. He was so arrogant. He was being shadowed though. The 4th guy was a bit better but still had communication problems. Was just interrupting me while I was implementing my code. I had to stop him by telling him just stop and let me finish my code, and then I will review it for you and then feel free to ask questions. He ultimately appologized in the end but clearly I got rude to him this time (because he was just bugging me). in the end, this would turn against me I guess. waiting for the interview results. The other three were polite, and experienced. I would say an interview has two sides and your side is the more important side. but there is another side who might not be experienced enough to manage an interview session.

Describe an implementation for a hash table. Explain how the data structure changes as more items are added and sketch a proof for the amortized complexity of operations.   Answer Question

Dec 30, 2013
---------------
I applied through a friend at Google. I had a 45 min phone interview with a software engineer. He asked for a brief overview of my research and then asked several coding questions. They were average difficulty, similar to the ones on CareerCup or glassdoor. Then, I had an on-site interview, which consisted of 4 coding interviews and 1 research interview. The 4 coding interviews went over algorithms and system design. The interviews had a shared document that let them know which topics had already been covered, so it pays to prepare for all of the topics covered in a typical software interview. The research interview was a casual conversation about my thesis research. My advice is to get a coding interview book and do as many of the practice problems as you can on paper.

Nothing specific because of NDA.   Answer Question

Feb 14, 2014
---------------
I was referred by another engineer. I had a very brief phone screen and immediately scheduled an onsite interview after selecting the position to apply for. My first day consisted of three 45-minute interviews. Two involved writing code for text/string problems (no specific details because of NDA). They weren't especially challenging but increased in difficulty and constraints over several iterations of problem revision. No super complicated data structures were necessary, from my impression, just writing very tight code correctly and clean, reasonably rapidly, 20-30 lines. And very short discussion of runtime and space. I wrote in C but I have a feeling C++ or Java was preferred. I explained how such convenience APIs (Java Queue, C++ map, etc.) worked under the hood and basically reinvented them in C. I feel a better approach would have been to just use them and mention in passing how they work. My third interview was troubleshooting a site deployment problem. I just isolated components and talked specifically about how I would pinpoint and solve problems related to networking, load, etc. We just went through different hypothetical scenarios and how it affects users, etc. I then had a second round of interviews consisting of three more and a lunch on a separate day. Two more coding not entirely different than the previous two. One had much more emphasis on analysis of runtime and different ways to improve and the limits on maximal efficiency. The last interview was large distributed system design for a game, with bits of code and pseudo code and how to design the various components.

No Question
Feb 21, 2014
---------------
I was first contacted by Google in 2012 a couple months after I took up current employment. This recruiter was energetic, interesting and seemed genuinely interested in finding the right spot for me at Google. Unfortunately, I had just started my new job and have a personal policy of staying at a place of work for at least a year. That, and the project was interesting and exciting so I did not follow up and let him know why. Time passed and eventually he moved on from Google. About a year later another recruiter contacted me. She seemed nice but nowhere near as enthusiastic. We setup a time to talk over a Hangout but unfortunately she cancelled at the last minute. Not good, I'd changed my plans around to fit. So I agreed to her request to setup a new Hangout the next week. Nothing happened. After about two weeks (I waited due to work commitments) I got back in contact with her and we worked out a new time and the interview went ahead. She was courteous and seemed reasonably enthusiastic, but nothing like the previous guy who had a specific position in mind. No, this was now very open ended, non-specific and I started to feel like just another candidate. Despite this I decided to see where it went. So a technical phone interview was setup and it was possible one of the worst phone interviews of my career. I could not hear a thing. The call quality was terrible. This made it extremely hard to hear what I was even supposed to be doing. Fortunately, the Googler on the other end was very helpful, polite and understanding. We eventually nutted out what he wanted me to do via Google Docs. Then I waited over two weeks for feedback. I passed the interview but then I was transferred unceremoniously to recruiter the 3rd. This guy was even less enthusiastic but communication was clear and to the point. He ignored my request to talk to him over Hangout. But, the second interview got organised with a team I was interested in. The second interview however was far worse than the first. Call quality was better but still not great. Worse still however was the interviewer who, seemingly, had zero interest in being there. He explained what he was looking for, a basic problem, and for the rest of the interview ignored most of my questions. I was trying to talk through the problem, explain what I was doing and also try and see how he would work with me. From what I heard I'd expected this from a Google interview. And indeed, the last interviewer was great. However, this guy did not answer my questions - aside from some grunts - and seemed more worried that I wasn't using STL. I told him I just wanted to keep it simple as it was a simple question. Did I forget to mention that he was a full 15 minutes late to the interview? I cannot stand this and it is disrespectful and very tardy. Also, the question asked had nothing to do with the specific position I was interviewing for. In the end, I've no doubt I gave a sub-optimal impression on my second interview. But what do you expect from a sub-optimal interview? Garbage in, garbage out. So in the end I did not get an offer. While I understand that I am perhaps in the minority here as far as Google interviews go I can see from the stats that I am certainly not alone. From my experience I can only conclude that Google does not take its recruitment seriously and it has big issues with process.

They were only of average difficulty.   Answer Question

Jan 14, 2015
---------------
I applied for the position in a career fair at my university. A couple of months later I got an email from a recruiter to set up an interview. I scheduled an interview for a month later. I had two phone interviews; questions were about my background, coding, and algorithms. I thought I did well in the interview, but a week after the interview I got an email from the recruiter that I didn't get the position.

I thought all the algorithms questions were easy and basic; the coding questions on the other hand, specifically one of them, was not that clear and straightforward. I mostly blame the fact that the interviewer couldn't define the problem in a clear/proper manner. He then tried to explain the question via an example but his example was also confusing.   Answer Question

Jan 28, 2014
---------------
Google's interview process has changed significantly and it's much more streamlined. I had 5 rounds of on-site interviews. As always, the questions were challenging but they were more meaningful and "in-line with the reality". The whole process was well planned and well organized. All interviewers were in time and wrapped up the interview in time too. Of course, there is whiteboard coding but they were not pedantic about every single syntax.

Questions were all technical and I'm not going to disclose them here.   Answer Question

Dec 15, 2013
---------------
I was initially contacted by a recruiter who indicated that I had been referred by someone working there. First he inquired if I was interested to which I said yes. We briefly discussed a phone chat but quickly moved forward with an on site interview. Initially, I was to interview at their New York office but the recruiter felt my chances were better if I interviewed at their headquarters in Mountain View. So I agreed to a face-to-face interview at their headquarters. At this point, I was introduced to a second recruiter who helped set up my travel arrangements, discussed what to expect, and answered any additional questions I had. She had also given me a list of topics to study and a couple of websites to visit to help prep. She was the one I met with when I went onsite and she let me get a drink and use the bathroom before heading to a conference room where I would spend the next few hours. She then left me after giving me a chance to ask any more last minute questions. I had a schedule of 3 interviewers followed by a lunch break followed by 2 more interviewers to finish the day. The interviewers were nice and accommodating and happy to answer any questions but were very mindful of the time except for my final interviewer who probably spent 2 hours with me. They gave the impression they are passionate about what they're doing and did not dismiss anything I said as foolish or dumb (I mention this as I've read other interview accounts who said their interviewers were snobbish and elitist). After about a week, I emailed my recruiter asking about a status. She said they were still waiting on the feedback from some of the engineers and that she would find out where they were with this. About another week after that she called me to inform me they were not continuing with the process. I had tried to find out more about the reason but she said there was no feedback available and that it's a 'flaw' in their process. She encouraged me to apply again in another year or so indicating that people often did re-apply after their first try.

I had been asked to write a program that would perform a basic regular expression search.   Answer Question

Dec 3, 2013
---------------
I applied online and got two phone interviews by mail. Both interviews are technical but includes some question talking about my experience on the resume. First interview includes coding questions and the second one is a debugging questions. The second interviewer gave me a piece of code and let me find the bug like indexOutOfBound or object conduction.

Conduction of object and other generic type.   Answer Question

Nov 18, 2013
---------------
Contacted through LinkedIn and passed the phone screen. Went onsite for five interviews. They asked me Systems Design - What happens during and after a query is being typed (autocomplete) in a search box whether the user is trying to go to a website or asking a question etc, and how do servers complete the request and what is the best (parallel) structure for the request to go through. DFS and how servers are located for proximity What is the best data structure for a threaded email system? Linked List. Connecting and disconnecting links to update which email arrives in order by date and time If you have data coming in rapid succession what is the best way of dealing with redundant data? A queue and a hashmap I forgot this exactly but - If you had a binary tree and only two functions getNumChildren() and getNthChild( n ) how ....(get duplicates or a certain node maybe) - The main point is to use recursion. Then was asked spatial and memory efficiency (Big O) Last one I forget but it had to do with if I had a large group of text how do I find data and shuda used a hashmap. You could probably reason a binary tree works because of space efficiency.

Search autocomplete question and how servers are distributed for max efficiency surprised me as I spent my time doing programming questions and not reading up on conceptual design knowledge   Answer Question

Aug 21, 2014
---------------
Recruiter send you mail asking if interested then calls you for time and date for interview then send you mail containing guidelines then Phone interview - on site interview (1-4)- final interview

It was data structure related question.Is not hard but not easy too ?   Answer Question

Nov 7, 2014
---------------
I was contacted by a Campus Recruiter after our University career fair. She set up a short phone interview to see what my background and interests were. This was followed by a 2 hour long technical interview on a Google doc while simultaneously talking to the interviewer on the phone. If I had passed this difficult interview of four coding problems, I would have had an on-site interview as the last step.

Break up a string into dictionary words: Given an input string and a dictionary of words, implement a method that breaks up the input string into a space-separated string of dictionary words that a search engine might use for "Did you mean?" For example, an input of "applepie" should yield an output of "apple pie", assuming that "apple" and "pie" are in the dictionary. Deal with the simplest cases only, where the input string can be divided only into two dictionary words. dict = ["apple", "pie"] "applepie" -&gt; "apple pie"   Answer Question

Nov 20, 2013
---------------
Two 45-minute phone interviews

give you a set of problems that depends on each other. it asks you to print out the order of the problem so that later problems only depend on problems before.   1 Answer

Nov 14, 2013
---------------
I did an internship at Google and went through the conversion process, which includes technical interviews. The interviewers were nice. I was preparing mostly for algorithm, data structure type of questions, but instead got questions about multi-threading and synchronization. My recommendation would be to prepare for everything and you need to get almost everything right.

A question about deadlock.   Answer Question

Nov 20, 2013
---------------
Two 45-minute phone interviews

give you a set of problems that depends on each other. it asks you to print out the order of the problem so that later problems only depend on problems before.   1 Answer

Nov 14, 2013
---------------
I did an internship at Google and went through the conversion process, which includes technical interviews. The interviewers were nice. I was preparing mostly for algorithm, data structure type of questions, but instead got questions about multi-threading and synchronization. My recommendation would be to prepare for everything and you need to get almost everything right.

A question about deadlock.   Answer Question

Nov 16, 2013
---------------
I had a technical phone interview for about 1 hour. There was nothing surprising. I spent most of the time talking about ideas and thoughts about the problem and the latter portion was spent coding over Google docs. I was a little nervous, but my interviewer was very patient and willing to provide hints/ideas.

Nothing was difficult. They presented a problem and I just had to go through an algorithm and explain my thinking.   Answer Question

Oct 31, 2013
---------------
The interview was fine, pretty standard for a tech company interview. There were whiteboard coding questions, some design quesitons, questions about theoretical computer science, and a chance to discuss my Ph.D thesis. None of the questions were especially difficult for me. My interviewers seemed slightly bored themselves, I never got much of a sense that they were excited to be working there.

Nothing stands out.   Answer Question

Mar 30, 2014
---------------
I had one phone interview followed by 5 on site interviews.

The phone interview was relatively easy , standard text book questions. 2 out of 5 on site interviews were questions that dealt with design and problem solving. 3 of them were about dynamic programming , memory management and data structures . Very good and insightful experience, highly recommend applying to google to get a better sense of where you are as a junior engineer and also see the campus.   Answer Question

Oct 10, 2014
---------------
I submitted my application online, and was contacted by a recruiter a couple of days later to arrage two online technical interviews, 45 each back to back. I was nervous for the first one, but got comfortable with the second one. I passed that and was put forward to team matching. That took a very long time for me. I had interviews from several teams, and finally was matched with a team I liked. The recruiter was incredibly helpful and patient during this process.

System Design   Answer Question

Aug 11, 2014
---------------
Only have one phone screen technical interview and then onsite interview. I only have three interviews onsite. One wass in the morning, then two in the afternoon. They also would arrange two persons bring you to their food center. The food there is so nice. The process was easy and fast.

The conversion interview was at least twice as hard as the internship interviews.   1 Answer

Aug 22, 2014
---------------
They came to my school (UCI) and interviewed a good amount of people. Each candidate was given two 45 minute interviews. They ask difficult questions but not as difficult as a full time position. Then if you do well in that you go into host matching where they try to find an internship suitable for you after you give them your preferences. They described an internship and it sounded fun, but I later found out it was a very annoying project and was not satisfied with the initial description.

How to check whether a sudoku puzzle is solved   Answer Question

Oct 25, 2013
---------------
2 off campus interviews unless you have a referral and get directly to on site.

"What is the one type of job you would not be willing to do?"   Answer Question

Oct 25, 2013
---------------
I was initially contacted by recruiter over email. I had previously applied for a different type of position but never heard back, but they must have retained my resume. As I was not actively looking for another position at the time, I was mostly interested to hear what types of opportunities were available. I talked with the recruiter for about 30 minutes, and it was mostly a getting to know you type of conversation. He did ask me if I would be willing to relocate to Mountain View, and whether I would be available to fly out for an interview in a month.

No Question
Oct 14, 2013
---------------
I was referred by a google employee and got the e-mail soon. The HR scheduled two phone interviews, but I didn't do well in the interviews. The problems are not very hard, but I made several mistakes. Actually it was my first technical interview. I may try to do better next time.

no difficult questions   Answer Question

Oct 16, 2013
---------------
A recruiter reach out to me about an engineering opportunities. She noticed that I had applied for a job at the company after graduating college (over 10 years ago). She wanted to follow up.

Trees, sorting, and distributed systems.   Answer Question

Oct 15, 2013
---------------
The hiring process took 2 months. One phone interview and 5 interviews on site. The interviewer acted lost and disinterested. They were also not very organized with questions and everybody forgot to ask me questions related to my resume.

No difficult questions at all. There were some problems that just required a lot of time to carefully walk through.   1 Answer

Oct 7, 2013
---------------
I applied online and got a response from a recruiter almost immediately. After that everything went very slowly. The entire process has taken 2 months and the worst thing – communication with my recruiter was almost completely broken: I did not receive responses for several days; the recruiter scheduled phone calls and did not show up, etc. From the very beginning I had the impression that the recruiter is not very interested in dealing with me. I was treated as a low priority candidate. May be it's because of the lack of internal referrals. I think, I could be a very good match for Google: PhD with strong math background, excellent GPA, 15+ years of continuous coding experience, patents, lots of cool research projects I worked on in the past including projects related to the position I was applying for, Google's culture fit, strong desire to be a part of Google. I did very well during the phone interview and was invited for the onsite part. I think onsite interviews (4) went very well too. What really surprised me is that interviewers asked lots of questions about my experience. Problem solving part was not very challenging. This was a little bit disappointing. Tasks were routine and not very well though-out. Solving a difficult problem you have a chance to shine. When you are dealing with an easy problem it's all just about how fast and accurate you are in white-boarding. I cannot say I was absolutely perfect, but I am sure I did not fail any single part, although sometimes I experienced problem understanding what the interviewer really wanted to see. Interviewers were nice and friendly. I did not have the feeling I was dealing with stars. Several times interviewers were even not up to speed with my ideas and my concern is they might not be able to record everything accurately. I was waiting for the feedback for 3 weeks. By this time I already had an offer from a big Google's competitor, but I was patiently waiting for the "job of my dream". I don't know what really happened during these 3 weeks. According to the recruiter, she was collecting interviewer's responses. It strange, since it sounds like my case has not even reached the hiring committee. After 3 weeks the recruiter scheduled a call where she told me they would not move forward with my candidature, because "I did not walk through problems well enough". I do not agree with this conclusion, since I got the opposite impression from my interview. My guess – the reason for the rejection was something else. After all I am extremely disappointed. My recommendation to other candidates: think twice before applying for a position at Google. It takes too long and the result is very unpredictable. They are not just looking for smart/skilled/passionate. Evidently there are some hidden criteria. And don't trust Google's articles and videos about their recruiting process too much. They present their understanding of the perfect recruiting process. The reality is very different. The other advise is try not to spend too much time describing your experience and asking questions. You have only 45 minutes and you will need this time to work on algorithmic problems. I typically had no more than 25-30 minutes left for problem solving and I was usually given 2 tasks. Note that coming up with a right idea and implementing the main functionality is not considered a complete solution. For the record they want to see 100% completed code. If you've run out of time just because the task selected by the interviewer was too large for the timeframe, it's your problem. Interviewer is always right. The phrase "did not walk through problems well enough" in my case could easily mean "proposed the right solution for the second problem, but did not finish writing the code in time".

Regarding binary trees, stacks and queues all in one question   Answer Question

Jan 8, 2014
---------------
Process was fairly straightforward, interview was alright, the interviews were kinda rude and weren't paying attention at all. They ask all coding questions, don't care about who you are your background where you come from etc

sort the array so that the odd number in front of the even number and their relative order doesn't change in O(n)   6 Answers

Sep 28, 2013
---------------
phone interview, B+ tree, optimization of database, two algorithm problem, sort the array so that the odd number in front of the even number and their relative order doesn't change in O(n)

The system design question was the most frustrating because the interviewer did not articulate which part was supposed to be designed, until the very end. I suggest asking a lot of questions and pressing the interviewer to state exactly what they want you to design.   1 Answer

Oct 17, 2013
---------------
I was contacted by a recruiter. I had 1 technical phone interview. Then I was invited onsite for 4 interviews. 3 of the interviews were algorithm and code based, and 1 of the interviews was a system design question.

The phone interview I had was fairly easy. It was focusing on string manipulation and of course writing the code in a shared screen was the challenging part.   Answer Question

Oct 30, 2014
---------------
the recruiter somehow had a copy of my resume from 2010. The only contact info that stays the same was my email address. Once they initiated the contact, they were able to arrange for a telephone interview pretty quick. The phone interview took about 1 hour and 15 mins. I haven't heard anything back from them yet.

Design an algorithm that sorts an array of characters in O(n*log(n)) time.   Answer Question

Dec 30, 2014
---------------
The first round was at my school. We did 3 interviews which were about 30 minutes each, testing my ability to code on the fly in my choice of programming language (Java, C++, python, go if you know it). After passing this round of interviews, I went into a project matching interview process, which were 30 minute phone interviews with potential hosts.

When you click on a screen it might not exactly on a link on the page. Finding the most appropriate link for a click on a screen area.   Answer Question

Sep 22, 2013
---------------
Phone + Onsite interview. Phone interview: asked to code program to find intersecting circles and maximum rectangles. Onsite interview: Questions on design patterns, graph traversals, puzzles and user interface. Find if 2 lists of rectangle are exactly equal. How would you sort the lists? Questions about Javascript scoping rules. A rectangle class to compute perimeter area etc.

No Question
Sep 17, 2013
---------------
There is one guy he words his question quite vague. He is asking if the array list is partially sorted, what algorithm you should use and what is the time complexity. I am asking like do you mean there are several subarrays which are sorted but in total they are not, he said yes. So I offered answer as O(log k), k is the number of the subarrays as a typical case of merging sort. But what actually he means is that he is expecting bubble sorts, and his question is actually not partially sorted but some individual elements are not in the correct order, which finally makes me understand when we came to his big coding question instead of screening. I am just a little bit disappointed that he did not have the patience to discuss and clarify with me better, he looks so in hurry in the interview, talks so fast and cannot wait to leave the room and I remembered he even forgot to shake hands before leaving, which confused me a lot.

What is the total number of different valid parenthesis. I mean not to code it out, but to calculate the number.   1 Answer

Nov 12, 2013
---------------
Submitted resume online and get contacted for a phone interview. This is the first time google actually response to my application in my 4 year college life. The interviewer is super friendly, and the question is quite reasonable. I've heard many people saying been asked a non-relevant questions by google engineers such as asking a Java person about writing garbage collectors using C. But it didn't happen to me. The interview questions are very reasonable. It focus on data structure and practical algorithms. Average difficulty. After 2 weeks, I heard back from the recruiter for an onsite interview, and it's the worst part. It takes them more than 2 weeks to find out a date for the interview, which is scheduled 6 weeks after I'm informed for the onsite. I understand there're huge amount of people applying google, but the long procedure is not reasonable. (Since there's team match after the onsite, which could take another couple month.) Therefore, I went for another opportunity. If it's 5 years ago, google might worth for me to wait. But now there're many great companies out there and google is not the single best option anymore. (Actually maybe not even one of the best.) In addition, I told the google recruiter that I'm not going to continue with them, but I still received interview arrangement from their coordinator several days later. Their recruiting system has serious problem.

Give a string of words. Find anagram words and put them into the same list, then output the list of anagram words lists. input: [add, dad, care, race] output: [[add, dad], [care, race]]   4 Answers

Sep 16, 2013
---------------
Applied online, got in touch by a HR and then got transferred to another HR. I am currently in the process of phone interview and they have not been in touch with me for a while!

They asked me about system design questions for which I didn't expect.   Answer Question

Sep 14, 2013
---------------
Submitted resume online and recruiter called me the next day to gather information. I did an onsite interview with five 45 minute technical interviews. It took about 1-2 weeks to get approved by the hiring committee, and the official offer came a few days later. The offer was much lower than my current salary which was shocking and other offers I already had. Apparently google is notorious for having low salaries after searching around online at employee complaints. Google was completely unwilling to negotiate the base salary or match other offers I had in hand (or even really come close in my opinion). The recruiter was a bit "jerky" and was trying to pressure me into accepting the offer by implying that every other software company was a poor decision to consider. I felt like Google's unwillingness to negotiate the salary at all hinted at a larger "big corporate" problem that would likely be an issue throughout employment there. I ended up accepting a job offer at their direct competitors instead which lacks the "big corporate" feel and the HR team was much more pleasant and reasonable in negotiations.

You need to know pretty much everything you learned in your college data structures class. You should feel comfortable coding on a white board and talking about system design. Know linked list and graph traversal algorithms.   Answer Question

Sep 5, 2013
---------------
I was invited for a round of interviews in the Google office in NYC. The recruiter tried to be helpful and gave me the standard resources to prepare for the interview (such as how to code on the whiteboard, algorithms and data structures, pretty basic stuff). I had 6 interviews in 1 day each lasting about 45 minutes with a lunch in the middle. Some of the interviewers had very good questions which you can attack from different angles and have a very good discussion, others were quite shallow and pretty much didn't know anything other than a single question they had prepared to ask at the interview. The interview process or questions aren't something out of the ordinary for a tech company. But what I found a little disconcerting is that some interviewers didn't talk about their own job with enthusiasm when I asked them about it at the end of the interview. Also I wanted to find out what area or team I'd be joining if offered a job but I could only get some general answers. Several weeks later the hiring committee finally reviewed my case and decided to not extend an offer. I'm not sure how the committee works. Are they the same people who interviewed me? What do they remember about the interview after several weeks? Strangely I got no negative feedback communicated to me by the recruiter, but no offer either. A little disappointing, however overall I did enjoy the interview experience.

Implement memcpy and know how to optimize cases which dont have be copy byte by byte. Given a Binary Tree, and a value, find all possible number of ways that sum up to the given value. Behavioral Questions... Design a global system performance monitoring network (basically know the differences/advantages/disadvantages associated with TCP/UDP)   Answer Question

Aug 31, 2013
---------------
Recruiter contacted me through LinkedIn. Followed by Phone Screen technical interview with Google Engineer. Was invited to on-site interview. Finally contacted by Recruiter. Whole process was extremely slow and took 3 months.

Given a list of strings. Produce a list of the longest common suffixes.   Answer Question

Sep 16, 2013
---------------
A Google recruiter emailed and called me out of the blue and said that someone internal (didn't specify who) had made a recommendation and wanted to know if I was interested in a position. They were very positive and made it sound like they were really interested. The email had mentioned that I had qualifications that they were looking for. The recruiter said the process would take about 5 weeks and asked me some questions. They followed up with scheduling a tech phone interview. The interviewer was very punctual with their call and polite. He asked some relatively obscure questions which i didn't get immediately but did, once I understood what he was asking. He then asked me to code something in the Google doc while he was on the phone then, had me code something more after the call was over. I got another call saying that they'd like to do another phone tech interview. Someone else called and asked some further questions regarding Java collections. I'd say I pretty much nailed the second interviewers technical questions but, I didn't get any impression that they were interested in me at all personally. The interviewer had me code another exercise after the call. It was fairly straight forward and I feel like I completed it very thoroughly. That's it, they didn't ask me to come in or anything. I got a call from the recruiter saying the committee was looking for someone with different qualifications and maybe some positions will open up in a year. I was a little puzzled by that because they said they contacted me because of my qualifications, but whatever....... Overall everyone was very polite, pleasant and positive.

Can't say.   Answer Question

Sep 15, 2013
---------------
Was contacted after receiving recommendation. Quickly set up a phone screen with coding in a Google Doc. Interviewer was very friendly, can't complain. Questions asked took too long and it was not well moderated, but interesting questions that Google loves to ask. Nothing went terribly, I just didn't do well answering the questions.

A fairly simple question to check the number of the digits of an input. Make sure your code is robust enough to handle anything unexpected though   5 Answers

Sep 4, 2013
---------------
Submitted my resume and got set up for a phone interview very quickly.

Common ancestor of 2 different leaf nodes   Answer Question

Aug 26, 2013
---------------
Questions were ranging from algorithms to designs. I thought i did well but it didnt get the follow up interview

No Question
May 30, 2014
---------------
The interviewer would mention any kind of idea (he would explain it if you said you never heard about it) and ask you to code it in a google doc. The interview would take 30-45 minutes. And be prepared, do not worry if the interviewer doesn't call you on time; as that time, he was late for about 45 minutes.

the question style is unexpected   Answer Question

Sep 29, 2013
---------------
It contains two phone interviews and five on site interviews

Brainteasers   Answer Question

Aug 24, 2013
---------------
Initial email from HR followed by 2 phone interviews. After clearing the interviews, I received an email from HR within 1 week informing me that I had been shortlisted for the onsite interviews. I scheduled the interviews after 2 weeks since the person they wanted me to interview with was out of town. Did not clear the 2nd onsite interview & did not get an offer.

Asked to write a function to determine if numbers were a power of X.   6 Answers

Aug 6, 2013
---------------
I was approached via linked in and immediately had contact with a recruiter. After sending my resume and cover letter along I was short tracked to a telephone interview and invited in for a tour of the NY office. My telephone interview was postponed several times taking about a month to come to fruition. When it did take place, the employee interviewing me was very patient choose a language I was familiar with to ask questions in. Many questions about OO Programming basics and use case scenarios. Unfortunately I had spent some time out of practice in my existing position and even I could tell some of my answers were sub-par.

Question about infrastructure/network setup that I have no experience in.   Answer Question

Sep 5, 2013
---------------
I got a call from Google recruiter and she got my reference from Google code jam. The recruiter was very efficient and she quickly setup a phone interview as per my convenient time. The interviewer was very senior Googler. He called bit late and we had some connectivity issues from his side initially. The interview started smoothly with some ice-breaking discussion he really seem very friendly. Next he gave me a simple problem and asked me to provide a solution with a complete code. I analyzed the problem and proposed a crude solution which was O(n) and eventually it turned out it was the best solution since we couldn’t do better than that. He agreed and asked me to code. I spend some time in writing the pseudo code and after explaining the code started with actual coding in java. That’s where the things started going bad. He suggested me that we only have few minutes left and he will kicked out of the room soon, so I hurried and complete the code as much as possible in 2-3 minutes and made few copy-paste errors like forgot i++ in for loop etc and it got copied in all the for loops etc. I think he was just testing how I code under stress since we had sufficient time left (I realized it later). The interviewer was great. he gave me some nice hints to improve the code and make it more graceful etc but very soon I got ‘thanks but no thanks’ email from recruiter.

Two code programming question   Answer Question

Aug 2, 2013
---------------
Recruiter was respectful and responsive, flew in expenses paid for a day of interviews (4x ~1 hour interviews + lunch 'interview'). It was a lot of fun but I didn't get it due to inconsistency performance as they asked a question in an area I lack experience.

Finding a pair of elements from two sorted lists for which the sum of the elements is a certain value   4 Answers

Aug 15, 2013
---------------
Contacted by a recruiter, and have two phone interviews.

How do you improve your solution when handling large amount of data?   Answer Question

Jul 26, 2013
---------------
I applied for the position through the Google jobs website, and I was contacted by a recruiter in a few days. Initially the recruiter asked me about things such as if I had previous interviews at Google, and if I have an internal reference, and where I am in the job search process. There were two phone interviews, typical algorithmic questions. In my onsite interview day, I had four/five other interviews, which were very similar to the phone interviews, except that you use a white board.

One of my interviewers' expertise was in hardware, and we had an oddball interview because of that (I don't have much experience with hardware). To be fair he did ask me at the start if I was comfortable going down that route. By the end we had sketched out a fairly complete (but high-level) diagram of a hardware system. To this day I don't know if he gave me favorable feedback or not!   Answer Question

Jul 28, 2013
---------------
There's a matrix. Each element in the matirx is a bit (0 or 1). Write a method to reverse this matrix. The matrix is stored in a one dimensional char array. The length of each row is given

No Question
May 31, 2014
---------------
Was contacted by recruiter (third party contracted by Google), who arranged a 45-min phone screen. Phone screen was performed by an engineer and was entirely technical in nature. After a week or two was informed that I was moving on to in-person interviews, was flown down to California for a day of interviews. As part of this was "transferred" from the original recruiter to an internal recruiter who would manage the rest of the process. There were five interviews throughout the day, each 1 hour long with a different engineer. Again technical in nature and (obviously) with more back and forth than over the phone (lots of whiteboard stuff). Also had a chance to look around the Mountain View campus. After that (2 weeks later) was informed that I had done well, and was given the opportunity to chat with a few interested managers about potential projects (over the phone). After discussing with the recruiter I received an offer incl. relocation plan. There was not a lot of room for negotiating here, unfortunately, but from my research my offer was a bit higher than expected for my experience level (so I was happy). A few months later I moved & started my new job! As a Canadian moving to US for work, a TN visa was secured for me by Google-paid lawyers (and they paid extra to get it processed in time). For the first two months I was put up in a furnished corporate apartment which was pretty convenient.

No Question
Jul 26, 2013
---------------
I applied for the position through the Google jobs website, and I was contacted by a recruiter in a few days. Initially the recruiter asked me about things such as if I had previous interviews at Google, and if I have an internal reference, and where I am in the job search process. There were two phone interviews, typical algorithmic questions. In my onsite interview day, I had four/five other interviews, which were very similar to the phone interviews, except that you use a white board.

Finding a pair of elements from two sorted lists for which the sum of the elements is a certain value   4 Answers

Jul 28, 2013
---------------
There's a matrix. Each element in the matirx is a bit (0 or 1). Write a method to reverse this matrix. The matrix is stored in a one dimensional char array. The length of each row is given

How do you improve your solution when handling large amount of data?   Answer Question

May 31, 2014
---------------
Was contacted by recruiter (third party contracted by Google), who arranged a 45-min phone screen. Phone screen was performed by an engineer and was entirely technical in nature. After a week or two was informed that I was moving on to in-person interviews, was flown down to California for a day of interviews. As part of this was "transferred" from the original recruiter to an internal recruiter who would manage the rest of the process. There were five interviews throughout the day, each 1 hour long with a different engineer. Again technical in nature and (obviously) with more back and forth than over the phone (lots of whiteboard stuff). Also had a chance to look around the Mountain View campus. After that (2 weeks later) was informed that I had done well, and was given the opportunity to chat with a few interested managers about potential projects (over the phone). After discussing with the recruiter I received an offer incl. relocation plan. There was not a lot of room for negotiating here, unfortunately, but from my research my offer was a bit higher than expected for my experience level (so I was happy). A few months later I moved & started my new job! As a Canadian moving to US for work, a TN visa was secured for me by Google-paid lawyers (and they paid extra to get it processed in time). For the first two months I was put up in a furnished corporate apartment which was pretty convenient.

One of my interviewers' expertise was in hardware, and we had an oddball interview because of that (I don't have much experience with hardware). To be fair he did ask me at the start if I was comfortable going down that route. By the end we had sketched out a fairly complete (but high-level) diagram of a hardware system. To this day I don't know if he gave me favorable feedback or not!   Answer Question

Jul 25, 2013
---------------
Talked with HR. Didn't really fit the position

Mostly questions on my background.   Answer Question

Aug 1, 2013
---------------
Got an internal referral and then a phone interview. Had several knowledge based questions and one coding question. After that I was invited for an on-site interview. I can't reveal actual questions but basically half of them are design questions while the other half are just about algorithm and coding. The algorithm questions were not very hard but you need to do it extremely fast (10-15 minutes each) and bug-free.

Phone interview question: Given a string pattern of 0s, 1s, and ?s (wildcards), generate all 0-1 strings that match this pattern. e.g. 1?00?101 -&gt; [10000101, 10001101, 11000101, 11001101]. You can generate the strings in any order that suits you.   12 Answers

Aug 12, 2013
---------------
Given a sorted array of n integers that has been rotated an unknown number of times, write code to find an element in the array. Design an algorithm and write code to find the first common ancestor of two nodes in a binary tree. Avoid storing additional nodes in a data structure.

No difficult questions.   Answer Question

Aug 16, 2013
---------------
I had 2 rounds of interviews because in the first round nobody asked me about system design. There were 5 interviewers in the first round, and 3 in the second round. They were very professional. The questions were decent. No brain teasers like "how many balloons fit in the room". Expect lots of whiteboard coding. The interviewers took notes by typing or manual copying. Don't be distracted by that. Some interviewers were happy to brainstorm with me and point me in the right direction. Overall, pretty stressful process but not in a negative way.

Some questions about BST data structures, which I cannot reveal due to the NDA.   Answer Question

Nov 17, 2014
---------------
2 phone call plus 5 on-site interviews. The interviews covered the areas of Computer Science, programming (I choose to program in C++), systems design, but specially the general ability to solve problems. Train your brains with some good old fashioned algorithm exercises before jumping in into these interviews. Google is mostly looking for smart people.

what's your dream? how you gonna make it ?   1 Answer

May 6, 2015
---------------
it was easy for me ! the most imprtant is get prepared before the interview and every thing gonna be good i was happy for my accepting and they were many chalangers like me there ! it was a great experience and i haved fun really !

The most unexpected question was to get the median of an array, which is trivial for sorted arrays (in fact I did the solution for sorted ones). The problem was that the solution had to be done for unsorted ones.   2 Answers

Sep 29, 2013
---------------
I got to the on-location phase at Google in 2011, but didn't make it. In March 2013 they contacted me to interview with them again. This time I got just a phone interview, I did well so they invited me to an on-site interview session. The interviews were OK, some OO design questions, Javascript ones (cool), graph design and traversal (critical route of a Gantt chart). Unfortunately, I was underprepared, so I couldn't fully develop the proposals I made as the problem solutions. I had problem focusing with backtracking algorithms, because I haven't written any in a long time.

No Question
Jun 13, 2013
---------------
They contacted me via LinkedIn and then scheduled for a phone interview before going for an onsite interview.

Algo/design questions   Answer Question

Aug 5, 2013
---------------
Looking for new opportunities, I contacted someone I know at Google to see if they were looking for engineers with my profile. I got contacted a week later by a recruiter who started to figure out the location because of visa issues. Then, I was invited to do a round of interviews at the Mountain View office. From all the interviews I had during this week, the questions were by far the hardest but the interviewers were nice and the scheduling around the interview was good (some interviews before lunch and some after, not all of them in one afternoon). Google took longer than other after the interview to come with an answer and even longer to provide an offer but the recruiters were always giving updates and told me in advance that things would take time.

Not allowed to disclose.   Answer Question

Jun 2, 2013
---------------
Google recruiters were helpful and great resources. The process was clear and provided good resources for all candidates, especially the candidate preparation class. Designing and Coding on whiteboard was great experience (if you had good interviewers). Majority of interviewers I had were good, I enjoyed spent time discuss about design and problem solving. But like other company, there were still interviewer who just spent time reading their papers or played with phone instead of talking to the candidate; if it was like my company, these interviewer most likely to be there just for promotion. You might found an interviewer who try to just want to show you who the boss instead of discuss and learned about you and your skills.

cannot disclose due to interview agreement   Answer Question

Aug 22, 2013
---------------
0) Internal referal of my email address, no resume. 1) Recruiter Contact 2) Submit resume and go over basic questions on interests and experience. Schedule technical phone interview 3) Phone Interview 4) One week later, I inquire over email whether I passed. Receive follow up immediately that they would like to schedule onsite. 5) Transferred to different recruiter. Submit a full application and more details. 6) Onsite, 3 interviews, lunch, 2 more interviews. 7) One week later, receive news that I passed interviews and first hiring committee 8) Submit references 9) Passed more committees and goes to team matching 10) Contact with actual manager, come to mutual agreement 11) Offer A few notes: Take your time, don't be afraid to ask for a later interview date to study up. I went over Cracking the Coding Interview by Gayle, its a good book to review basic concepts. No questions I got actually came out of the book, but its good mental prep for the kind of problems you'll face. Also try top coder to work on coding if you are out of date writing actual code. I feel top coder questions are a bit brute force compared to the questions you'll get. Top coder questions ask you to accomplish a task, but the extent of what you'll end up using is arrays and strings. You won't get good coverage of things like trees, linked lists, etcs. Don't assume you'll need to get everything right during interviews. I didn't for sure and one interviewer had a distinctly negative attitude (whether this was intended or he actually flunked me I don't know), but I still ended up doing well enough to pass. Also, don't worry about the interviewers typing or writing during the interview. Apparently, they need to take all of your code verbatim to give to the hiring committee, so however much you write, they need to write. Stay calm and talk through your answers. Don't assume you did poorly or well, its too hard to guess and treat each interviewer individually. Overall a long process, but a fair one. In engineering its important to keep standards high and consistent.

Bunch of technical questions, some problem solving but basic, some knowledge related, some system design. All are fair, no riddle or brain teaser questions. Standard programming interview.   Answer Question

Jun 23, 2014
---------------
I had an intern at Google, so they took another two interviews at the end to decide for full time position. They also took 3 references from my mentors. The interviews were typical of a company sized as Google. They included algorithmic and system design questions. After two months waiting time I was hired.

The questions focus on finding the right data structures to make solving the problems easy and elegant.   Answer Question

Jul 19, 2013
---------------
The interview process at Google is clearly defined by the recruiter you are working with. I applied via the website following the instructions they have listed and received an email from a recruiter within 24 hours. The recruiter will give you technical resources to review for the interview questions. My first attempt I went through all rounds but did not get extend an offer. I spent most of my effort preparing by searching the web for questions people were asked in the past and reviewing basic concepts. Apparently I did well enough for them to call me a year later and ask me to interview again. This time i prepared by reading the recommend Algorithm Design Manual and doing as many practice questions as possible on a white board. I used the practice questions from Cracking the Coding Interview and Programming Interviews Exposed. My advice would be to postpone the in person interviews to give yourself plenty of time to prepare. Your gut reaction is to do it ASAP, but trust me you need the extra time to go over all the material. I gave myself two weeks to prepare and it worked.

I will not break the agreement that I made with Google.   Answer Question

May 28, 2013
---------------
I was contacted by a recruiter and given a 2 weeks grace period before I interviewed. Fortunately for me, I was going to the LA area so they were nice enough to allow me to interview in person, but still with 2 pre-screens and then the next level. I am going to adhere to the agreement of holding the questions to myself but this is what I took away from it: Know your data structures. Do not only know them and how to use them, know how to think in depth about speed, best choices and why for any situation. Software Engineering is a big field like automobiles. To build a car to make sure that it has the best fuel efficiency, top speed and can handle all maximum conditions is totally different from fixing bugs, adding features and building components. If your professional experience is basically the latter, I recommend taking on personal projects such as an app where data structures matter. It really makes a difference. Otherwise, the interview was a great learning experience and I wouldn't trade it.

They ask lots and lots of behavioral questions so it's worth preparing on those. It's standard stuff like strengths and weaknesses, interests, challenges, favorite technologies, how you'd redesign Google products, challenges Google is facing, etc.   Answer Question

May 9, 2013
---------------
I applied through a friend and was contacted by HR almost immediately. They scheduled me for on-site interviews at the Mountain View office without a technical phone screen. I arrived early at Google's West Campus and found parking easily. It took a while to find a non-employee entrance to the building I was supposed to go to but I found it and signed in on a computer. The HR person then met me and took me to a conference room where I had two technical interviews, took a lunch break with an engineer who was not interviewing me, and had three additional technical interviews. I can't discuss the specific questions but they were rather easy except one which was moderate. Four involved programming on the whiteboard and the last one covered system design. All of the interviewers were courteous and polite but two of the interviewers and the guy I had lunch with were especially warm and friendly. The questions already posted on Glassdoor under Google are a bit harder than the questions I was asked but they are good preparation. I got one question which was listed here so I admitted that I knew it and gave the answer right away. I didn't get a follow-up question so that one was probably a free pass. Most people asked questions in three phases. The first part is trivial. The second part is moderate and the third part is moderate or hard depending on your familiarity with the subject area (dynamic programming, recursion, hashtables, etc.) I don't know whether I'll get an offer or not yet but since that's not an option on this form, I'll say that I did and accepted it.

find the maximum sum of a submatrix.   1 Answer

Jun 1, 2013
---------------
Two phone screen interviews. Focused on popular computer science and programming questions (find median of rotated sorted array).

Signed an NDA to not discuss the interview questions. Be prepared by reviewing algorithms and data structures.   Answer Question

May 10, 2013
---------------
Although the recruiter contacted me quickly after my referrer posted my interview, she was unprofessional in that she failed to make phone calls as scheduled. This resulted in long waiting times and uncertainty about the situation. There was a phone screen and 4.5 hour long in-person interview.

No Question
May 21, 2013
---------------
contacted me 2 days after filling out the online application

nothing unexpected   Answer Question

May 6, 2013
---------------
I was contacted by Google, and a phone interview was setup. I was then contacted by an interviewer that was very soft spoken and had a very thick accent. I couldn't understand anything he was saying. I spent the majority of the first 3 questions trying to determine what he was saying and then we were out of time.

I couldn't understand what he was saying which was the difficulty itself.   1 Answer

Oct 8, 2014
---------------
A recruiter first makes a call and ask about your background and your interest, and then will send you an email indicating what kind of questions will be included in technical interviews. I had two on-site interviews: first by 3 interviewers with half an hour each; second by 4 interviewers, also with half an hour each.

The most difficult question is about cache/memory allocations when dealing with large scale data.   Answer Question

Sep 30, 2014
---------------
Quick phone call and interview. It seems like they were very much by the numbers, and not really that worried about individual candidates. I'm sure they have a lot of people applying to go through, but overall it just seemed like they were rushing through the call so they could start the next one, not really considering me. It felt like a waste of time for the interviewer and the interviewee.

Compress a list of two letter country codes for transmission across the internet.   1 Answer

May 5, 2013
---------------
Two phone interviews followed by an on-site

a runlength decoder, call a function iterate and write this function.   Answer Question

Apr 25, 2013
---------------
No background questions, only the code question. The first one is a runlength decoder, call a function iterate and write this function. The interviewer is not as patient as I think. The second one is a binary search(quite easy) The third one is also a string, not very difficult. I spend a lot of time on the first one, to understand the how to decode and did not communicate with the interviewer well.

Given a grid of points, give an algorithm to minimize the distance between two points.   2 Answers

Apr 24, 2013
---------------
I was contacted by one of their recruiters through LinkedIn.I went through an initial phone screening which was mostly behavioral questions regarding goals and background. I got to skip the phone interview and was set up with a onsite interview which consisted of four interviews.

The first phone interview was just a series of high level questions. Here are a couple: 1) Why are calls to virtual functions slower 2) How would you find the maximum occurrence of a word in a huge file (no coding - just high level explanation). 3) What is the factory pattern. Things like that The second phone interview was purely coding 1 big long, but easy problem. The problem was this: Write code to verify a Sudoku board.   1 Answer First Person: Simply high level questions about how to achieve certain things. For example: 1) How would you write a pancake sort routine 2) You have a network of friends (linked in friends, facebook friends, etc). How would you keep track of all the people you are connected to. 3) What is the run time of the A* search (only because I mentioned it somewhere along the line). Second person: 1) Write code to find duplicates in a linked list 2) How would you synchronize a linked list across multiple computers. If nodes are added/removed to a linked list on one computer, all others must reflect this change. Concurrancy must be accounted for   1 Answer Third person: Given a 2-d array, write code to print it out in a snake pattern. For example, if the array is this: 1, 2, 3 4, 5, 6 7, 8, 9 the routine prints this: 1,2,3,6,9,8,7,4,5 The array is an NxN array. The final question was just how to write a connection pool (i.e, a class that returns connections to the user, and if the user is done, returns them back to the pool)   4 Answers Given a set top box: a, b, c, d, e, f, g, h, i, j, k, l, m, n, o p, q, r, s, t u, v, w, x, y z Write code to give the character sequence given a word, For example, if the word is "CON", the function will print this: Right//now we're at B Right//now we're at C OK//to select C Down DOwn Right Right OK//to select O Left//now at N OK//to select N note: Be careful when you're at Z. if you go to the right, you will get stuck. Afterwards, the interviewer adds a space to the right of 'Z' to test the code.   2 Answers Write a routine that does secret santa in O(N) time.   4 Answers

Feb 28, 2013
---------------
I contacted a recruiter, and asked about applying.

After I completed the coding question, we had plenty of time and I am asked a bunch of floating point numbers related questions. 1. Given an array of floats. you have a sum function that takes the float array as input, but it returns a different result every time you change the order of the float numbers in the array, why? 2. How does the floating point numbers are represented in binary? 3. How to add two floating point numbers in binary? The answers to these questions lie in the The IEEE Standard for Floating-Point Arithmetic (IEEE 754) and you can find sources online. I got really frustrated with these serious of questions, because they have nothing to the with the coding interview. After struggling finding answers, I finally ran out of time. I was so relieved though that the interview was over, because it really felt like a torture in the end with the interviewer beating a dead horse.   1 Answer

May 28, 2013
---------------
I've applied to the job, using Goggle's career website by sending my resume. I got a call from the recruiter shortly after my application. The communication of the recruiter was good and prompt. We scheduled a phone interview and it took them 3-4 days to get back to me with the result. Unfortunately, I couldn't pass the phone screen. I am first asked a programming question: Design and implement a class, which returns a random string value from a set with an arbitrary probability distribution given by an array of probabilities. Using an existing random number generator with a uniform distribution(e.g., Random.nextFloat()), you return the string for the random float value based on the strings probability distribution. This sounds hard because of the wording, but it was easy to implement.

1. manage the import headers 2. sort an array based on the distance to certain origin   1 Answer

Apr 4, 2013
---------------
2 round phone interview. Nice recruiter and engineer.

No Question
May 28, 2013
---------------
I've applied to the job, using Goggle's career website by sending my resume. I got a call from the recruiter shortly after my application. The communication of the recruiter was good and prompt. We scheduled a phone interview and it took them 3-4 days to get back to me with the result. Unfortunately, I couldn't pass the phone screen. I am first asked a programming question: Design and implement a class, which returns a random string value from a set with an arbitrary probability distribution given by an array of probabilities. Using an existing random number generator with a uniform distribution(e.g., Random.nextFloat()), you return the string for the random float value based on the strings probability distribution. This sounds hard because of the wording, but it was easy to implement.

After I completed the coding question, we had plenty of time and I am asked a bunch of floating point numbers related questions. 1. Given an array of floats. you have a sum function that takes the float array as input, but it returns a different result every time you change the order of the float numbers in the array, why? 2. How does the floating point numbers are represented in binary? 3. How to add two floating point numbers in binary? The answers to these questions lie in the The IEEE Standard for Floating-Point Arithmetic (IEEE 754) and you can find sources online. I got really frustrated with these serious of questions, because they have nothing to the with the coding interview. After struggling finding answers, I finally ran out of time. I was so relieved though that the interview was over, because it really felt like a torture in the end with the interviewer beating a dead horse.   1 Answer

Apr 4, 2013
---------------
2 round phone interview. Nice recruiter and engineer.

1. manage the import headers 2. sort an array based on the distance to certain origin   1 Answer

May 14, 2013
---------------
Interned at Google the summer before. Loved the place. The team seemed to like me. Am graduating. Well, let's do interviews! I contacted my intern recruiter asking for a full-time job opportunity, and s/he quickly referred me to the recruiter responsible for that. Since I was a former intern my phone screen was waived (had two 45-minute screens when applying for internship), and my former intern host was asked to provide a feedback. I was asked to do a job talk (as a PhD) followed by 4 rounds of interviews, 2 research and 2 engineering. The job talk was 45-minutes followed by 15 minute questions. I was basically talking about what I did during the graduate school years, so it was quite pleasant and I was excited to see people interested in my work. After that it was a casual lunch with my intern host, so I devoted every minute enjoying the food. The two research interviews were conducted by people familiar with the field, and had challenging questions on the overall understanding. I found it very exciting as both of us would get involved into discussion about the state-of-the-art. A little coding and math details were asked, but mainly about research ideas. The two coding interviews were very standard - I did not get those very difficult questions like "implement sudoku in 30 mins" that someone allegedly encountered. The interviewer was constantly copying my whiteboard writings down, which created a little down time. I asked the interviewer and s/he said it was recently required and no worries. I guess if this could be disclosed by the recruiter earlier it would be better. After the interviews the recruiter followed up promptly, with accurate estimates of when I would get updates. The hiring committee approved the application in a week, followed by the final offer a few days later. Overall it is a nice experience and Google apparently provides great opportunities.

Signed NDA so no exact questions, but leetcode would help a lot preparing things.   1 Answer

Apr 3, 2013
---------------
first phone interview

only one question was asked: how to find the pivot element in a rotated array of integers. how your thought.   2 Answers

Apr 4, 2013
---------------
Interview Process is smooth.

There is no relation between the job position and the questions asked. They go through algorithams and datastructures.   Answer Question

Apr 26, 2013
---------------
Got two emails from a Google recruiter based on academic institutions I had listed in my Google+ profiles. I gave the recruiter a call and he called me back the same day. We had a 20 minute conversation about my current experience and about what I was looking for in a future job. He then said he would like to set up an interview in the next couple of weeks. He also requested I send him a copy of my resume. 8 days later I got an email from an interview coordinator. The interview was setup for 6 days from when this interview coordinator contacted me. The interview was to be conducted over the phone and use a Google doc. I sent an email back to the interview coordinator asking if I could setup a Google hangout interview instead, since I don't have a headset that attaches to my phone, but I do have a webcam and headset that attach to my computer. (I watched an interview preparation video on the Google jobs page that suggested that I have a hangout. I also noticed the interviewer had not joined the hangout. I then got a call from the interviewer. He said that he hadn't ever used hangout before in an interview and so we should just do the interview over the phone, as that was his preference. I asked him to give me a minute to try to get the audio worked out on my end as his voice was muffled to the point I could barely understand him. Nothing I did fixed this, so I asked him if he was on speaker, he said "yes". I asked him if he could go off of speaker because I couldn't hear him. He did and then I could hear him perfectly, but both of us had to hold our phones, which was quite uncomfortable. He continued by saying that he just had one question for me, and that it would probably take me the duration of the interview to complete. He pasted a java function into the Google doc (as I am most familiar with java). He explained briefly what the function was supposed to do, but said there were errors in the code and that it didn't currently accomplish the goal and that he wanted me to identify and fix the errors. I won't specify what the code did, but I will specify that it dealt with a domain I was only vaguely familiar with. I started walking through the code with the interviewer to understand the flow of data through the function. The code was quite simple, and with some help from the interviewer identified the first issue. The issue was an incorrect mathematical function. For example the line of code was supposed to produce f(x) = y, but it was not producing y. The function was not difficult, but I couldn't figure out what the mathematical manipulation of variables should be to produce the desired outcome. The interviewer then went on to say that we had only 15 minutes left in the interview, and that we should move onto to see if we can find more issues. So we stepped through some more code assuming the first issue was working correctly. Then I found the next issue, it was exactly like the previous issue. This time the function was a little simpler, but still not something you could solve in less than 5 minutes. I tried a few different things, talking the interviewer through exactly what I was thinking. Then the interviewer said that our time was up, but that he would give me an extra five minutes to solve the current function, as I was getting pretty close. In the five minutes, I solved that function. He then asked if I had any questions about Google that would be appropriate for an engineer that it was likely the recruiter couldn't answer. I asked two questions and then we ended the call.

Come up with a mathematical function that produces f(x) = y for multiple functions found in a given chunk of code for some random domain.   Answer Question

Apr 7, 2013
---------------
The interview process that these guys use could be called "Giggle". They run you through stock Computer Science questions and have you do some mock algorithms on the board and ask you over and over again if it can be made faster. They aren't interested in your technical experience or what kinds of results you have demonstrated in the past. As long as you can tell them the difference between O(n) and O(1), perform their algorithm du-jour of the day, and look the part then you are in. If you are 25 years old and believe in going to work in something other than a hoodie then they may feel that you won't "fit in" with them.

No off the wall questions like "How many gas stations are there in New York". It was all standard stock Computer Science stuff.   Answer Question

Jul 30, 2013
---------------
Applied for a Softare Engineer position at Google website, and then got contacted by a recruiter a few days later to set up a technical phone screen. After that had 5 onsite interviews at Google's Mountain View office. Intervies were not that difficult, unlike companies like Amazon, where the focus is more on algorithms and data structures, more focus was on system design.

How to design a recommender system   Answer Question

Apr 4, 2013
---------------
Was called on the phone for an interview with someone who was not even close to my background. I have a background in satellite control systems, and the interviewer wanted to discuss network protocols.

something about bit manipulation   Answer Question

Mar 25, 2013
---------------
All the process is very professional. I got reference by a friend at Google. Got an email from the recruiter from Google the next day I were refered by my friend. Then answered some questions regarding my background in the email, like GPA, working location preference etc. Then set up a first-round phone interview. Picked up a day which was good for me.

Pattern design question in terms of consumer, designer and event using interface etc.   Answer Question

Mar 20, 2013
---------------
On-campus interviews. two with each 45 min

How to make match regular expressions "*" means zero or infinite number of every single character and "?" mean one of character from a-z   Answer Question

Mar 27, 2013
---------------
Pretty slow process, 2 interviews campus recruiting, which were pretty standard. 1 technical question per interviewer. Then 1 phone interview, basically another technical question. Currently got into final round, there's 1 quick conversation, regarding what kind of projects I want to do. Still awaiting for host interviews, which I have heard is the most tedious waiting process, but they gave me a timeline for when they will get back to me, which is improved from previous years.

Cannot say since I signed non disclosure agreement.   Answer Question

Mar 18, 2013
---------------
A friend referred me, which began the interview process -- initial casual conversation, technical phone interview, then on-site interviews. There were 2 recruiters for the duration of the process with the switch-off happening between the technical phone interview and on-site interviews. I really enjoyed the fact that I had these friendly recruiters as my point of contact because it made the interview process as smooth as possible and kept anxiety to a minimum. The on-site interviewers (other software engineers) were friendly for the most part, and I left with a good impression of Google.

I didn't expect there to be a question about databases though it was listed as one of the potential topics I would be interviewed on. It was naive of me to think that they'd tailor questions to only what I might've learned (I had minimal computer science education with most of my experience from work).   1 Answer

Mar 13, 2013
---------------
Got the interview with a reference from on of the googled. Had two 45 minuets phone interview.

One is mostly about sorting and searching, the other one is about string matching.   Answer Question

Mar 11, 2013
---------------
There were 5 technical interviews each lasts 45 minutes. The problems are very algorithm centered: i was asked of two dynamic programming problems, which rarely happened at other company interview. Yet all the problems are fair game, and none of them require you to know a certain "trick" in order to solve. Two weeks later the recruiter reached out to me with the final decision from hiring committee: no offer. I was not surprised since I botched the first two interviews. Overall the experience was positive.

A system design problem that has emphasis on throughput and integrity.   Answer Question

Mar 4, 2013
---------------
I interviewed in Cambridge having recently finished a PhD. Communication was effective, though sporadic — overall the process took ~4 months, though holidays and my own schedule got in the way somewhat. I had two days of interviewing, with 2 technical interviews each day and one thesis discussion. My overall impression was very positive: the interviewers were interested to see how I think, and encouraging / supportive when I hesitated or wasn't sure of how to proceed. Half of the interviewers had more of a "professional" appearance and half had more of a "hacker" appearance. Questions ranged from basic "write this recursive function" to more open-ended "start designing this type of system, even though obviously you won't finish in 45 minuostly about sorting and searching, the other one is about string matching.   Answer Question

Mar 11, 2013
---------------
There were 5 technical interviews each lasts 45 minutes. The problems are very algorithm centered: i was asked of two dynamic programming problems, which rarely happened at other company interview. Yet all the problems are fair game, and none of them require you to know a certain "trick" in order to solve. Two weeks later the recruiter reached out to me with the final decision from hiring committee: no offer. I was not surprised since I botched the first two interviews. Overall the experience was positive.

A system design problem that has emphasis on throughput and integrity.   Answer Question

Mar 4, 2013
---------------
I interviewed in Cambridge having recently finished a PhD. Communication was effective, though sporadic — overall the process took ~4 months, though holidays and my own schedule got in the way somewhat. I had two days of interviewing, with 2 technical interviews each day and one thesis discussion. My overall impression was very positive: the interviewers were interested to see how I think, and encouraging / supportive when I hesitated or wasn't sure of how to proceed. Half of the interviewers had more of a "professional" appearance and half had more of a "hacker" appearance. Questions ranged from basic "write this recursive function" to more open-ended "start designing this type of system, even though obviously you won't finish in 45 minutes." Nobody was super picky about code style or being a Java know-it-all, but emphasis was placed on being able to write clean, clear, maintainable code.

An open-ended question about designing an interesting 2D puzzle. There was a requirement of "interestingness," which was left open to the interviewees interpretation.   Answer Question

Jun 18, 2013
---------------
The interview process was relatively straightforward; I went with an internal referral, and got past the first stage vet interview. The interview consisted of two conversations with different engineers; one was a younger guy, and one was with a guy who had been at Google for some time. The questions were basic algorithms questions -- If you read "cracking the coding interview", you will be prepared. They make you sign an NDA regarding the questions, so I'll respect that

I signed an NDA, and will respect that. Prepare by reading cracking the coding interview   Answer Question

Jan 21, 2014
---------------
Interviewing for Google, it turns out, is far easier than public perception would lead you to believe. Study your data structures and algorithms and it will be a breeze. Also practice whiteboard coding before hand to get used to working without your IDE of choice. You'll make mistakes, and that's okay, but if you practice beforehand you'll get through the process far more comfortably and thus will whiteboard better code during the interview. If over the phone, expect a Google Docs session. If in person, expect an actual whiteboard.

My interviewer asked me a question which involved using a binary tree to solve an optimization problem, which I was very prepared for. What through me off guard was how the tree was being used for the problem. Expect to see familiar things presented to you in potentially a new light.   Answer Question

Feb 25, 2013
---------------
Meeting awesome interviews! Don't be afraid to ask clarifying question or hints for your problem. You never know what you may find!

Design a Sudoku game.   Answer Question

Oct 12, 2014
---------------
A recruiter reached out to me by e-mail. The phone screen lets me implement an algorithm to sort a list into the form s1<s2>s3... I gave an nlogn solution (which is not optimal) but then I passed this round and got an onsite interview. I don't quite remember all of the questions. One of them involves walking diagonally on a chessboard... certainly it needs more intelligence than just going over the Cracking the Code Interview book. And I have only went through a few chapters of the CTCI... One thing that disappointed me is that the recruiter did not gave me interview feedback. I know most other Google interviewers have got it, but I pinged my HR twice and did not get a response after she left me a voicemail in my phone and said that I was rejected. Anyways this is the first ever onsite interview I have had, and it's with Google. I'm already thrilled to get pass the phone and be onsite. Also, the lunch is good. So I am giving it a positive review.

Giving you a starting position on a chessboard. Giving you an end position. If you are only allowed to walk diagonally, how many steps do you need to take to get to the end position?   3 Answers

Aug 8, 2015
---------------
It was first a resume submit, then a phone call with recruiter, then phone screen. They were fast at responding. But I did not get it. On the phone the interviewer asked me to design a web crawler. He was not very helpful. At the end he wanted me to past it into an ide and compile it to see if it worked. I was writing psuedocode.

Design a web crawler   Answer Question

Sep 15, 2015
---------------
Phone call with fairly standard computer science questions. Followed up with a day on-site. All of the interviewers were very googly, and I had a pleasant enough time throughout the process. After spending the day on-site, I got an email and then a call a few weeks later with the outcome. Overall, a pleasant experience, but I wouldn't want to do it again.

Is now still a good time to talk?   1 Answer

Mar 7, 2013
---------------
The process was actually pretty good. First there was a phone interview to screen me and the person asked a few puzzles and when I solved them I was setup for in person interview. In person interview was ok.

how to design a web browser   Answer Question

May 15, 2013
---------------
Applied on google website, 1 week later got an email from HR, and scheduled a phone interview in the following week. The interviewer picked a place at their cafe, and a lot of noise out there. He apologized but all the loud noise around him stopped me several times and I don't feel he really care. Asked him to mute. Of course, it was not good.

1. Count the number of positive integers less than N that does not contains digit 4. 2. Design a data structure that can do the followings in O(1) time: (1) insert (2) remove (3) getRandom   13 Answers

Aug 5, 2013
---------------
The head-hunter at Google found me on LinkedIn and contacted me. He scheduled a non-technical call to me first asking me about what kind of job I want to work with. Then he quickly contacted another technical recruiter to schedule an 45 minute phone interview one week after. The questions are classical and can be found on Glassdoor. However, I was informed rejection after another week.

Data structure algorithm - Implement a data structure with constraints on insert/remove and a magic method.   Answer Question

Apr 23, 2013
---------------
Very quick and easy for me.

Can't say because of NDA   Answer Question

Feb 18, 2013
---------------
Phone interview was not challenging. On site interview is challenging in that they expect your code to be very clean and for you to answer quickly. If you share your thought process in a clear, concise manner and think quickly, you should do fine. Their recruiters are pretty unresponsive. If you complete the interview and don't get frequent follow ups, expect to not get hired.

Given a set of 2D coordinates for the 4 corners of each building in a city skyline, find the outline of all the buildings. Buildings may or may not overlap.   Answer Question

Feb 9, 2013
---------------
Contacted by recruiter who set up phone screen. The phone screen interviewer was pleasant. The recruiter followed up promptly to schedule a full day of on-site interviews. The on-site interviews were focused 100% on technical and coding problems. There was little discussion of my background. One of the interviewers was less pleasant to talk with (maybe was having a bad day) however overall it was a positive experience.

too many unix kernel questions   Answer Question

Feb 13, 2013
--------- and string manipulation questions. The interview was language agnostic. Then had a phone call with someone in Mountain View. I can't get more specific because of NDA's but it was all around pleasant and reasonable, but challenging.

Java: What's the return of sizeOf for an empty class?   2 Answers

Mar 13, 2013
---------------
No phone interview but onsite interview with small Google office near my university. No NDA signed.

1) Semaphore and multi threading O.S   Answer Question 2) OOP design class to create timer object   Answer Question 3) largest number that an int variable can fit given a memory of certain size   1 Answer 4) Sort a linkedlist   1 Answer

Apr 8, 2013
---------------
Two phone interviews. 1. Shortest path for a directed graph. Dijsktra and SPFA. 2. Arbitrary precision addition, subtract, multiplication and division.

I can hardly remember how to implement SPFA...   Answer Question

Jul 26, 2013
---------------
They are very, very thorough. Be prepared to pull out your old data-structures and algorithms book for this one. Some of the interviewers are cool, some are hard-lined dicks. But you'll get to interview with 4 different people so it'll run the gamut. Even if you're really good there's no guarantee as they have so much churn.

Writing a binary search tree. Have to remember all the details of things like that which I haven't touched in 10 years. Study, study, study...   Answer Question

Jul 21, 2013
---------------
I applied online, got two in-person interviews on my college campus (both were purely coding interviews), then went into host-selection, where I had three phone interviews with potential hosts who told me about their work and asked a bit about my past projects. I got an offer from one of the hosts, but don't know whether the others would have selected me.

Find max k elements among mostly sorted list.   7 Answers

Jan 22, 2013
---------------
The interviewer called 15 minutes late. He had an accent and a deep voice. I was not able to understand a word, nor the questions! This went on the whole interview and i was feeling very uncomfortable keep telling him "could you please repeat what you said, i didn't hear you well". We both were frustrated! To compensate, he said he will leave the shared document open for 30 minutes after the interview so that I can have more time to solve the problem. I was happy with this remedy, but when i tried to input my solution after 10~15 minutes, I was unable to do that, because the document was blocked!! I informed the recruiters of what happened, and then they gave me another chance interview, which was good and i managed to solve all coding problems well. But then i received an e-mail stating that i didn't make it to the second round based on BOTH INTERVIEWS!! To make sure that was the case, I asked the recruiter to confirm that, and she did! Overall experience was very bad, and such a process (although you guys are doing a great job in getting brainiacs) is doing injustice to many extremely qualified people!

- Print largest sequence in an array - Print indices of numbers of array that is a subset of another array   Answer Question

Jan 30, 2013
---------------
Contacted via Recruiter. Fast tracked past the phone interview to an on-site in NYC. Interview started at 9 AM. A couple of interviews before lunch, an informal interview during lunch, and 2 interviews afterwards. Was done at around 3 PM. Questions focused on actual coding. No real hand-wavy questions or solutions.

Design and code a task scheduler that can take unsynchronized or synchronized tasks.   Answer Question

Dec 23, 2013
---------------
I submitted my resume to Google 3 years ago. Their head hunter sent an email to me this year. We had a chat on the phone and she kept pinging me later to go for an interview test. She suggested some readings for me before the interview and things to study. I asked her what kind of position and task did she have in mind for me. She did not know. I would not know until they hire me and start working.

The head hunter had little idea about software engineer othering than names of a few commonly know tools or languages.   Answer Question

Feb 25, 2013
---------------
Get the phone interview from recruiter. After interview, get onsite. Waiting for the onsite

test a random function   Answer Question

Jan 31, 2013
---------------
Takes about a month. Too many committees have to review your application, especially if you are not applying to the main campus.

all interview questions were very interesting and challenging. I enjoyed the interview questions more than working there!   Answer Question

Feb 13, 2013
---------------
It was not easy

a high expectation of bug free code   Answer Question

Jan 17, 2013
---------------
Phone Screen, after recruiting fair

You are given a grid, with points on the intersections (think a map of streets, people are standing on random corners). Write code to calculate the point on the grid that is the shortest distance from every point on the grid   2 Answers

Jan 15, 2013
---------------
I had previously interviewed with Google during my final year as a Computer Science Engineering undergraduate student. I didn't get an offer, but the recruiter said that it was a close call and that she would follow up with me after two years once I had more experience. I joined Microsoft right out of college instead. Exactly two years later (literally same day/month), a new recruiter followed up and I began the interview process again. A week later, I had a phone screen. After 4 days, the recruiter informed me that I passed and could move on to the on-campus interviews. I was assigned a new recruiter. Two weeks later, I flew out and had a total of 5 interviews at Google's headquarters in Mountain View, CA. Two weeks later, the recruiter informed me that I passed the hiring committee. One week after that, the recruiter informed me that I had passed the final executive review and I was provided offer details. In general, the recruiter was polite and knowledgeable, though late to call me on a few occasions when we had chats scheduled. Also, the recruiter began discussing relocation and job perks, as if I had the job, before an offer had been extended (after approval by the hiring committee, but before executive review). It sounds as though a fair number of candidates are rejected at this stage, and as such I feel this was somewhat inappropriate.

They had me design a few fake websites and redesign the amazon homepage (not sure how this applied.   Answer Question

Feb 9, 2013
---------------
I got a call from the recruiter who asked me about my experience and then set up a phone interview, I ended up doing two phone interviews but at the end they said there wasn't a match.

Pots of gold game: Two players A & B. There are pots of gold arranged in a line, each containing some gold coins (the players can see how many coins are there in each gold pot - perfect information). They get alternating turns in which the player can pick a pot from one of the ends of the line. The winner is the player which has a higher number of coins at the end. The objective is to "maximize" the number of coins collected by A, assuming B also plays optimally. A starts the game.   1 Answer

Apr 16, 2014
---------------
Applied through employee referral. They responded in 24 hours, by which I was quite surprised.

Question was to be implemented in a shared document and I missed out on some edge cases but got the algorithm right for the most part.   Answer Question

Jan 24, 2013
---------------
It was my first phone interview with Google. Called in on time. The interviewer has a strong British accent, but luckily I had no problem communicating with him as a foreigner. Don't remember if he asked anything about my school work. Might be just a little bit in my previous work, followed by a set of technical questions. The interview lasted for 45 mins and everything went well. Just have no idea why I could not continue the application process.

append an element to a double linked list.   1 Answer

Jan 22, 2013
---------------
I recieved an email about scheduling a time to havre how this applied.   Answer Question

Feb 9, 2013
---------------
I got a call from the recruiter who asked me about my experience and then set up a phone interview, I ended up doing two phone interviews but at the end they said there wasn't a match.

Pots of gold game: Two players A & B. There are pots of gold arranged in a line, each containing some gold coins (the players can see how many coins are there in each gold pot - perfect information). They get alternating turns in which the player can pick a pot from one of the ends of the line. The winner is the player which has a higher number of coins at the end. The objective is to "maximize" the number of coins collected by A, assuming B also plays optimally. A starts the game.   1 Answer

Apr 16, 2014
---------------
Applied through employee referral. They responded in 24 hours, by which I was quite surprised.

Question was to be implemented in a shared document and I missed out on some edge cases but got the algorithm right for the most part.   Answer Question

Jan 24, 2013
---------------
It was my first phone interview with Google. Called in on time. The interviewer has a strong British accent, but luckily I had no problem communicating with him as a foreigner. Don't remember if he asked anything about my school work. Might be just a little bit in my previous work, followed by a set of technical questions. The interview lasted for 45 mins and everything went well. Just have no idea why I could not continue the application process.

append an element to a double linked list.   1 Answer

Jan 22, 2013
---------------
I recieved an email about scheduling a time to have a phone interview after I submitted the online application. Then at the scheduled time, technical questions were asked during the most of time. I mean coding was directly done through online synchronized document editor.

No Question
Dec 20, 2012
---------------
I submitted the application online in September, get contacted by the recruiter early October. I had two initial phone interview, I felt I didn't do very well, but to my surprise, the recruiter contacted again for on-site interview. Because of school and exams, the on-site is delayed until December, with 4 interviews at Mountain View, CA and 1 lunch. Two weeks later, the recruiter contacted again for another 2 phone interviews. I got replied the next day that hiring committee was happy and moved forward with an offer. The process was pretty quick on google's side.

Series of programming questions, not very hard but took a while to figure them out.   Answer Question

Jan 22, 2013
---------------
First, I had applied for a summer internship. Had 2 phone interviews and because of mixed feedback they asked for a third one. Didn't get any offer though. I emailed the recruiter after 6 months for a full-time job position. They arranged another phone screen, and then I was invited for a on-site interview. There were 5 interviews, plus a person which I talked to during lunch (not an interview). People were friendly and nice and the questions weren't hard or tricky at all. You only need to get comfortable with a limited time and coding. As I have signed an NDA document, I cannot reveal the questions, but there were 1 bst tree question, 1 recursive functions, 1 design question, 1 open discussion about mutual exclusion on a linked list, and the last interview was about my PhD thesis. All interviews except the third one (which was a very simple bst question went GREAT. However, I didn't get any offers.

None of the question was hard or unexpected. Really.   Answer Question

Nov 26, 2012
---------------
Contacted by a recruiter, first passed a challenging 45 min phone screen, and then had then on site with 5 interviewers. It was about 60% algorithm questions, 30% design questions and 10% math. Not a single question was asked about my previous experience or knowledge. My feeling is that Google designs their interviews for Computer Science grad students, ie advanced courses or knowledge in algorithms will be far more helpful than 15 years of being an expert in your working field to get you a job at Google.

Beware that Google will ask random math questions during interviews. I got hit by a tricky algebra question that I had trouble with. I even got a calculus question. Again, this just shows that they're targeting people from academia who still remember all their advanced math.   Answer Question

Nov 14, 2012
---------------
I concurrently applied for an opening on Google's YouTube team and was put in contact with a recruiter by an old neighbor. The YouTube application turned into a 45 minute phone interview, which turned into 4 onsite interviews of similar length. The interviews focused on problem solving and technical questions (as opposed to free-form questions like "What is your biggest strength/weaknesses?").

The setup is that we are given a series of text files which contain information regarding a code repository's commits. Each file represents a single commit and they are formatted as follows: " Commit #: XXX Author: XXX Reviewer(s): XXX, XXX, ... File: XXX File: XXX ... Date: XX:XX:XX XX/XX/XXXX " The commit number is unique and is generated in synchronous order. There is exactly 1 unique author. There are a variable number of reviewers, delimited by commas; if there are no reviewers, that line is absent from the file. There are a variable number of edited files in the commit, each receiving its own line. The time/date is when the commit was submitted. First design a graphical model for all of the commit data. Then describe how this model is updated when a new commit is generated. Finally, write the code segment called when a new commit is generated which edits a system that has implemented your model of the data - its input is a file name and whatever necessary data structures that are maintained by your system.   Answer Question

Dec 17, 2012
---------------
After submitting my resume, an internal recruiter contacted me and explained the interview process: 5-6 interviewers with individual grade forwarded to a hiring committee in California. I was given links to some interview questions, suggestions to read some books (e.g., "Cracking the Code Interview"), and suggestions to attend a free on-site interview workshop. On subsequent follow ups, the recruiter then offered me a choice of interview dates with suggestions as to when was preferable to get the "best" interviewers. On the day of the interview, I signed into the building and met the recruiter who escorted me to a meeting room with a round table, and a white board. Google has an eclectic office space that is the subject of several published articles. The NY Chelsea office has 7+ floors with themed areas (lego, computers, etc) of open cubicles intermixed with meeting rooms, cafeterias and snack centers, and social/gaming areas. I was offered coffee then chatted with the interviewer. On the board was a the interviewer's phone number, list of 6 interviewer names, extensions, and scheduled time. The interviews were 45 minutes each. 3 interviews in the morning, a break for lunch with a non-interviewer for Q&A, then 3 in the afternoon. The interview process was pleasantly and efficiently conducted. The interviewers were personable. Most were young-ish, with a high degree of self-confidence, and had worked between 2-10 years at Google. Two emphasized their satisfaction of working everyday with smart people. Interviewer experiences discussed were data crunching, parsing, optical recognition, hardware and redundancy, and data synchronization.

Sorting in general with big-O complexity, followed by partition sort (quick sort), followed by finding the k-th largest element without full sorting.   Answer Question

Feb 18, 2013
---------------
I was contacted by a google recuiter via email, which asks whether I am interested in participating tracking (computer vision terminology) projects inside google. When I replied positively, the recuiter asked me for a initial phone screen. We talked briefly over google hangout, and he decided to waive my technical phone interview, and bring me onsite directly.

I was asked by ta disappointment because I won't be working there. With Google the disappointment is more that I feel I wasted a day of my time there. I ended up thinking that I would use a Google offer--had it been forthcoming--more for leverage in negotiating a slightly sweeter deal with my current employer--where I'm actually mostly happy. When I was thinking in those terms even before hearing Google's negative decision, it seems clear that Google failed in motivating me to want to work for them. Upon reflection, my basic take away was that I didn't really interview for a position at Google. Instead, they conducted a very, very generic tech interview which could just as easily have been an interview for any other tech company, be it another large company or a startup. Absolutely zero information was revealed that would allow me to determine whether this might have been a suitable match for me. Google seems to be counting on their name and reputation to attract good candidates and they seem to feel they don't have to really put anything into the process themselves. It's hard to feel excited about working for a company when their interview process is just a generic imitation of the interview process at many, many other tech companies I've interviewed with in my career. Speaking only for myself, Google's name and reputation will probably always be enough to get me to invest a big chunk of a day with an interview. But Google seems to expect more than that--they seem to expect a significant investment of time in preparing for the interview as well. I'll admit I probably didn't prepare as hard as I might have for this interview and that may have been a factor in the outcome. However, as an experienced professional with limited time, I need a reason to believe that the investment of time in preparation is worthwhile. Google, unfortunately, gave me no reason to be enthusiastic about the process so that I'd put the time in. Again--at least in my case--it will take more than just relying on their good name to get me excited about working for them.

Can't due to NDA signed.   1 Answer

Dec 28, 2012
---------------
Had 2 phone interviews, questions were challenging. They were undecided as to whether or not to call me on-site so I had to take a 3rd phone interview which went well. At the on-site interviews, there were 4 interviewers, very friendly and helpful with guiding me towards a solution. Also with two of them I had an open discussion about variations of the given system-design/ tech problem expansion

Design the Google search suggestion system. I proposed many solutions so as to show that I can approach the problem from different angles.   Answer Question

Feb 18, 2013
---------------
Very smooth. One phone screen and they flew me in for a full onsite. Usually they have five interviews. I had four because one interviewer had to leave early due to external circumstances.

1. Given a preorder traversal, create a binary search tree in optimized time 2. Implement hasNext and next for a list of lists 3. Given a circle with N defined points and a point M outside the circle, find the point that is closest to M among the set of N. O(LogN) 4. Given two sets of intervals, return a combined set 5. Threading related questions   4 Answers

Feb 12, 2013
---------------
Submitted resume through Google website, and asked a recruiter if they had received it, after which they promptly set up phone interviews with two interviewers in Mountain View. Although I knew I probably should have reviewed my data structures, and maybe rescheduled my interviews since I would be fried after class, I decided to go along with it anyway. First interview involved explaining some simple data structures--failed, because I couldn't remember exactly names and structures. After that, did some problems involving data structures, still, not successful. Second interview involved using Java to demonstrate basic operations using data structures. Although I came up with an obvious solution, and could describe the complexity, I failed to impress. Needless to say, although both interviewers were pretty nice, I could tell with both before getting off the phone that they were not going to recommend me.

Take two sorted arrays, and find the kth largest element between them; shouldn't have been difficult, but I failed to come up with a good answer.   5 Answers

Dec 14, 2012
---------------
Received an email for 2 phone interviews. They were back to back, so it was like a one long phone interview. Did ok in the first one but did not do well in the second one and got rejected.

I was expecting a direct coding question but the second guy asked me bunch of C++ erms and wanted me explain them. They were so detailed questions about the features which you never use while developing in C++.   Answer Question

Jul 14, 2014
---------------
I had my interview in late 2012. The first round was a 45 minutes phone interview. Then I was brought onsite to meet 5 interviewers. The questions consist of whiteboard coding, algorithms and design questions. The interviewers are all nice and professional. Some people care about bug-free coding. Got my offer about one week later.

some algorithm questions can be very hard, due to NDA I won't be able to share.   1 Answer

Nov 10, 2012
---------------
I've got 2 phone interviews in a row by a reference. Then they invite me to do an onsite interview. There are 4 individual technical interviews from 9:45 am to 2:30 pm. Lunch interview doesn't count for reviews.

No tricky questions.   Answer Question

Oct 24, 2012
---------------
Explain what you like and don't like about android. Explain the difference between java and python. Explain when you would use java and when you would use python. Given html tell what it does (explain the http protocol). How do you tell if a link in html is an image. Java random number generator question.

Explain in detail what happens when you click on a link in an html page. and how you determine if the link contains and image.   1 Answer

Sep 24, 2012
---------------
I went through the conversion after my intern, two technical interviews. They were all very polite, and the process was pleasant.

Surprisingly the questions were found on the famous cracking the code interview. Like : find the lowest common ancestors of two nodes in a binary tree. (O(n) time). If each node has a pointer to parent, solve the problem in o(logn) time and o(1) space.   3 Answers

Dec 17, 2013
---------------
A recruiter reached out to me. Had an initial call with the recruiter to gauge my interests and my team preference at Google. Narrowed down to two teams. Had a couple of phone interviews, I guess the first one was on the fence. First phone interview was about API design and algorithm design. Second was for designing and coding an algorithm and verbally describe a game design. Second one went good enough to make me move to the next step. Primary recruiter handed me over to the secondary recruiter. It's clear that the primary recruiters are friendlier and take more time to get to know you better. Secondary recruiter didn't seem very enthusiastic. He setup my interview with with members of the two teams I had narrowed down with the earlier recruiter and referred me to a travel agency to setup the travel for the onsite interview. I was booked for a total of 5 interviews, 3 before lunch and 2 after. Lunch was in Google's cafeteria with another employee separate from the interviewers. Campus has a very nice college feel to it. Interview questions range in difficulty. When they see you are solving questions with ease, they turn it up a notch. I found a very heavy emphasis on graph algorithms in my questions. I was expecting it but not to this level, so better prep for those! esp. graph search algorithms and their variations. Lots of code writing on the whiteboard to the point where you run out of space! Had to design a data structure with certain properties and the interviewer kept asking for new methods. One of the interviewers had a thick accent and it was very hard to understand him. That was the only interview that I felt going bad because of the communication issues. Overall a positive experience. I got to brush up on a lot of things that I had forgotten since college.

Test line-of-sight in a game that accounts for obstacles to determine if the bad guy can see you or not.   1 Answer

Sep 23, 2013
---------------
6 or 7 interviewers in a row, all asked algorithmic questions, school-book style. Nothing about the past experience, all puzzle-like questions (sort, lookup, hash, multi-threading, etc.). The whole process is targeted towards fresh grads, I think. After the day in the interviews I felt that I did pretty good (checked online if my solutions were ok, and they were), so was pretty confident I'd get an offer - but was wrong (and they didn't provide any real feedback why they skipped me).

All expected, but it seemed like they didn't appreciate thinking and getting to the answer, wanted the answer right away.   Answer Question

Aug 15, 2012
---------------
Two Phone Interviews, there are 4 questions in the first interview and only one question in the second interview. Question 1: Count the number of set bits for an 32 bits integer. How to improve the process for the second time use if the memory is unlimited? Question 2: What is the output for the following code? int n = 1; puts(((char*)&n)[0]==1?"Y":"N"); Question 3: What is Encapsulation and Polymorphism? Question 4: Forget. Question 5: If there is an tree structure data, design an algorithm for function next() which returns one data each time and this function will access all the data only once.

What is the output? int n = 1; puts(((char*)&n)[0]==1?"Y":"N");   6 Answers

Aug 26, 2012
---------------
Was interviewed at Mountain view campus. There were 5 interviews, each of 45 min duration. All the interviews were Data structures and algorithms related. Basically, they will give you a real problem and you have to write code on the whiteboard which is as close to working as possible. Most problems are from the real world, and are very much solvable within 15-20 mins (much less than the 45 mins interview limit). Most interviewers were polite and helpful. They are looking for your software skills as well as thinking process. They are meticuluously writing down notes. I did not do so well in 3/5 interviews and expected not to get an offer and did not get the offer. But I was happy with the interview process.

Cannot divulge any questions, and it is not important.   Answer Question

Jul 16, 2012
---------------
There in-house recruiter find me by linkedIn. We connected by email then a phone call. The recruiter is very polite and nice. Let me choose time for the technical phone interview. He is not pushy, and try to explain the whole process and later send me some notes of how to prepare.

Not really any unexpected question. Just some general design question, and need to write sample code through shared google doc.   Answer Question

Dec 8, 2012
---------------
Average interview, interviewer was 25 minutes late and seemed to be doing his work during the interview. Focused only on core Java. Overall, recruiter was friendly and helpful but took a long time to get responses. Took another offer because of the long response time.

Write the Java code for a stack that implements pop(), push(), peek(), offer(), etc and gets the maximum value in constant time.   1 Answer

Sep 4, 2012
---------------
I got contacted by a recruiter several months ago and we set up 2 phone interviews. Everything went fine and shortly after that I was invited for 4 onsite interviews. As usual, they paid for the plane tickets and the hotel, they rented a car and reimbursed the food, fuel and other expenses. It's been almost 1 month after the onsite interview and I'm still waiting for a response from the recruiter.

Phone Interview: There was a problem that required a clever use of Quicksort, you should have a really good understanding of randomized partitioning and BigOh analysis. Onsite Interview: Sort and merge really large chunks of data across several servers. You decide how and where to merge the data.   Answer Question

Mar 21, 2013
---------------
Got a contact from a recruiter through email, after a phone screening I scheduled a phone interview. Meanwhile contacted a friend who did an internal referral. Thanks to his referral my phone interview was canceled and I went onsite for a full day of interviews. First interviewer asked system design questions, the other 5 interviewers asked coding questions, most of them pretty fait and I must admit simple. One of them asked a pretty difficult one that I had a hard time.

A very complicated algo related to points on a plane.   Answer Question

Sep 17, 2012
---------------
I was one of 25 people who qualified to Onsite round of Google Code Jam in New York. I decided to interview with them on the day before the actual competition. There was no phone interview, since getting into Onsite round of GCJ is considerably harder than passing phone interview. There were 4 interview in total - each being 45 minutes long. There was a lunch break after the first two. The third interviewer was about 25 minutes late, so they decided to put him after the fourth one. All that extra time I could explore the floor, they even agreed to arrange me a short show-around. Interview questions seemed rather easy to me - some of the questions seem to have roots in classical programming olympiads problems. They told me in a week, that I did well on the interview, then they sent all my feedback to a recruiter in London, because I wanted to work in Zurich, and not in America. There were several more things they wanted to know before they could make the final decision: grades in university, current salary and so on. Thus, in about one month after the interview they came up with the offer. It's also worth noting that I am still on my last year in university, so I will only start working in about a year.

Nothing seemed really difficult to me and I usually could find some good approach nearly immediately, whiteboard coding took considerably more time than thinking.   Answer Question

Aug 10, 2012
---------------
Contacted by Google recruiter in June, submitted my resume, 45-minute phone interview with one Boulder engineer, then got first on-site interview in mid-July. Four 45 minute 1-1 sessions with their engineers, all programming on whiteboard. Then a week later was called by the recruiter to schedule the second on-site interview for the end of July. This time just two 45 minute sessions, same format. For the first on-site interview they gave me the wrong time so I arrived one hour too early, at least it's better than arriving one hour too late. The recruiter told me over the phone that based on my experience the interviewers will ask me to program in language A, however three out of the six interviewers gave questions in language B. Don't know if they were trying to trick me or just mis-communication on their side; had I known I would have been much better prepared. None of the on-site interviewer mentioned anything on my resume, don't know if any of them looked at it or not. Most programming questions were not too difficult, and did not require real-world working experience. My hand-writing is slow and ugly though, which was a disadvantage when writing code on whiteboard. The Google office in Boulder has nice kitchen and food, however the workspace seems crowded, unergonomic and not too impressive. In the end over a week later I was told they will not give me an offer, no reason, and the recruiter told me this decision was made before the second on-site interview result was in, which sounded strange since it had been over two weeks between the first and second on-site interview. Overall the Google hiring process does not feel very professional.

Nothing unexpected, all about algorithms and data structure.   Answer Question

Aug 29, 2013
---------------
I had two onsite interviews. Both were very standard technical interviews.

1. mutable, non mutable classes in Java 2. declaring constants in Java 3. x^y algorithm and its optimization. 4. second largest number from Binary Tree   7 Answers

Sep 6, 2012
---------------
Applied through craigslist sfbay area. Got a email from HR immediately next day. Scheduled interview the week after email received. Interviewer was knowledgeable. Asked lot of CS question but they where pretty standard. Go rejected in first round itself, was not confident on answers and messed up.

Add a new range with a given list of ranges by combining the new range instead of overlapping. For example: 1-4, 6-7, 10-12; add 9-11 Should return 1-4, 6-7, 9-12   3 Answers

Jul 25, 2012
---------------
Coming from out of town, you will have to go through 2 technical phone screens before you will be invited on site. If you go onsite, remember that only the onsite interviews matter and the results of the phone interviews don't count. They are just meant to be weed out before the onsite.

Algorithm questions, none of them I had heard before. But they were variations of standard interview questions   Answer Question

Aug 30, 2012
---------------
I had a phone interview and an on site interview, which I thought went well. The recruiter said hiring commitee apparently was happy. However it didn't go past the executive review and I didn't have any further communication from recruiter. Beware of higher level committees, they can and may reject the hiring decision. I also wish I had a better recruiter who gives more feedback, at least letting me know where I stand. I had to call my recruiter multiple times to know the status, she stopped answering once she knew I am not in picture. A simple email saying that I am rejected would have stopped me from having false hopes. That's why I am giving a negative rating for the experience. Interviewers were nice and fair, except for one who kept interrupting me through problem solving. I think that was more of his nature rather than antagonism.

Write a program print the outsides nodes in a binary tree.   3 Answers

Feb 13, 2013
---------------
I submitted the application online, and they sent me an email asking my availability for a phone interview. The interviewer asked me to write a program to print the outsides nodes in a binary tree.

No Question
Jul 25, 2012
---------------
Coming from out of town, you will have to go through 2 technical phone screens before you will be invited on site. If you go onsite, remember that only the onsite interviews matter and the results of the phone interviews don't count. They are just meant to be weed out before the onsite.

Add a new range with a given list of ranges by combining the new range instead of overlapping. For example: 1-4, 6-7, 10-12; add 9-11 Should return 1-4, 6-7, 9-12   3 Answers

Aug 30, 2012
---------------
I had a phone interview and an on site interview, which I thought went well. The recruiter said hiring commitee apparently was happy. However it didn't go past the executive review and I didn't have any further communication from recruiter. Beware of higher level committees, they can and may reject the hiring decision. I also wish I had a better recruiter who gives more feedback, at least letting me know where I stand. I had to call my recruiter multiple times to know the status, she stopped answering once she knew I am not in picture. A simple email saying that I am rejected would have stopped me from having false hopes. That's why I am giving a negative rating for the experience. Interviewers were nice and fair, except for one who kept interrupting me through problem solving. I think that was more of his nature rather than antagonism.

Algorithm questions, none of them I had heard before. But they were variations of standard interview questions   Answer Question

Feb 13, 2013
---------------
I submitted the application online, and they sent me an email asking my availability for a phone interview. The interviewer asked me to write a program to print the outsides nodes in a binary tree.

Write a program print the outsides nodes in a binary tree.   3 Answers

Jul 14, 2013
---------------
I applied online and got a call back after 2-3 weeks. They interviewed me over the phone and the following week they brought me into their local office for 3 more interviews. All the questions were fairly easy basic technical question interview except for one question concerning encryption. I know little to nothing about this certain one type of encryption so I just winged the question and thought they'll forgive me for not knowing one specific topic. However, they called me back 2 weeks later and told me that they were no longer going move forward with the process. I was pretty devastated but what can I do.

They made me sign a confidentiality agreement.   Answer Question

Sep 6, 2012
---------------
recruited contacted me via LinkedIn, i had a pre-phone screen and then a phone technical interview. The technical interview mostly involved linked-list algorithms and tree traversal techniques, as expected. I was a little slow in resolving the issues but the interviewer was helpful and friendly.

resolving unusual tree algorithms using recursive logic is the kind of thing you most likely haven't done since college. To interview at Google you absolutely must refresh your mindset for recursion and so forth.   Answer Question

Jun 10, 2012
---------------
Recruiter called me and setup a phone screening for a date of my choice. Very flexible on the date - they definitely want to give you as much time as you want/need to prepare. They make it clear that they are looking for in depth knowledge of algorithms, algorithmic analysis and data structures. Interview consisted me answering a couple of questions over the phone and then writing code in a google document.

Given a graph node, write a code to return a copy of the sub-graph starting with that node.   4 Answers

Jan 27, 2014
---------------
Was emailed by internal recruiter that found me on Linkedin. Setup phone call and discussed my qualifications and the job. recruiter setup technical call.

I was not well prepared for the technical portion of the process. While I am quite capable of writing good code I was not expecting what to me seemed esoteric questions.   Answer Question

Jul 2, 2013
---------------
Having already been a contact of Google recruiter's I was invited to do a 2 hour in-person interview where I'd meet with 2 Engineers for 1 hour each. The first interviewer took me on a 5-7 minute tour of the Seattle campus, which allowed us to chat for a bit and break the ice before getting into the meat of the interview. Then we stepped into a meeting room and had time for him to ask 1 technical-whiteboard-coding question and a couple minutes remaining where I could ask any other questions - the process was the same with the second interviewer.

Basically the interview went really with with the second interviewer, I talked/worked my way through a solution to the complex problem he asked (the question tested my ability to identify precise expectations, clearly define problem scope, and use the most appropriate data structures that whose inherit properties were best suited for the problem). It went less than ideal with the first interviewer because I stumbled a few times while attempting to design a solution to the graph traversal question. Once I wrote a solution that I was pretty happy with, he noticed a flaw and we walked through an example where my solution did not work. I began to explain my mistake and write the code to address it, but we ran out of time before I could design a fully working solution. Bummer.   Answer Question

Jun 18, 2012
---------------
The human resources people are amazing. The communication is really clear and prompt. There is no corporate red tape or template mails or anything. The interviews themselves are well conducted, and one on one. The dress code is informal. The interviewers are really senior people. The questions are well targeted but of reasonable difficulty. Unlike other companies they don't interview or ask questions during lunch! The workplace itself is quite awesome. Small office, nice atmosphere, usual google freebies.

Get the two highest number in a binary search tree   3 Answers Get the kth largest number from two sorted arrays   3 Answers

May 29, 2012
---------------
2 Phone interviews and a day of in person interviews. Know your data structures and how to apply them to different problems. They are not going to ask you: "What is an in order traversal?" but they might ask how best to display a binary search tree (not an actual question but similar).

Depth first search.   Answer Question

Dec 1, 2014
---------------
Two phone interviews followed by one site interview. The first level is just to know whether you know basics of computer science (Data structures and Algorithms). Coding done with google docs.

Design and basic coding questions. Nothing out of the world.   Answer Question

Jul 31, 2012
---------------
Uploaded my resume online, was contacted a few days later to arrange two phone interviews... the interviews went OK but still no offer was made, I needed US visa sponsorship and I guess that was the problem.

Write a Square Root function for a computer without floating point calculations   4 Answers

May 23, 2012
---------------
I only had one phone interview. Then I was invited to the headquarter for onsite interviews. Problems are not hard. Bunch of algorithm and data structure problems and one mathematic problem.

Three coke machines. Each one has two values min & max, which means if you get coke from this machine it will load you a random volume in the range [min, max]. Given a cup size n and minimum soda volume m, show if it's possible to make it from these machines.   2 Answers

Sep 25, 2012
---------------
There are two interviews and each one lasts 45 minutes. There will be 3 to 4 questions depending on the time. First one is about the projects listed in the resume and last one is you ask the employee for whatever you are interested in the company.

There is not any unexpected question since I was looking for just an internship.   Answer Question

May 29, 2012
---------------
A recruiter contacted me. We set up 2 phone interviews, back to back. The first one was ok, but since the interviewer asked some general knowledge questions I stressed out at the end and could not finish coding. But she said I'm close enough. The second one was a bit like a brain teaser, I had to know a bit of bit manipulation. Coding went well and the interviewer was very happy. They postponed the day they were supposed to tell me the results, and at the end I didn't get the on-site interview.

Do you have any questions for me? (at the beginning of the interview)   1 Answer

May 21, 2012
---------------
I have 2 phone interview and one on-site interview

about algorithm   Answer Question

Sep 20, 2012
---------------
I applied online and reached out to a recruiter I had previously been in touch with when I applied for an internship. I had one phone interview and then did three on-site interviews in a day.

N pots, each with some number of gold coins, are arranged in a line. You are playing a game against another player. You take turns picking a pot of gold. You may pick a pot from either end of the line, remove the pot, and keep the gold pieces. The player with the most gold at the end wins. Develop a strategy for playing this game.   5 Answers

Feb 18, 2014
---------------
Got referred by a colleague. Recruiter contacted me and I responded positively. Technical phone interview follows. Then I was called for an onsite. They told me I did really well (and I believe so) but in the end I didn't get an offer. The recruiter kept "searching for a fit with a team" for a month after the interview. In all their communication, the recruiters were very professional and polite.

Given two sorted arrays with N elements each, find the median of their union in O(log n).   1 Answer

May 4, 2012
---------------
kinghts pad L shaped movement, how many possibilities given n digits, recursive firstly 1, store the result, then 2, store, the new matrix got the result from the sum of a line of the previous matrix Iterater of Interater IteraterIteratorToIteratorAdapter lights off on 2 is on, 3 is same other is off multithreading given a list and max using a class to generate to rand (0.. max ) that's not in list update data center file, how?

kinghts pad L shaped movement, how many possibilities given n digits,   1 Answer Iterater of Interater   Answer Question

Jun 1, 2012
---------------
Onsite interview narrowly focused on white board coding, even demanding all the details on boundary situations, and showed little interest in interviewee's past experience and skills. Most interviewers assumed the role of an examiner and were not engaging or interactive. Some were arrogant and did not provide adequate clarification for their questions. The interviewee had no opportunity to learn about the project or get to know interviewers as potential co-workers during the onsite interview. Once the hiring committee decided to move forward based on the interview feedback, the interviewee did have a chance to meet the hiring manager and the team to discuss potential project.

No Question
Mar 1, 2012
---------------
You're not going to find my actual interview questions here, I signed an NDA and do take it seriously. On the other hand there's plenty of these kind of questions on this site and others. If you can work toward a solution on a good percentage of these, you should send in your resume. The recruiting process is quite slow, involving several stages. I was first contacted by a recruiter, we talked for about 15mn and established a profile of my skillset. This is basically "how would you rate yourself at such and such tasks". The recruiter was very nice and really seemed to be trying to understand where I was coming from, and what I could offer to the company. Two weeks later, I had a 45mn phone interview with a software engineer who asked actual coding questions. This was done over a google notebook document, so he could see what I was typing in realtime. I felt that those questions were easier than what I was expecting (we had an extra 15mn at the end, which we used to chat informally about what it's like to work at google) . Several weeks after this, I was invited to interview onsite (mountain view). This was the most grueling stage, five back-to-back 45mn 1-on-1 interviews filled with coding problems of varied difficulty (with a lunch break at one of the restaurants, where the food is free... they'll try to find someone with interests similar to yours to babysit you). Some of the questions were not very hard, and were basically checking that I knew what I said I knew. Some questions were quite hard, and I had to really pause, think (and explain my thought processes), attack the problem as I could, then try to find better ways to solve it. When I got a bit stuck, some interviewers asked pointed questions (which you really have to take as hints), and some others would just let me sweat on my own. Each interview had basically one to three questions/problems, some incrementally more complex, building on the previous one, some completely disconnected from one another. This was very stressful to me, probably more than it should have been. If you can keep a cool head and a smile, you're halfway there, the other half is actually giving good solutions. Now it's not like the difficult questions are VERY difficult, they're just difficult enough that you have to work for it. If you are a pretty good programmer, know your CS basics (expecially complexity analysis) and are able to write code on a whiteboard without getting lost, there's no reason not to make it. The language you actually use didn't seem to matter, although if you chose C++, you should really know STL, if you chose javascript, you should really know your string and array classes, and so on. Be aware that there are many stages of review once you're done interviewing, and that google has an incredibly high rate of false negatives. You may have done well in an area for which you're not being considered, you may have been boxed into a profile which isn't accurate, and so on, so don't jump to conclusions even if you feel you did really well. Some of my friends who I would *definitely* rate as better programmers than I am have failed for no good reason, even after being told by their recruiter that they did a good job, so be aware of that. One advice I'll give: do not embelish your resume, don't say you're an expert at something unless you are, you *will* be probed. If they're interested in you, your references, degrees and previous professionnal experience will be thoroughly checked. Don't be too modest either, I know of someone who didn't pass the first non-technical interview because he rated himself too low on some things. Be honnest, and If you'd honnestly not rate yourself higher than a 6 or 7/10 at something, don't apply for a position that depends on it. Another advice: brush up! Go back to your CS basics and do a good number of problems of the kind you'll find here. A month training on algorithms could definitely make the difference between making it and not. I had to wait for over a month before getting an actual answer. The recruiter was not always keeping me informed about the process but to be fair, there's only so many times one can apologize for the time it's taking. Also, the way potential hires find their ways to an actual team is a bit peculiar. Basically once they know they want you, they still need to find a team that likes your profile, so you may not know until some time which team you may end up with at the end of the process. On the other hand, this gives the recruiter a chance to actively try to find a good fit for you. Total time between being contacted and getting an offer: about 3 months. YMMV. In retrospect I had a pretty good experience with the whole thing. Even if it was frustrating at times, I felt like the recruiter was really working toward getting me hired.

Algorithms, complexity analysis, CS basics, thinking on your feet, whiteboard coding. Know your stuff.   Answer Question

Apr 1, 2013
---------------
For the reading impatient, in a nutshell: I found the interview process (non-US citizen) extremely long, very tedious, and in a sense dehumanizing (in your phone interviews you get your code questions, write the answers and very little else matters). Overall, the whole ordeal was very life draining, and comparing with peers that were going through it at the same time (as I later learned), very focused on a specific type of developer/engineer: without exception very experienced people were rejected. Google can hire whom they please, but if they know the profile of the person they want to hire, why bother contacting people with 10+ years of experience only to reject them all later? It's a waste of time for them and the interviewees even more so. One could arguably say that it is disrespectful as well. For those caring for all the details: I was contacted by a recruiter mid 2012, asking if I was interested in discussing a position. I'm not a US citizen, so I was dumbfounded. Of couse I was interested, but why would they contact me then? (I had sent a resume to Google Brasil years prior, with no response). So a month after I responded I finally heard back, and we agreed because of the project I was in and their timelines to start the process in December. Apparently someone had recommended me, and wanted to remain anonymous. So here we had about 5 months worth of time that I took to practice Portuguese again, brush up my resume with competitions, study, and get Android experience. During that time, I started to learn that certain other people in my country had also been contacted, some with a similar set of skills and experience. So clearly there was a larger, coordinated effort going on, not just an interest in myself, this made sense but it also made me more wary of it. December came and I contacted the recruiter once more, and they requested that we start the process in January. So New Years' studying and January came, and finally got a call. I was expecting a technical interview at once, but got another screening (similar to the one the year before) instead. After some email back and forth, a coding interview was scheduled for mid February. The interview itself was a coding problem of some calculations, and I thought I blew it. To my surprise I was contacted again the next week, and another interview set for the beginning of March. That one started by the engineer unable to call my phone, I had to call him international, and explain how to call me. Some 15 minutes were spent there. So finally I got some web system design and scalability questions, that (with guidance mind you) I think I answered successfully. I felt much better after that interview. But weeks rolled by with no response, I was a nervous wreck, so I wrote back asking what the status was (as April was a deadline for H1B), and eventually I got a response that because of the engineer's feedback the process was over for me. I honestly appreciated getting the response, but obviously was not happy. I was taken aback, but what surprised me even more was that engineers that I consider better than myself, were also getting interviews and also didn't get a lot further. The pattern seemed to be people with plenty of experience (10+ years), multiple team positions, and a history of leadership as well. A pattern hard to ignore. In the end, like I said, the experience was very life draining, I would not enter into it again lightly. Consider a hiring process that takes months and months (unnecessarily, ie. 3 months for 2 coding interviews), that is not a good indicator of the health of the hiring workflow.

Splitting a search query between different machines   1 Answer

Feb 27, 2012
---------------
I submitted my resume and received a response the next day. About 2 weeks later I was invited onsite for an interview. I interviewed with 5 engineers from various parts of the company and had lunch with another engineer. Overall it was a great experience and at the time I remember thinking that regardless of the outcome, I really enjoyed it. In terms of preparation, the usual stuff applies. Read up on your algorithms and data structures (Cormen), practice writing syntactically correct code on a white board under pressure. Also, I found that engaging the interviewers and talking them through my own thought process helped a lot. The interviewers were smart, engaging and fun to talk to which gave me a pretty positive impression of the company overall. I was worried that with Google's growth people might not be as passionate as they were when the company was smaller but that was certainly not the case. About a week after the onsite interview I received an offer.

Select K largest numbers from N   2 Answers

Feb 25, 2013
---------------
Campus Interviews, two of them each 45 minutes each

Write a program to divide two operands with the use of "/" operator.   1 Answer

Aug 14, 2013
---------------
Contacted by a recruiter online and a phone interview was set up in two weeks. The phone interview includes simple technical questions, such as how to convert a number in decimal to binary. There was no behavior questions asked.

Didn't expect the recruiter to ask technical questions because this was the first phone interview conducted by HR.   Answer Question

Mar 28, 2012
---------------
People are nice. Working environment is so so. Cafeteria is crowded. Questions are not particular hard, but need to write on white board quickly.

Implement a linked list in Java   1 Answer

Mar 17, 2012
---------------
Had two phone interviews. The questions were not hard, both can be done by simply array manipulation. I would suggest interviewees to review data structure and algorithms.

Find the balance point in an array. (The index where the sum of the elements to the left it is the same as the sum of the elements to the right of it.)   7 Answers

Aug 18, 2015
---------------
Half day long interview, in the middle of the afternoon. Four interviewers, one at a time. Stayed in the same room the entire time. Drinks were offered, but no food. I was provided local transportation to and from the interview. Only met with engineers, no managers or designers. Window had a nice view to look at while waiting for the next person to show up.

Describe how to build an allocator and the pro&#039;s/con&#039;s of vtables versus dynamic dispatch, and so on. Low-level C, C++ and runtime constructs.   1 Answer

Jan 21, 2012
---------------
This is a more verbose review for those who want to know what the entire process is like. I won't list of exact questions due to NDA which I would like to respect, but will outline areas - see (*). Some quick background on myself: new grad with masters in computer science. Although I did not receive an offer in the end, it was a great experience and Google left me with a very positive impression about them. Albeit, the entire process was overall on the slow side, but my HR contact was very responsive to emails and kept me up-to-date. I applied online on the company website. About a week later, I got an email to schedule two back-to-back phone interviews in < a week. Second one was rescheduled last minute to next week. Both phone interviewers went very smoothly and the interviewers were very polite and easy to speak with. Each were an hour in length, with maybe the first 10-15 minutes of resume questions, background, etc., then it quickly became technical. I coded in a shared Google Doc for both. The first interviewer asked for whatever language (I chose C++), but the second one insisted on Python (which I was happy to oblige, it's actually my favorite to hack in). I had those two on my resume, so I assume they were probing me to see if I was lying. They will not ask you anything not on your resume and conversely, don't lie/exaggerate as if one of the largest tech. companies doesn't encounter that on a daily basis! ***** I haven't seen any of the questions they asked here on Glassdoor, but were similar in complexity. 1st phone interview in C++: was asked to design and code a data structure with specific customization to a queue, big-O analysis, optimization, and short discussions on two other problems (no code due to time constraint). 2nd phone interview: manipulating lists in Python, write some SQL queries (simple selects with joins) for a DB schema he pasted into the doc, also answered some high-level conceptual questions on data structures. Made a small error in one of the SQL queries that I quickly corrected, but pretty much got the rest without help. With that said, couldn't answer the last sub-question in each interview, but they both said it was more of a bonus at that point. Within an hour of the second phone interview, got an email saying they were impressed and decided to move on to onsite interview. This is the part that took a while, almost three weeks just to get it finalized, but it did go smoothly. They put me in a nice hotel for two nights which provided breakfast and a shuttle limo (yes, limo) to/from the Googleplex. The office was very nice, the whole dot-com atmosphere still in full swing. Cubicles looked a bit cramped though compared with other places I've seen. Four people sharing one big cube. I've had larger, private cubicles in past internships at other places. Not a big deal though, I guess. Food was fantastic, better than the crap I regularly eat anyways. My big day lasted four hours consisting of 4 one-on-ones each about 45 minutes and a one hour lunch meeting (not evaluated) with a senior who would answer whatever questions I had and gave me a tour of the campus. All interviewers were very nice and helpful and really do try to push you in the right direction - some more than others, naturally. Perhaps one came off as a bit arrogant at times, but still helpful. Another implicitly told me he wasn't into his duties, but ironically was the most fun to speak with. ***** I guess here's what most people want: Two interviewers asked resume questions for maybe 5 minutes, but other than that everything was purely technical: writing code on a whiteboard. The questions ranged from binary search trees (recursion), caching, string manipulation and some random recursion (I got an easy one). Usually asked to design test cases at end (no code). They were not very difficult, but it was clear that you really had to know them inside-out. Be sure to constantly talk and explain what you are thinking. Much better than long periods of silence which I had a few times. I couldn't solve a corner (admittedly important) case for the BST question, and my design for the specialized caching question was not too impressive but it did work; other than that, I pretty much solved the rest without hints. Any time left-over is given to you to ask them whatever you'd like. Went to hiring committee, but alas, two weeks later got the disappointing email they were not going to extend me an offer. HR contact encouraged me to reapply after a year of industry experience, which, depending on my situation at that time, I will consider. Google has the advantage that if they are not absolutely certain you'd be a stellar engineer, they will pass even if this means false negatives.

Phone: resume, custom queue data structure, list manipulation in Python, SQL, couple other short questions (no code)   Answer Question Onsite: binary search trees, string manipulation, designing a cache, recursion   Answer Question Both: Big-O analysis, optimize, design test cases   Answer Question

Dec 21, 2013
---------------
Through referral

A soda water machine,press button A can generate 300-310ml, button B can generate 400-420ml and button C can generate 500-515ml, then given a number range [min, max], tell if all the numers of water in the range can be generated.   1 Answer

Jan 21, 2012
---------------
This is a more verbose review for those who want to know what the entire process is like. I won't list of exact questions due to NDA which I would like to respect, but will outline areas - see (*). Some quick background on myself: new grad with masters in computer science. Although I did not receive an offer in the end, it was a great experience and Google left me with a very positive impression about them. Albeit, the entire process was overall on the slow side, but my HR contact was very responsive to emails and kept me up-to-date. I applied online on the company website. About a week later, I got an email to schedule two back-to-back phone interviews in < a week. Second one was rescheduled last minute to next week. Both phone interviewers went very smoothly and the interviewers were very polite and easy to speak with. Each were an hour in length, with maybe the first 10-15 minutes of resume questions, background, etc., then it quickly became technical. I coded in a shared Google Doc for both. The first interviewer asked for whatever language (I chose C++), but the second one insisted on Python (which I was happy to oblige, it's actually my favorite to hack in). I had those two on my resume, so I assume they were probing me to see if I was lying. They will not ask you anything not on your resume and conversely, don't lie/exaggerate as if one of the largest tech. companies doesn't encounter that on a daily basis! ***** I haven't seen any of the questions they asked here on Glassdoor, but were similar in complexity. 1st phone interview in C++: was asked to design and code a data structure with specific customization to a queue, big-O analysis, optimization, and short discussions on two other problems (no code due to time constraint). 2nd phone interview: manipulating lists in Python, write some SQL queries (simple selects with joins) for a DB schema he pasted into the doc, also answered some high-level conceptual questions on data structures. Made a small error in one of the SQL queries that I quickly corrected, but pretty much got the rest without help. With that said, couldn't answer the last sub-question in each interview, but they both said it was more of a bonus at that point. Within an hour of the second phone interview, got an email saying they were impressed and decided to move on to onsite interview. This is the part that took a while, almost three weeks just to get it finalized, but it did go smoothly. They put me in a nice hotel for two nights which provided breakfast and a shuttle limo (yes, limo) to/from the Googleplex. The office was very nice, the whole dot-com atmosphere still in full swing. Cubicles looked a bit cramped though compared with other places I've seen. Four people sharing one big cube. I've hack to back phone interviews on the same day. I used glassdoor, Steve Yegge's blogs, and couple of other resources for the preparation along with going through my college data structure course material again. Before my first interview, I was quite nervous (which didn't help later on). The interviewer started with some questions about my prior experience. Then he gave me a programming question: Find the maximum consecutive sum of integers in an array. If I have an array A = [-1,1,2,3,4,5,0], the sum is 15 but for A=[-1,2,4,-5,10,-1] the sum is 16. I asked the interviewer if I could try out few examples on paper but he insisted that everything should be done on Google Doc which was kinda tough for me as I'm more of a design through examples person. My mistake was to start churning out code without properly thinking through the solution and testing it against few examples. My first solution didn't work. My 2nd mistake was to totally switch my approach to recursive from iterative, which didn't turn out well. In the end, I couldn't solve it in time and more importantly, my process for solution was quite embarrassing. By the end of the interview, I knew I had screwed up my chance. For 2nd phone interview, which was 10 minutes after the first, I was quite relaxed for some reason. The interviewer was also very friendly. He asked me some basic questions about my experience along with some questions about hash tables and OS concepts. For the programming part, he asked me to implement an iterator class for list of lists. The idea was the give user a seamless experience for iteration while keeping track of multiple lists, which may even be empty. I was able to complete this implement and test this class easily though the interviewer did point out couple of syntax errors (wrong naming convention for java functions). Though the 2nd interview went good, I didn't do well at all in the first. After a month of wait, I got the dreaded but expected call that I didn't make it to the next round. I wonder what took them so long to decide.

Write a function to get maximum consecutive sum of integers from an array.   11 Answers Implement iterator for a list of lists which may contain empty lists.   Answer Question

Feb 5, 2012
---------------
I got an email from a recruiter on LinkedIn. I accepted the request from the recruiter. Then the recruiter setup the 45 min phone interview with one of the google engineers which consisted of several questions pertaining to hashing, sorting and the end I needed to write a piece of code to implement one of the algorithms.

Find the intersection of two integer lists   3 Answers

Dec 17, 2012
---------------
I was contacted from a recruiter solely based on my performance on a well known algorithm competition. I got a quick assessment phone call and after that came the algoritm phone call test. The question I got was rather tricky and really couldn't see a better approach than the brute force solution. I got notified a week later that I wasn't approved for onsite interview.

You have a sentence with several words with spaces remove and words having their character order shuffled. You have a dictionary. Write an algorithm to produce the sentence back with spaces and words with normal character order.   4 Answers

Jan 23, 2012
---------------
Recruiter contacted with me via linked in. Then scheduled phone interview after a couple of weeks. The phone interview was conducted well, that was what I felt. Asked several questions from math to coding detail. Answered all question well. But did not get offer. Checked with recruiter, was told she can not share with me regarding the result. I feel they are already pre-determined if they want you or not based on the school you graduated. If you did not graduate from decent school, forget about it. It is wasting of time.

Remove duplicate lines from an large text.   Answer Question Some tricky part of hashmap   Answer Question

Apr 29, 2012
---------------
Require deep knowledge of computer science.

How do you improve Google Map   1 Answer

Feb 21, 2012
---------------
It was OK. But, the recruiter was terrible. I don't know why and how Google hired such a terrible recruiter.

Make an algorithm to extract the skyline from the rectangles.   Answer Question

Feb 7, 2012
---------------
I was contacted by a Google recruiter to first schedule a phone interview. The phone interview was to be held on the phone and through Google docs where both the interviewer and I could type in text on the same page. When talking to the recruiter, she asked me what languages I was the strongest in. I responded that my most recent languages were C and Matlab. She said that the interview would be in one of these two languages, but that the potential on-site interview could be in anything on my resume. My most recent background is in embedded systems development, but to my complete surprise once the phone interview started, the interviewer asked questions in C++. I did answer the initial basic C++ question correctly, but I was not prepared to answer the C++ questions and I asked the interviewer if she was familiar with my background and if she could switch to C instead. She did. During the interview she asked about software implementation of the cache driver first. We had a detailed discussion about it. Then she asked if I was familiar with binary trees. I said that I have heard of them, but never used them, and explained that I have used linked lists in the past and implemented basic search functions on them. We later discussed differences between arrays and linked lists and I answered all her questions correctly. So, in total, of the questions she did ask, I answered all of them correctly and frankly did not find them very insightful or difficult. A week later, I received the call from the recruiter that I would not have any further interviews. Citing company policy, she declined to provide specifics. She did say that they were looking for people with broad backgrounds. Here is what I think happened. In short, the interviewer's background was completely different from mine. I would not have any issue with that, after all Google is a software company, but that is not how the process was explained to me. I was prepared for a completely different type of interview, based on the comments from the recruiter. Not only did the recruiter set me up for a different type of interview, the interviewer herself was completely not familiar with my background. There seem to be limited communication between the recruiter and the interviewer and little understanding of my qualifications on their behalf. I feel misled, because I should have not been told by the recruiter that the interview would be conducted in C, whereas clearly the interviewer must have had her eyes set on C++. I would have prepared for a C++ interview if it were not for the comments by the recruiter. For sure I would have not asked to switch to C, if I had any inclination that C++ were so important to them. The interviewer should have insisted on conducting the interview in C++, if it were so important. She should have insisted on my answering the binary tree questions, if they were so important. Lessons learned: 1. Do not take everything the recruiter tells you as 100% accurate. Google is now a large company and has large company policies, meaning the recruiter may have very limited communication with the interviewer. 2. Be prepared for any type of questions, regardless of your own background. It may not be checked. 3. Be prepared for specific skill tests, not only for evaluation of your thinking ability. In spite of Google claiming that the interview process is about determining how candidates think, it is apparently not always true. I have IQ over 170. My logic in my answers was 100% accurate, but I did not want to discuss issues I was not prepared for. I do not think the interviewer was interested in my thought process or in my thinking capability. It appears that she was merely interested in me solving academic problems that she knew the answers to.

Desing a 4-way software cache driver.   4 Answers

Feb 3, 2012
---------------
asked technical question about algorithm . both sorting. the interviewer didn't give any hints about the question. the first interviewer called me 3 hours before the schedule, probably because of time difference. asked question about the project I have done

I cannot disclose technical questions.   Answer Question

Jan 13, 2012
---------------
Googlers only want the best engineers. A tough, but positive interview experience. The recruitment process is a bit on the slow side, though recruiters always kept me well-informed. I had two phone interviews before being asked to come to Google Los Angeles. The interviews consisted of the standard Google questions that are mentioned elsewhere on this website. I made a fundamental mistake on the first interview, but was able to send a correction via email. The interviewers really want to help you. Before entering the building, applicants are required to sign a non-disclosure agreement. Even if I were to reveal what questions were asked, it wouldn't help. It's standard Computer Science algorithms and discrete math. You have to know your stuff and be able to explain yourself. Out of the six or so interviews, I totally botched one, becoming stuck. On another, I forgot an important conceptual detail. The rest went very well. I received notification that I was not selected a few weeks later. The recruiters and staff are all very friendly. The engineers' reputation for being really smart is well-earned. The interviews are tough, and if I couldn't get in ---being one of the top students in my CS program--- then it must be true that only the best of the best get in. The Google office is amazing, as is to be expected. I had a very positive impression of Google and their recruitment process. I appreciated being placed in a nice hotel and having all travel expenses paid. It was nice to get a short trip to LA. Anyone who is selected for an on-site interview already has a bright enough future so that she/he can find other offers of employment easily. From this website, it appears that most applicants who come on-site to interview do not get selected. However, anyone may apply again after six months. So if it is really important to work at Google, try, try again!

Design google map   Answer Question

Feb 7, 2015
---------------
1 phone interview. Two weeks later I was contacted for the onsite interview. There are five interviews in total for the onsite interview. Three weeks later is offer was extended.

Can not mention specific questions due to NDA and I don't think it would help either. The main thing, however, is to have solid fundamentals. Know your algorithms, data structures and discrete math. Before the interview, make sure you get comfortable writing code on a whiteboard or a piece of paper. We are so used to writing code on the computer that when we switch to a whiteboard, our brain does not accept the fact that any code written on the board would be useful :P. I think that if you do enough practice on the whiteboard, it would only make it easier for you in the interview. Having done all the technical preparation, the most important thing is not to be nervous during the interview and practicing on the whiteboard certainly does help in that regard.   2 Answers

Aug 1, 2015
---------------
It was a long process (took 2+ months from start to end). However the recruiter had been very helpful. The interviewers were friendly and smart. Each round was about 45 minutes in length, but they covered the same amount or more questions than what were asked in an hour-long Microsoft interview. Mostly focused on coding, with some small-scale design questions. There was no brain teasers.

Given inputs from Google Search, you have K chunks. Each chunk is individually alphabetically ordered (apple, banana, cat) ... (*apple, *banan, *cat). You want to merge all chunks into a single list. How would you do it? What limitations are there to your approach? It's on an x86 processor, what does that mean and how does that affect your approach?   3 Answers

May 8, 2012
---------------
I did my interviews in November 2011. All the questions were related to Algorithms and I had to solve a given problem, comment on its running time, implement it in the language of my choice on a whiteboard and then improve it further. Although I was quite nervous about the interviews, but I noticed that having a little chat with the recruiter in the interview room before my interviews started definitely calmed me down. I started off well and then the momentum carried on and I was able to perform much better because of not being nervous. I was informed early January that I had passed all the hiring committees. After that, it took number of months (about 4.5) for them to find a matching team for me. I think this is the most painful part in the whole process, because you are in kind of limbo if a match has not been found yet. While passing the technical interviews is a reason to celebrate, it soon becomes clear that you have to wait until a team is found, which can vary on case by case basis. Finally, they found a match for me and I talked to the manager over the phone. He explained all the details about the kind of work being done in the team. I got super-excited by the details of the work and therefore expressed my interest. In the end, after all the wait, I am happy that at least I have been matched to a team that I really would like to work in.

If you have an unsorted array of numbers from 1-100, except 1 of those numbers is missing, how do you determine which number is missing   9 Answers

Dec 8, 2011
---------------
Went to the career fair and submitted resume, they emailed me and set up an on-campus interview.

1. General question about c++ and OOP 2. Algorithmical wuestions   Answer Question

Jan 31, 2012
---------------
It was an on-campus interview with Google, and it was quite pleasant. I went in to the interview place, and the matched me up with two different interviewers. I had nice conversations with both interviewers. The questions were also not too difficult, but being my first real technical interview, I had no idea what to expect :(... But if you do your preparation and stay relaxed, you should be able to do fine

data structures and array manipulation questions.   1 Answer

Feb 6, 2015
---------------
1. Employee referral 2. Phone call with a recruiter 3. Phone technical interview with coding exercises in a shared document 4. On site F2F interview day - 5 technical interview and linch Overall the process was moving pretty fast, and my experience was positive. I decided to formally learn 2nd year CS material prior to the interview. This was done so I could answer the algorithm and data structures questions. Also, it's always a good idea to freshen up general OOP skill sets.

Given two sorted integer arrays, write an algorithm to get back the intersection.   5 Answers Given the daily values of a stock, find how you can lose the most with one buy-sell trading.   14 Answers Given a set of strings, a number 'n', and a function that takes a string and gives back a score, find the n largest scored strings in the set.   6 Answers

Dec 8, 2011
---------------
Did 2 phone interviews. Quite good overall, and the interviewers seemed friendly, but I also got the impression from one of them that he did not give too much importance to the interviewing process. The second interviewer did not call at first, but a new interview was rescheduled. It is quite strange though to be waiting for what you feel is an important phone call that doesn't come. Then I had to reschedule again because this time I was not available on that date, since I was relocating to a different city. You have to really be sharp and have the right idea on the spot to qualify. Had to talk all the time. Test your code with small examples.

No Question
Nov 26, 2011
---------------
Got the interview through campus recruiting. First round was two onsite interviews with a tour of the office and an overview of the company, second round was onsite 3 interviews. The interview itself was pleasant, I got breakfast or lunch or both. I had the chance to talk to a lot of people, and generally everyone  one buy-sell trading.   14 Answers Given a set of strings, a number 'n', and a function that takes a string and gives back a score, find the n largest scored strings in the set.   6 Answers

Nov 26, 2011
---------------
Got the interview through campus recruiting. First round was two onsite interviews with a tour of the office and an overview of the company, second round was onsite 3 interviews. The interview itself was pleasant, I got breakfast or lunch or both. I had the chance to talk to a lot of people, and generally everyone was really helpful. The questions ranged from manipulating arrays and linked lists to small code reviews.

Given an array of structs: write a function that finds equal values in all the structs in the array   Answer Question

Nov 1, 2011
---------------
Recruiter called me and set me up for a phone interview. Phone interview consisted of a simple coding question about an array of structs in C. Some questions about my thesis.

Write a program to compute if one string is a rotation of another.   7 Answers

Dec 5, 2011
---------------
A hr employee was assigned to me to help me through the process. While things moved slowly, everything went smoothly.

what happens when you type: google.com in the browser   1 Answer difference between get and post in forms.   2 Answers write a program to translate alphanumeric phone number to numbers only   6 Answers

Oct 17, 2011
---------------
The interview was really bad. The interviewer was 15 minutes late because she was looking for a phone to call me. No phones available at Google? She asked 3 decent questions. But I don't think she was prepared at all for the interview. And I believe she picked these questions online quickly. 1. The classic: what happens when you type: google.com in the browser? Dumb and everyone knows the answer. 2. What is the difference between GET and POST in forms? Another dumb question. 3. Programming: Write code that translate an alphanumerical phone number into a valid phone number. e.g: 1(800)GO-FEDEX to 18004633339 (her example) I could tell she picked that question online and very quickly and probably didn't have a real answer herself. As I was trying to solve the problem, she was picking on little syntax, which even great programmers don't pick up on the first try. With this question, It takes a long time to simply check that the string is long enough and not too short. And then she said you can simply get the alphanumerics i.e: 1800GOFEDEX, but of course that doesn't work because someone can write: 1800()GOFEDEX, 18(00)GOFEDEX, 1800(G)OFEDEX. 1()800GOFEDEX, 1-(800)-GOFEDEX, etc... So going through these cases alone takes a long time not 10 minutes especially when she was late. As I pointed out how crazy it would be to write actual codes, she said time was over. She definitely didn't have any clue how that problem would be solved.

No Question
Dec 5, 2011
---------------
A hr employee was assigned to me to help me through the process. While things moved slowly, everything went smoothly.

Write a program to compute if one string is a rotation of another.   7 Answers

Oct 17, 2011
---------------
The interview was really bad. The interviewer was 15 minutes late because she was looking for a phone to call me. No phones available at Google? She asked 3 decent questions. But I don't think she was prepared at all for the interview. And I believe she picked these questions online quickly. 1. The classic: what happens when you type: google.com in the browser? Dumb and everyone knows the answer. 2. What is the difference between GET and POST in forms? Another dumb question. 3. Programming: Write code that translate an alphanumerical phone number into a valid phone number. e.g: 1(800)GO-FEDEX to 18004633339 (her example) I could tell she picked that question online and very quickly and probably didn't have a real answer herself. As I was trying to solve the problem, she was picking on little syntax, which even great programmers don't pick up on the first try. With this question, It takes a long time to simply check that the string is long enough and not too short. And then she said you can simply get the alphanumerics i.e: 1800GOFEDEX, but of course that doesn't work because someone can write: 1800()GOFEDEX, 18(00)GOFEDEX, 1800(G)OFEDEX. 1()800GOFEDEX, 1-(800)-GOFEDEX, etc... So going through these cases alone takes a long time not 10 minutes especially when she was late. As I pointed out how crazy it would be to write actual codes, she said time was over. She definitely didn't have any clue how that problem would be solved.

what happens when you type: google.com in the browser   1 Answer difference between get and post in forms.   2 Answers write a program to translate alphanumeric phone number to numbers only   6 Answers

Feb 23, 2013
---------------
Upload resume online and receive two 45 minuts phone interview invitation.

Use singly linked list to implement the cache (LRU) algorithm. How would you do?   4 Answers

Nov 3, 2011
---------------
the process went quite well. the first phone interview was easy and straight forward with data struct design, coding and some questions which did not require exact answers. The second phone call was delayed two days after the first one because my interviewer was occupied in a meeting that day. The second interview went well as well but I was asked some questions on multi-thread, I solved it with some endeavors. then the interviewer seemed not prepared for another question following the first one. Anyway he spent some time pulling another simple coding question to me and I finished it within 3 minutes and the interview was done. 3 days later the recruiter emailed me and told me that I've passed the interviews and was moving to intern host matching stage, which might take more than 3 weeks. And now I'm going to have a talk with my recruiter and she then will give my profile to those intern hosts.

I won't disclose those questions due to NDA but I'm gonna tell you they were not difficult. Just show yourself. Maybe you can find those questions on glassdoor, I'm not sure. I've gone through the first 15 pages but I did not find any match.   Answer Question

Oct 25, 2011
---------------
It was 1 hour technical phone interview. Questions about algorithms and certain data structures about hash maps, you actually code with the interviewer on a google doc. Ask questions if something is unclear, they want to know that your thinking and not just assuming things.

If you have a ransom letter and magazines, can you construct the ransom letter from the words in the magazine.   3 Answers

Oct 17, 2011
---------------
After recruiter's phone call with general organizational questions, I had short technical phone interview. Interviewer was late for 10 minutes, thus we talked only 30-35 min. For this time he was able to ask me not very much: some of my previous experience, most difficult bug I've faced recently, and one technical question with coding in shared doc. After that he let me to ask him something about google. He answered one question and finished interview, so I had no change to fund out everything I planned. Also I had a feeling, the guy was not interested to be there, coz he was not leading me through resolution process and talked very little. Also his communication skills could be better - I hardly understood his questions in Indian English and asked to repeat several times. Google should sent better skilled and more open English speakers to interview, IMHO. I successfully resolved technical coding question in two different ways (time and memory efficient) with commenting my resolution thoughts, but have got negative response from recruiter in 1 week.

Write a code to find out if two string words are anagrams   4 Answers

Nov 15, 2011
---------------
I applied online and after 2-3 weeks a recruiter contacted me, he was very helpful and friendly, we had an initial 30 min phone interview to tell me about the company and the interview process, then he scheduled me for two technical phone interviews back to back, each one is 1 hour. They asked the regular problem solving questions (Not very advanced) and 1 design question, i did well and the recruiter invited me to visit them to have a physical interview. They arranged everything and i was supposed to be there 2 days before the interview, and leave 1 day after, but while travelling to them I encountered some problems ( due to latency in flights ), i finally reached there 1 day late and i lost my bag, and i had to be ready for the interview next day in morning, I asked the recruiter if they can postpone the interview 1 day, because its not fair to interview someone who has been travelling for 2 days and having a severe jet lag, but they refused. I finally went to the interview which consists of 6 back to back interviews, they varied in the difficulty of the questions, and you have to write code quickly to be able to finish the questions.

I can't really tell about the question, but they vary between different problem solving questions like trees, string manipulations and complex recursion.   Answer Question

Jun 13, 2012
---------------
1. two numbers sum up to some designated number. 2. find the minimum window in a string which contains a list of characters. 3. how to optimize/parallel a cache for an mobile app 4. how to design a excel 5. how to implement search in G+ 6. check if a string matches a regular expression

how to improve a parallel cache, this is the most difficult question i got. I had no idea what the interviewer meant and he clearly had some 'right' answer in his mind, but no clue.   Answer Question

Dec 16, 2011
---------------
Intermediate (some tough) questions about algorithms, memory usage and system scalability.

Questions about algorithms and data structures.   Answer Question

Aug 27, 2011
---------------
I had always wanted to work at Google, but I never thought I would get in. I'm 45 years old and I have a 2.2 GPA. My friend at Google submitted my resume and I waited quite a while before I got a rejection letter. In retrospect, with them receiving 3000 resumes a day, it must be very easy to get lost in the shuffle unless your resume really stands out, and mine certainly did not. I waited a while and then contacted Google again and asked them to reconsider my resume, and they did. From that point on, it was an amazing process. Right away I got an email asking when would be a good time for a recruiter to talk with me (HR screen). I said, "If not now, when?" and 60 seconds later I got a call from the recruiter. We talked for 45 minutes and mostly it seemed like just fun chitchat. She asked about my experience and what I liked to work on and what languages I preferred. Then she said she would find an engineer suitable for me and would call me back soon. She called the next day and we scheduled a phone interview (tech screen) for the following week. She also send me an email about what to expect and things to brush up on. The next week I got the call from an engineer. We worked together in a Google Doc, and on the phone. He asked me about my resume, particularly my machine language experience. Then we did a bit manipulation problem, and I missed an obvious optimization. Then he asked me the main problem which was very clever. I came upon the solution very quickly, using recursion, but I screwed up on the complexity analysis. Afterwards, we chatted about Google life. It was a fun experience, but I figured I had blown it. I got a call from the recruiter an hour later telling me that the feedback was positive and that we would move on to the on-site interview. I spent a month in front of my white board practicing problems, especially from Gayle Laakmann's book, Cracking the Coding Interview. I read through Introduction to Algorithms , but there was just too much information in there to cram into my brain. At one point I was worried about my low 2.2 GPA and asked if I would be given a chance to explain the situation. I sent them an email and 30 seconds later one of the recruiters called me and said, basically, no one cares about your GPA. I get the impression that it's just a metric they use if there's nothing else on your resume to judge you by. I am not going to describe the interviews here. Sorry. Not only did I sign an NDA, but I also don't want to spoil it for anyone. I will just say this much: Those people who said, "They asked me a simple CS101 question and I answered it and they still didn't hire me, those arrogant pricks!", well, dude you completely missed the point of the exercise. It's really not about getting the "right" answer. The interviewers were all very cool. Some were reserved, and some were friendly and outgoing. I had a very fun time, but I missed a lot of simple things, didn't complete all of the problems, made simple syntax errors, and completely fumbled the interview that focused on Java. I left depressed, but feeling like I had been given a very fair chance. I got a call from a recruiter two days later saying that the interview feedback was "pretty positive" and that he decided to forward it to the Hiring Committee. The following Monday the Hiring Committee gave me a "unanimous thumbs up". Another recruiter emailed me to say she would be contacting my references and my application would go through the Compensation Committee and the Executive Committee. I was given a questionnaire to fill out, asking about past employment details and such. It also asked about any past achievements I may want the Executive Committee to know about. They said I would probably hear something in the next few weeks. Getting close to the end of the two week period, at 10:30pm, I got the email to "extend me an offer". When I replied to the email, she saw I was still awake so she called me on my cell phone at 11pm to give me the details as soon as possible. And the details were VERY generous, so I did not negotiate. Overall, it was an awesome experience. Everyone was super nice and polite. The whole thing took two months, but a month of that was me asking for time to prepare. I've heard of cases where they can push it through in two weeks if you re really in a hurry. They kept asking me if I had any time constraint that they needed to work with. Also, yes, I asked, and Larry Page did review and sign off on my final approval. From his own words, he's gotten so good at it that it takes him less than a minute for each one. I will only give this advice about the actual interview process: If you thought you aced it, you probably missed something. It's not about getting the "right" answer. It is about soooo much more. But, like I said, I don't want to spoil the fun.

Design an algorithm to do X, then analyse the complexity.   Answer Question Here a situation and some code, what to you think about that?   Answer Question Write a short method to perform a simple, common operation. Now tell me what could go wrong. How would you fix it?   Answer Question Here's a situation involving gym lockers that I've been wondering about. What do you think of it?   Answer Question

Aug 27, 2011
---------------
I had always wanted to work at Google, but I never thought I would get in. I'm 45 years old and I have a 2.2 GPA. My friend at Google submitted my resume and I waited quite a while before I got a rejection letter. In retrospect, with them receiving 3000 resumes a day, it must be very easy to get lost in the shuffle unless your resume really stands out, and mine certainly did not. I waited a while and then contacted Google again and asked them to reconsider my resume, and they did. From that point on, it was an amazing process. Right away I got an email asking when would be a good time for a recruiter to talk with me (HR screen). I said, "If not now, when?" and 60 seconds later I got a call from the recruiter. We talked for 45 minutes and mostly it seemed like just fun chitchat. She asked about my experience and what I liked to work on and what languages I preferred. Then she said she would find an engineer suitable for me and would call me back soon. She called the next day and we scheduled a phone interview (tech screen) for the following week. She also send me an email about what to expect and things to brush up on. The next week I got the call from an engineer. We worked together wisted graph). I dont know what Google interviewers measure by asking such questions. To an extent, they were good questions (could not find any in book), but when 80% of questions require recursion use (discouraged in any production quality code), they test little about candidate's suitability for a job. I even gave the feedback to the recruiter, and she was nice enough to acknowledge the issue. Although, I did not get an offer (fumbled on a couple of questions, including RPN) - I find the interview very intellectually stimulating.

how would you improve map reduce   Answer Question

Sep 4, 2013
---------------
initial contact was with a recruiter who set up a phone interview.

Why You want to work in Google?   Answer Question

Jul 8, 2015
---------------
I was called by the recruiter after 2 weeks of applying online. The interviewer was very normal and simple he asked me some basic questions related to C++. I was selected for second interview, they asked me about concept of algorithm starting from simple to difficult. I answered all the questions correctly.

What is your research topic and how is it related to Google products?   Answer Question

Feb 20, 2012
---------------
I had 2 phone interviews with Google. Interviewers asked me about my research topic and how it can be associated with Google products. They also asked to write a code for coding question. I think it was related with geometry.

Given a large web query log file, how to find the most frequent K queries   1 Answer

Aug 12, 2011
---------------
Two interviewers called me at the same day and questions are moderate except that the first interviewer asked me something outside my scope of knowledge.

Probably shouldn't disclose the first interview question as they made me sign an agreement and the first question was unique from anything I have seen as an interview question. This was a question that would not have been able to have been completed within the 45 min.   Answer Question Fibonacci numbers... haha.   4 Answers

Aug 20, 2011
---------------
I don't really know what to think of it. The first interviewers question was extremely difficult. There is no way that it could have been completed in the 45 min that I was given, but I gave it my best shot. The guy argued with me about 2d arrays not being contiguous in memory... The second interviewer was completely the opposite in that it was absolutely easy, so easy I thought I was missing something and tried coming up with more efficient methods when there really wasn't any.

Design something.   Answer Question

Jul 24, 2011
---------------
They are very arrogant and think that they are the smartest people in the world. Irvine Google is especially bad since they are actually just two companies that were bought out. Their own people would all fail their interviews.

(they asked that we keep the interview questions confidential, and I will respect that)   Answer Question

Jul 21, 2011
---------------
The interviews included demo'ing previous work I'd done (public product), answering detailed questions about the technologies in my area of interest, and doing algorithmic coding on the whiteboard. Ultimately, I think only the algorithmic coding was significantly considered, based on the internal recruiter's feedback about all candidates (wouldn't provide info specific to me). The problems set were atypical to coding we do in computing in general, much more aligned with what I studied as an undergraduate. Big-O analysis and scaling were prominent. I believe there is a disconnect between what they tested, and what engineers in the positions I was focused on do on a regular basis, with neither necessarily being a good measure for the other. I found all the interviewers very friendly. It was like they wanted me to succeed, and would give ask helpful questions when I was off base. A friend (also interviewing there) and I wondered if the model is everyone gets the answer, and the measure is just how much help they provided.

algorithm   Answer Question

Jul 12, 2011
---------------
I went through a phone interview and was invited to Mountain View for on-site. Four interviews in a day. Basic computer science fundamental questions. I answered ok but not perfect.

No Question
Jun 12, 2011
---------------
A Google recruiter called me a few months back about having me apply for a Software Engineer position at their New York office. I was already employed in a good job at the time, so I was in two minds about exploring new opportunities. They set up a meeting for me with one of their engineers to clear any doubts or questions I may have about working at Google. This really helped with my decision to interview there, and I indicated to the recruiter that I would like to go ahead and interview with them. An on-site interview was scheduled within three weeks. The interviews started at 10:00AM at the Google offices in Manhattan (since I live in the area, I didn't need to travel, etc.), and were over by 3:00PM. There were 1-on-1 interviews by five of their engineers, each lasted about 45 minutes. One hour was set aside for lunch at the Google cafeteria (where all of the food is free and awesome), and one of their engineers was assigned as my "host" at the lunch to answer any questions I may have about life at Google. He also gave me a tour of their offices (which is very cool). All of the interviews were conducted in an "interview room" at the Google offices, which is a small meeting room consisting of a single (small) round table and a couple of chairs, a whiteboard and writing supplies. The interviewers (promptly) came to the room at their scheduled times and conducted their interviews for their 45 minutes, or until the next interviewer had arrived outside. Each of the interviews consisted of one or two math or algorithm problems. I was expected to first describe my general approach to the solution. After the interviewer was satisfied with the general approach, I was asked to write code on the whiteboard. I could use any programming language of my choice. I chose Java in almost all questions, and it seemed that most of the interviewers did their day-to-day work in C++. In any case, about half of the time was spent in the back and forth with the interviewer in coming up with the general approach to the problem -- I would come up with an approach, and the interviewer would point about certain cases that didn't work (or other conditions that needed to be met). The other half of the time was spent in planning and writing out the code on the whiteboard. Despite my background in research, none of the questions pertained to my background and experience. The questions were all designed to gauge fundamental problem-solving and algorithms expertise. It seemed like the interview questions were devised completely independently of my resume/background. Finally, during the last 15 minutes (2:45PM-3:00PM), I had a short "debrief" session with the HR guy, who gave me the opportunity to ask him any final questions I may have had, and to give him a little feedback about my experience that day. Overall it was a good interview experience -- very professional, all interviewers were well-prepared, punctual and respectful.

You are given an function which converts a string like "I work at Google" to "Google at work I". Write all the test cases you can think of for testing such a function.   1 Answer You are given a random binary tree 5 / \ 4 9 / \ / \ 3 5 6 8 Write code to print it out in order level ie 5 4 9 3 5 6 8 The tree need not be balanced. Write all the datastructures for the tree and make sure that you print newlines after each level. Also write test cases to test your code.   4 Answers

Jun 9, 2011
---------------
I was contacted by the recruiter and we scheduled the phone interview. The phone interview was positive, and onsite interview is due in a few days.

Given an unsorted array of integers, find first two numbers in the array that equal a given sum.   8 Answers

Jul 1, 2011
---------------
Recruiter sent a link with study material. We scheduled a phone interview after I had some time to read up on the stuff you learn in College, but never use in a real job. Got a phone call, went straight to the questions. 3 Data Structures / Algorithm types of questions. Went through several optimizations of the same algorithm.

Design the friend suggestion of facebook, write a code, complexity,...   Answer Question reverse a sentence such that the ordering of words is reversed but the words aren't changed   2 Answers

Jun 15, 2011
---------------
one phone interview and 5 1:1 interview at the onsight.

All were puzzle type questions... many books can help prepare you for this kind of thing. Don't have a specific one in mind. I would not say that they were trick questions in any way; more algorithm based.   Answer Question

Jul 26, 2012
---------------
There were four "interviews." First was a phone screen with a recruiter, then another one with a more local recruiter. There was a first round of interviews on-site, and a longer one on-site after that. All of the in-person interviews were whiteboard, conversation style, me writing functions/code to illustrate the answers.

difficult algorithm quiz   Answer Question

Aug 12, 2015
---------------
one of the employees referenced me. so I sent my resume. I had phone interview with HR team a couple of times. I got on site interview after 2 or 3 weeks. I did on site interview. they noticed me the result the next day.

Design a system or algorithm to catalog all of the worlds books?   Answer Question

Mar 19, 2012
---------------
The other reviews do this justice. It was very technical, very fast paced.

One of the interviewers at google-plex asked essentially the same technical question as my initial interviewer in NC. I had done well on this, so I was faced with this awkward decision about whether to tell the second person that I had already been asked this question. So I decided to tell him - he got a little flustered and we then moved on to an elaboration which was more difficult to handle - at least in part because I could not really connect with the interviewer on what it was he was asking. Ah well. Here's the initial question: Describe and code and efficient algorithm to decide if two rectangles in a coordinate plane are overlapping or not. Include data structure definition and any assumptions you make about the coordinate plane (location of the origin etc).   Answer Question

Oct 21, 2013
---------------
I had previously been offered a job back in 2003 out in Mt View but did not want to relocate. Then I saw a blog post that they were hiring locally in NC and so i reached out to the poster. First had coffee with the guys and then initiated the normal hiring process through a hiring manager. First interview was at the local office with two different engineers. This went well. Followup interview was out in Mt. View - standard google interview with three engineers - two from the group i would be working with (graphics, chrome) one from outside. Interviewers were professional and cordial-to-friendly. I struggled a bit with the graphics algorithms questions as this is not my area. I did not get an offer this time - i don't think i was a good technical fit for what they were looking for in the NC office (small only 10 people working on graphics). I did not get any detail about the "no" from the recruiter, but I don't expect that typically you get much. The only snafu/problem I had was an awkward situation where I was asked the same question by two different interviewers (see below).

How does the garbage collector in the JVM work and how does it reclaim orphaned objects?   1 Answer Explain pointer arithmetic   Answer Question What guarantees does the synchronized keyword give when used on a method? When a thread calls the synchronized method, can another thread call a method that isn't synchronized on the same object?   1 Answer

May 17, 2011
---------------
I applied online for a job opening for Software Engineer at Google New York and was contacted straight away by a very friendly recruiter. We talked over the phone about the Google culture in general, the position and my experience. Also had to rate myself on a scale of 1 to 10 on my programming language of choice (Java). A date was set for a technical phone interview. I read up on my CS basics, my core programming language and some Google whitepapers. A software engineer contacted me at the exact agreed upon time. No small talk, straight to business. First question was about garbage collection in Java. Interviewer was looking for a very specific answer which I more or less could give. Next question was about memory leaks in Java and how to cause them. I wasn't aware of any way to do that, but apparently the substring method on a String object can cause it, first time I ever heard of it... Then he asked about pointer arithmetic. I gave him a generic description but he was looking for more detail. I explained that an array reserves a memory block where in principle one could use pointer arithmetic to get the next memory block reserved for an index in the array. By this time I got the sense that this was a C/C++ programmer proving the superiority of his language of choice over Java. Then he asked about the synchronized keyword's use on a method what guarantees it gives and how it behaves under different usecases, no problems there. Next came the programming task that I needed to resolve in a shared Google doc document. I had to implement encode / decode methods that would serialize/deserialize a binary tree. I didn't analyse the problem enough in advance and assumed he meant a balanced binary tree. After a while he gave me a hint that I was on the wrong track. I started again and got 2/3 through the exercise when the interview time was up. All in all I felt I didn't give a good impression, although I felt the questions weren't a good gauge of my skill level. The impression I got from the interviewer was pretty negative. It felt like he thought he was wasting his time from the beginning. Not a nice feeling. I sent an email to the recruiter explaining my impressions of the interview. After a few days I got an email from the recruiter tell me they wouldn't be continuing the interview process. Oh well, their loss...

A BST question.   Answer Question A string manipulation question.   Answer Question A simple BigData question.   Answer Question BFS, DFS, and interval trees   Answer Question OS and compiler-related stuff.   Answer Question

May 18, 2011
---------------
Two phone screens followed by an on-site interview. I was very surprised that I had only three interviews on the Google campus as I had been flown from 10,000 miles. The phone interviews were much more difficult than the ones on-site which consisted of sophomore-year computer science questions. I did not get an offer even though I did not make any mistakes. It was very weird that no-one asked me about my graduate work (I am about to graduate). I believe my on-site interviewers were junior engineers which could not come up with good questions and write a strong evaluation. If someone on Google's hiring committee reads this post: please do not fly people from the other side of the world for a total of 135 min interview time with mediocre engineers.

No Question
May 26, 2011
---------------
Got called by the recruiter and scheduled for on site interview. The recruiters are very nice to work with. During the interview, I met with four interviewers and all of them asked data structure and algorithm related questions. No single question was related to my own background or achievements. One of the interviewers was difficult to communicate. Three others were sharp, nice and patient. A few days later I was told that I didn't get the offer because the interviewers didn't reach concensus on hiring.

Data Structure and Algorithm related questions.   Answer Question

May 19, 2011
---------------
I was first contacted by a recruiter. My interviews consisted of 2 phone interviews (45 mins each) and on-site interview with 4 engineers (45 mins each). The questions were mostly coding questions, but I also talked about my research in some of the interviews. Overall, questions were not that hard and I thought I did a decent job, so I was  15, 2011
---------------
one phone interview and 5 1:1 interview at the onsight.

All were puzzle type questions... many books can help prepare you for this kind of thing. Don't have a specific one in mind. I would not say that they were trick questions in any way; more algorithm based.   Answer Question

Jul 26, 2012
---------------
There were four "interviews." First was a phone screen with a recruiter, then another one with a more local recruiter. There was a first round of interviews on-site, and a longer one on-site after that. All of the in-person interviews were whiteboard, conversation style, me writing functions/code to illustrate the answers.

difficult algorithm quiz   Answer Question

Aug 12, 2015
---------------
one of the employees referenced me. so I sent my resume. I had phone interview with HR team a couple of times. I got on site interview after 2 or 3 weeks. I did on site interview. they noticed me the result the next day.

Design a system or algorithm to catalog all of the worlds books?   Answer Question

Mar 19, 2012
---------------
The other reviews do this justice. It was very technical, very fast paced.

One of the interviewers at google-plex asked essentially the same technical question as my initial interviewer in NC. I had done well on this, so I was faced with this awkward decision about whether to tell the second person that I had already been asked this question. So I decided to tell him - he got a little flustered and we then moved on to an elaboration which was more difficult to handle - at least in part because I could not really connect with the interviewer on what it was he was asking. Ah well. Here's the initial question: Describe and code and efficient algorithm to decide if two rectangles in a coordinate plane are overlapping or not. Include data structure definition and any assumptions you make about the coordinate plane (location of the origin etc).   Answer Question

Oct 21, 2013
---------------
I had previously been offered a job back in 2003 out in Mt View but did not want to relocate. Then I saw a blog post that they were hiring locally in NC and so i reached out to the poster. First had coffee with the guys and then initiated the normal hiring process through a hiring manager. First interview was at the local office with two different engineers. This went well. Followup interview was out in Mt. View - standard google interview with three engineers - two from the group i would be working with (graphics, chrome) one from outside. Interviewers were professional and cordial-to-friendly. I struggled a bit with the graphics algorithms questions as this is not my area. I did not get an offer this time - i don't think i was a good technical fit for what they were looking for in the NC office (small only 10 people working on graphics). I did not get any detail about the "no" from the recruiter, but I don't expect that typically you get much. The only snafu/problem I had was an awkward situation where I was asked the same question by two different interviewers (see below).

How does the garbage collector in the JVM work and how does it reclaim orphaned objects?   1 Answer Explain pointer arithmetic   Answer Question What guarantees does the synchronized keyword give when used on a method? When a thread calls the synchronized method, can another thread call a method that isn't synchronized on the same object?   1 Answer

May 17, 2011
---------------
I applied online for a job opening for Software Engineer at Google New York and was contacted straight away by a very friendly recruiter. We talked over the phone about the Google culture in general, the position and my experience. Also had to rate myself on a scale of 1 to 10 on my programming language of choice (Java). A date was set for a technical phone interview. I read up on my CS basics, my core programming language and some Google whitepapers. A software engineer contacted me at the exact agreed upon time. No small talk, straight to business. First question was about garbage collection in Java. Interviewer was looking for a very specific answer which I more or less could give. Next question was about memory leaks in Java and how to cause them. I wasn't aware of any way to do that, but apparently the substring method on a String object can cause it, first time I ever heard of it... Then he asked about pointer arithmetic. I gave him a generic description but he was looking for more detail. I explained that an array reserves a memory block where in principle one could use pointer arithmetic to get the next memory block reserved for an index in the array. By this time I got the sense that this was a C/C++ programmer proving the superiority of his language of choice over Java. Then he asked about the synchronized keyword's use on a method what guarantees it gives and how it behaves under different usecases, no problems there. Next came the programming task that I needed to resolve in a shared Google doc document. I had to implement encode / decode methods that would serialize/deserialize a binary tree. I didn't analyse the problem enough in advance and assumed he meant a balanced binary tree. After a while he gave me a hint that I was on the wrong track. I started again and got 2/3 through the exercise when the interview time was up. All in all I felt I didn't give a good impression, although I felt the questions weren't a good gauge of my skill level. The impression I got from the interviewer was pretty negative. It felt like he thought he was wasting his time from the beginning. Not a nice feeling. I sent an email to the recruiter explaining my impressions of the interview. After a few days I got an email from the recruiter tell me they wouldn't be continuing the interview process. Oh well, their loss...

A BST question.   Answer Question A string manipulation question.   Answer Question A simple BigData question.   Answer Question BFS, DFS, and interval trees   Answer Question OS and compiler-related stuff.   Answer Question

May 18, 2011
---------------
Two phone screens followed by an on-site interview. I was very surprised that I had only three interviews on the Google campus as I had been flown from 10,000 miles. The phone interviews were much more difficult than the ones on-site which consisted of sophomore-year computer science questions. I did not get an offer even though I did not make any mistakes. It was very weird that no-one asked me about my graduate work (I am about to graduate). I believe my on-site interviewers were junior engineers which could not come up with good questions and write a strong evaluation. If someone on Google's hiring committee reads this post: please do not fly people from the other side of the world for a total of 135 min interview time with mediocre engineers.

No Question
May 26, 2011
---------------
Got called by the recruiter and scheduled for on site interview. The recruiters are very nice to work with. During the interview, I met with four interviewers and all of them asked data structure and algorithm related questions. No single question was related to my own background or achievements. One of the interviewers was difficult to communicate. Three others were sharp, nice and patient. A few days later I was told that I didn't get the offer because the interviewers didn't reach concensus on hiring.

Data Structure and Algorithm related questions.   Answer Question

May 19, 2011
---------------
I was first contacted by a recruiter. My interviews consisted of 2 phone interviews (45 mins each) and on-site interview with 4 engineers (45 mins each). The questions were mostly coding questions, but I also talked about my research in some of the interviews. Overall, questions were not that hard and I thought I did a decent job, so I was really disappointed to hear that I couldn't get an offer.

Not allowed to disclose by NDA.   Answer Question

Jun 6, 2011
---------------
I was contacted by a recruiter from Google Southern California (Irvine and Santa Monica) through LinkedIn and was asked if I had any interest in applying to Google. I replied yes and then had a phone call with the recruiter (about 40 minuo as well as an on-site, in a process that takes a couple of weeks to a month. I had a pending offer from another company, so they expedited my interview (skipped the phone), and expedited the hiring committee review. I got flight info for two days later, flew out, interviewed the next day (Friday), and had an offer by Monday. At the on-site interview, they put you up in a pretty nice hotel and provide a rental car. GPS is recommended, as the Mountain View / Sunnyvale suburbs can be difficult to navigate. The Google campus is simply spectacular. They have dozens of buildings, with bikes for transportation between bulidings, buses in and out of different neighborhoods, multiple dining cafes, multiple gyms, etc. Google is also located all over the country (and world) - you can actually pick your location if MV suburbia isn't your cup of tea. Projects/teams are distributed across separate offices. As for the actual interview: 5 separate 45 minute interviews with other Software Engineers. The interviewers come from a wide background (infrastructure, front end, etc). Questions were all technical in nature, mostly coding oriented. They did ask pointed questions about previous experience, projects, general resume stuff, etc. The interview questions were well thought out and relatively innovative. The interviewers presented them clearly, and were very helpful in discussing solution possibilities. Some of the questions were pretty straightforward, but the trickier ones were excellent - we were able to devise solutions and optimize them multiple times, discussing what was better about different approaches. Everyone I talked to was very upbeat, intelligent, and nice. The last interviewer I had seemed a bit surly at first, but quickly warmed up and became very affable. The hiring process was very informative. The recruiters gave loads of information when asked, and were very up front about a lot of aspects of the company. The interviewers themselves were able to answer many questions about the gritty details of working at Google. The hiring itself is actually done by a separate group of people from the interviewers, and is decided somewhat up the chain of command.

time series addition   Answer Question

Mar 4, 2013
---------------
Very disorganized recruiting process, there was a carousel of recruiters. I guess some of them were sourcers, some were recruiters for specific teams? The interviews were typical google problem solving coding questions. Some of the interviewers weren't particularly friendly and seemed like they didn't want to be there. Indeed, the offer decision is made by a different comittee directly, so I don't know how good a read they can get.

How would you determine if someone has won a game of tic-tac-toe on a board of any size?   5 Answers

Aug 21, 2011
---------------
phone interview

What subclasses of Collection do you know   1 Answer

May 17, 2011
---------------
I had this call from Google that presented me the interview process and how I will start with 2 technical phone interviews. I took both the interviews the same day, it went pretty well, I had some questions about how JAVA works, and 2 programming assignments. The first one was about finding if an integer k is the some of 2 others taken from a table. The second one was about printing the digits of an integer.

String replacement coding in Java.   1 Answer

Feb 15, 2012
---------------
Basic phone screen, on-site interview since I'm local. Blackboard coding, requirements / ana;ysis brainstorming

Write a parser of some language the interviewer made up   Answer Question

Jun 8, 2012
---------------
I had a phone interview and the first question was very specific to web technology and the difference between rest and soap and other very specific question. The other question they asked me to write parser for a language. These questions were done on google docs. The first two questions were tough but I was able to get through them. The last question, I have no idea what the guy was asking me. I interviewed with 2 guys on the phone and the second guy had trouble speaking, but was very friendly. The first guy had questions I could understand but was very cold and sounded very arrogant.

No Question
Jun 25, 2015
---------------
Phone screen, good stuff. They asked me relevant questions, that are approporiate for this. They were the best interview I had, free food. wonderful people. smart guys.

questions about tree and hash table   Answer Question

May 29, 2011
---------------
Submitted my resume and cover letter online. Contacted by the recruiter a month later and had most of the communications via emails (for interview arrangements) and had 2 phone interviews.

different types of sorting   Answer Question

Jul 5, 2011
---------------
Google was behind me to give interviews with them for more than 6 months. They scheduled my interview with a person having not qualified to take my interview. Very hard to believe that, the person hardly had 3 years of experience and had a bachelor degree. It was highly unexpected and embarrassing interviews of my life. I was asked very stupid bookish questions which were not even completed. The interviewer did not even respond back clarifying the question when I asked clarification. It was highly rude and embarrassing moment of my life that I have to waste my time over this.

Describe what happens when making a google search, specifically with client and server.   Answer Question Serialize and deserialize a collection of strings into a single one.   2 Answers

Mar 26, 2011
---------------
Interviewed over the phone twice, after applying online for the position. The first round was just introductions, getting to know me and my experiences, along with really easy technical questions. Second round was a google doc coding exercise. Didn't receive a response after that. The process was very fast and corteous, although there was a miscommunication and they forgot to tell me the day and time of the second interview, so that came by surprise. My interviewer had no problem in rescheduling tho.

All about algorithms mostly. They like to see how you think things through   Answer Question

Jun 13, 2011
---------------
The interview process wasn't so bad, although very time consuming. The part that was frustrating was finding out they actually had no intention of hiring anyone right now. They said they were expanding to two other buildings on the block. They told me they liked me, but they had no positions open and they were waiting for approval to hire for a new project, BUT had to see if there were enough potential people for that project. So, why waste so much of my time leading me on? Why not shorten it to one interview and tell people they'll keep their record on file for later AHEAD of time. Doesn't make sense.

Interviewer ask me to solve some permutation related problems. 1) Algorithm to get Index of a permutation when all permutations arranged in lexicographical order and its complexity   9 Answers

Apr 30, 2011
---------------
Ive contacted by a google recruiter through Linkedin. After that a 45 min phone interview session scheduled with one of Google Engineer. Interviewer ask me to solve some permutation related problems. 1) Algorithm to get Index of a permutation when all permutations arranged in lexicographical order 2) and its Complexity

When 'top' command shows 30% of CPU time, what does this mean? How to write a program to use only 30% of CPU at all time?   Answer Question

Apr 13, 2011
---------------
They ask hard and practical questions based on your previous internship experience and projects.

Create a function which returns the angle of the clock's hour and minute hands.   1 Answer

Mar 8, 2011
---------------
Had 2 phone interviews. Both went well. Recruiter said they went well and wanted to bring me on site. Then another recruiter calls me and says they are not moving forward. No explanation or apology from both. Very strange experience.

1. Spiral print numbers of a two dim array 2. Serialize and Deserialize a tree   Answer Question

Mar 8, 2011
---------------
I was asked specific questions regarding my occupation. Also asked to create a function to return the angle of the clock if given the hours and minutes.

No Question
Oct 7, 2015
---------------
1 round phone interview and 2 round on-sites totally interview 7 peoples including manager. Overall process is good and questions are very technical, but you do have prepare for the white board coding.

No Question
Mar 8, 2011
---------------
I was asked specific questions regarding my occupation. Also asked to create a function to return the angle of the clock if given the hours and minutes.

Create a function which returns the angle of the clock's hour and minute hands.   1 Answer

Oct 7, 2015
---------------
1 round phone interview and 2 round on-sites totally interview 7 peoples including manager. Overall process is good and questions are very technical, but you do have prepare for the white board coding.

1. Spiral print numbers of a two dim array 2. Serialize and Deserialize a tree   Answer Question

Oct 31, 2011
---------------
I had two technical phone interviews after going through HR questions. In the first interview, I was asked about my research and background. They did not care about what language I use in a coding question. In the second interview, the interviewer was very strange. He did not ask any of my background or personal questions. When I said Hello, he identified my name then started asking a coding question right away. His accent was so strong yet he was speaking too fast that I could not really understand what he was saying, particularly for such a challenging question. He looked like he made judgment from the moment I received his call as he did not seem to care about assisting to answer the question (most of other interviewers from a big company do assist). I immediately noticed that I was not going to satisfy this person but I gave my best for an hour.

Describe your research background.   1 Answer

Mar 18, 2014
---------------
Very responsive and on time.

Nothing too special. Just some general software engineer questions.   Answer Question

Mar 8, 2011
---------------
Came in for an on site interview. The front desk and recruiter were very nice. Was shown around for a five minute tour of the office. The office decor was typical dot-com stuff like cube toys, decorations, and a focus on showing your uniqueness and how much fun you're having at work. After the tour we went straight to the interview room for the mini-interviews. The interviewers were all software engineers. Despite being asked to pick top competencies, the interviewers ignored this, ignored the resume, ignored even basic background questions, and jumped straight into algorithms questions. We would progress through several problems until the interviewer found one which I didn't know off the top of my head. At one point I was asked to derive an efficient parallel multi-core algorithm on the spot and the point of the interview was revealed as "stump the applicant." Despite explaining the algorithms, the interviewers insisted they be written out long hand on a small whiteboard without regard of how long was left in the interview. One interviewer revealed that interviewers were allowed to come up with their own problems whether or not they had considered the solution. Interviewers provided zero feedback, and once time ran out the interviewer proclaimed "this interview is now over" and left the room. One interviewer claimed that any extra time left over would be "rewarded" with the ability to ask him questions about the job or environment. This is indicative of the office attitude. Overall it was a very negative experience and it was conducted more like a contest than a two way sharing of information. I got very little out of it except a reminder of what 90's era dot-com interviews were like.

As per the NDA, applicants have to agree not to reveal questions. However, interviewers will progress rapidly through questions until they find one you don't know, so prepping answers won't help. Frankly, algorithm trivia is a dumb way to pick employees.   Answer Question

Feb 20, 2011
---------------
A recruiter got in contact with me. He was extremely friendly and excited to help me. He sent me interviewing tips and a cheat sheet of what to expect. I had 3 phone interviews and 4 one-on-one interviews (on-site). All of the interviews were extremely well-prepared. All interviews stayed exactly or less than 45 minutes. They seem to be very strict as to the duration of each interview. So if there was a tip I would give, it is to not talk too much and let the interviewer ask his questions so you have more time to solve the technical problems. In the end, this is what will matter. I would study up on at least the following: BFS, DFS, Hashtables, String Manipulation, Trees. For my level (3 years out of college) I did not find the algorithm questions to be anything that would be too hard. They are all answerable within 45 minutes. The key is to be able to understand the problem and identify an efficient solution as fast as possible. Also, the implementation is very key. Knowing to use BFS is not enough, you need to be able to implement it very fast too. I cannot provide you guys with the exact questions because I respect Google's NDA. However, the following are the kinds of questions that I was asked. I think as long as you are able to comfortably and accurately answer those types of questions in 45 minutes you will be fine (I usually get asked 2 algorithm questions in a 45 minute session).

Asked several questions about graph traversal. BFS and DFS.   Answer Question Asked a question about set theory. Be able to efficiently compute union, intersection, etc.   Answer Question Asked several questions about analyzing strings (e.g. longest common suffix).   Answer Question Asked questions on anagrams.   Answer Question

Feb 22, 2011
---------------
I was pulled in by a Google recruiter due to my LinkedIn profile. I was given 4, 45 minute interviews, mostly novice level technical problems. Bit manipulation, how to design the infrastructure behind some google services, string manipulation, iterator manipulation. I also had lunch at the cafeteria. Food is decent, but didn't live up to the reputation. Of the four interviewers, only the anchor was really competent as an interviewerk, the rest seemed like bored engineers who had been asked to take one too many hours out of their work-week for interviewing. No one could tell me anything exciting they were working on, despite NDA, which I took as a very worrisome sign. All in all it was just a very dreary experience.

Find all (english word) substrings of a given string. (every = every, ever, very)   5 Answers Design the backend for ad-words.   1 Answer

Mar 10, 2011
---------------
I was originally set up with two phone interviews back to back at a time convenient to me. The interviewers really just want you to show what you know, my second interviewer started asking questions on material that I hadn't learned so instead of failing me, they set me up with another interview a few weeks later. The interviews were done on the phone using a shared google document to show work on. There were two programming questions, pretty standard having to do with data structures/algorithms that sort of thing.

In one of the questions in the interview they asked me to build a tree iterator for a binary tree   1 Answer Given a list of strings return the substring representing the longest common prefix   3 Answers

Mar 28, 2011
---------------
The interview consisted of 2 phone interviews, each an hour in length. After getting past these, I was flown to Mountain View for a 6 hour interview that consisted of 5, 1 hour interviews with a different person and 1 hour for lunch. The phone screens were scheduled about 2 weeks apart, each was very technical. The onsite interview focused on programming problems with one of the interviewers asking me questions about my experience. All the people I met with were very nice.

Write a function to validate a binary search tree.   1 Answer Find the common numbers in two text files.   2 Answers

Feb 28, 2011
---------------
Recruiter emailed me to ask if I am interested in their company, and I replied "yes" with my resume attached. Coordinators emailed me to schedule time for phone interviews, and the interviewers called me for phone interviews. In the first phone interview it seems that they put me in the wrong position, someone from hardware department called me while I am a backend application software engineer. Second/third interviewers asked me technical questions but I didn't make it.

Design a class to process a matrix, and it needs to be able to return the average for the elements of arbitrary sub-rectangle inside that matrix, in constant time.   2 Answers Design a class to serialize / deserialze a graph.   1 Answer

Feb 18, 2011
---------------
I submitted my resume online. Google contacted me. First round is two back to back interviews on campus (my college, not Google =.=). Second round is 3 back to back phone interviews. My recruiter is very nice. I felt like she actually works for me, not google, to get the job.

design a cloud that sorts petabytes of numbers. Range of numbers are large. how efficient? Big O running time?   Answer Question A gmail user login. How do you store the account information so that it can be retrieved fast?   2 Answers Write a priority queue&lt;E&gt; with three methods. Insert(E Element, int priority). E Pop(), update(E Element, int new_priority)   Answer Question Write a stack that keeps track of min and max elements.   Answer Question

Mar 3, 2011
---------------
One week after I was emailed by the recruiter, I had a short chat on the phone with her. After that, a few days later, I was scheduled for a technical phone interview. The phone interview was way under my expectations: - the interviewer seemed arrogant (he told me quite many details about himself and wasted time on this subject - like he was working 12 years for Microsoft and 3 years for Google, etc) - there were no algorithms, data structures questions, etc - but a single language specific question instead

explain what's a C# enumerator, write a function to concatenate a list of enumerators and test this function   Answer Question

May 2, 2011
---------------
was asked a algorithm questions. gave an inefficient solution. was called after 4 days to say they are not moving forward. the questions are all old questions available online.

sort integer array in linear time   1 Answer

Mar 12, 2011
---------------
January 2011, Mt.View campus Visited Google first 5 years ago, that time was rejected. This time contacted by recruiter again, offered to come for the interview again. Sweeping Silicon Valley rumor mill brought several facts about interview practices – each interviewer has to submit rather detailed report to the hiring committee recording after you everything written on the white board and allegedly even recording what you say. Sometime 2 interviewers are talking to the candidate, in such cases second person is a trainee. Sometimes there are two rounds if Google is uncertain. Candidate has to select programming language of preference for the interview (my choice was C as I was applying to what recruiter called “kernel” positions in ChromeOS team). Was first met by the recruiter, he spent 10 mins with me, I asked about the practices above, even though he confirmed, but downplayed "exact recording of what candidate says part". Answered that written report on a candidate is about 1-2 typed pages on average. Total met 6 people, 5 technical, one lunch First interviewer: 1. General discussion on testing methodologies (why unit tests might fail?) 2. Asked me to code review some C++ code even though I explicitly selected that my language of preference is C. Couldn't say much as I don't use C++. 3. Asked to implement C++ method for a class "arbitrary reader" given we have a class 4K reader which can read only 4K blocks. Second interviewer: 1. Given two binary search trees, write function which tells if two such trees are the same – (i.e. same info in the nodes, same branching to left and right at every node). Recursive implementation was presented. Was asked to do non-recursive version (question was not about better solution, say, w/constant memory) – I proposed to change recursive algorithm to non-recursive with a user-defined stack (formal transformation rather boring but doable, FORTRAN people do it). Demonstrated that but code was messy with gotos, etc. Asked about complexity – both recursive and non-recursive versions required linear stack in worst case of pathological one-sided trees. Third interviewer: 1. Reverse bits in 32-bit integer. 2. Given two large files with 64-bit integers produce file with integers which are present in both files and estimate O(?) complexity of your algorithm. Proposed solution of splitting both files in n chunks (k integers in each) and solving n^2 subproblems while incrementally updating the result by merging sorted files of partial results (we will need to sort each chunk once). After algorithm was finalized, we checked the complexity and it was something cubic by n and k. Too bad. Navigated me to the solution to sort both files and find intersection by merging, this was better. As an afterthought I still think that when files do not have large overlap my solution might be winning as sorting original large files is not required (k should be selected so that each chunk could be sorted in memory, how about n=k=sqrt(file-size)?:). 3. One has a stream of queries coming over a day, how do you keep a cache of 1000 most-frequently used ones? Did not have time for this one. Fourth interviewer: 1. Asked light technical questions on past items listed in resume. 2. When you are doing "read()" call what it happening under the hood in user space? (answer needs to clarify how it is translated to a system call by libc). 3. How to find a median in a large file of 64-bit integers. I mentioned first the classical "order statistics" algorithm with splitting initial group into 5-tuples and finding median of medians, etc. My proposal on the problem was toadopt median algorithm to the case when we are dealing with large file – however no additional disk space could be used, it should be done "in place" and it is not clear for me if order statistics algorithm could be done easily with such restriction. Interviewer downplayed the order statistics deal and navigated me to the solution that I liked – keep in memory counters for binary intervals practically counting occurences of prefixes (say, 24-bit prefixes). After that we are able to tell what prefix range the median belongs to, recalculate index of the element to search instead of median and go over the particular prefix range and find it there. Sweet. After two week got rejection as not matching with current open positions.

Given two binary search trees, write function which tells if two such trees are the same – (i.e. same info in the nodes, same branching to left and right at every node).   6 Answers Given two large files with 64-bit integers produce file with integers which are present in both files and estimate O(?) complexity of your algorithm.   4 Answers How to find a median in a large file of 64-bit integers   1 Answer Input is a 4x4 table with letters. One starts from any of the 16 elements and can move in one step to any of the 8 neighboring cells not visited before (up, down, left, right, up-left, etc, no hyperspace jumps between rows 1 & 4, columns 1 & 4). Every time step is made letter in that cell is added so a word is built as we walk. These generated words are looked up in external dictionary (function to look up in the dictionary is provided, I did not understand significance of this dictionary well) and the goal of the exercise is to output all words generated by all possible table walks and which are contained in the dictionary.   4 Answers When you are doing "read()" call what it happening under the hood in user space?   2 Answers

Apr 22, 2012
---------------
I was cold-called one day by a Google recruiter. I initially indicated that Google wouldn't be a good fit because I didn't want to live in California, but he mentioned other offices, including the one in Boulder. Colorado is pretty similar to my home state of Utah. The first part of the interview was a one-hour phone interview. During the interview I was asked to solve a series of technical problems, including describing algorithms and providing big-O complexities. The questions started out fairly simple but rapidly increased in difficulty and complexity. The second part was a day-long in-person interview. Google flew me to Boulder for it. I had five one-hour interviews, each similar to the phone screen, except for the middle one which wasn't really an interview... it was lunch, with a chance to discuss the company with a Googler (as it turns out, my lunch "interviewer" is now my manager, so it was a great chance to get to know him). After the interview, it took about two weeks to get an answer from Google, and another week to get an offer. That was strange to me; in my experience decisions and offers usually come quicker. I've since learned how the process works, and because of the structure of the process, my experience is typical. The offer was so good that even though my family wasn't excited about moving to Colorado, there really was no question. I've since learned that very, very few people turn down Google's offers.

Imagine you are creating a program that can handle multiple requests at a time and respond to them as they come. Define run time, classes, and methods.   1 Answer

Mar 20, 2011
---------------
It was just an on-site interview with 2 separate engineers. Both involved coding problems. No real questions about my personal experience or strengths.... The office was amazing and most of the people were really nice. Although, during the interview I was getting condescending vibes from one of the interviewers.

data structure questions around graphs and trees but straight forward ones.   2 Answers

Mar 22, 2011
---------------
Surprisingly, my interviews were rather simple. Standard java problem solving questions. No red-black trees or any such data structures. No probability and no trick questions.

questions on the running time of quicksort and selection sort   Answer Question

Mar 13, 2011
---------------
45 minute technical phone interview. software engineer from the new york city site (manhattan). asked about prev work experience. asked one coding exercise using online doc sharing over the web.

Create a Java method that clones a DAG (Directed Acyclic Graph).   Answer Question

May 11, 2011
---------------
The process was long and arduous. First, got a recruiter screen with typical HR stuff. Then, after about 2 weeks, got a phone screen with an engineer. I needed to write code on a shared document while talking to the guy on the phone. Then the recruiter suddenly changed to a "senior recruiter" and the new one must have been the lousiest senior recruiter they had at the time. He forgot to schedule the onsite, never called or emailed back, rarely picked up the phone when called directly. After more than a month from the phone screen I finally went to the onsite interview. That went fairly well but due to the recruiter not doing his job hiring committee wanted more information. After another month I went back for another onsite. When I heard nothing for more than 3 weeks I asked to change a recruiter. Change was approved and after one more onsite I was extended an offer. Engineers performing the interviews were all professional and nice, no one asked any brain teasers etc. All questions were highly technical, on par with what I expected from reading Glassdoor and other sources. It would be a generally positive experience if it wasn't for the lousy "senior" recruiter.

No Question
Feb 21, 2011
---------------
Applied to a Chicago opening, an engineer from Mountain View called in for a phone interview. Friendly talk in the beginning, changed to coding over Google Docs, preoccupied with a practice problem, got into an ill-chosen data structure, couldn't finish coding in time,no moving forward...

No Question
Mar 8, 2011
---------------
They called me 1 month after sending my resume. After a first phone screening, we set a date for a phone interview. The day of the interview no one called me at the expected time, what was lame. I had to call the recruiter and push them to call me again that day because I had taken the day off only to do the interview. Another guy from the Colorado office called me 3 hours later. The interview consisted of some questions and then writing some code in a interactive GoogleDoc based on two algorithms, and analyze it. I nailed everything but got stuck in the second implementation of the algorithm, what got me out.

Describe Hashmap with details.   Answer Question Write code for depth first search in a binary tree (iterative or recursive) and explain what's the performance.   1 Answer Write code for Fibonacci algorithm (iterative or recursive) and explain what's the performance.   3 Answers

Jan 13, 2011
---------------
Phone interview started off easy with basics of C++ since that is the OO Language of choice. Then it progressed into some really simple problem solving questions which is messed up but managed to solve a whole 10 minutes later after an awkward pause because of all the pressure of talking to Google, but i recovered later on in the data structures questions. If you come to think of it the problem solving question was part of an algorithm question too. I was too excited ... didn't sleep the night before, couldn't think straight and completely messed up. Moral of the story : Get plenty of sleep on the night before.

Why did you Pick C++ instead of any other dynamic languages out there?   2 Answers

Jan 18, 2011
---------------
I applied for the youtube job on their website and got a call after a week from their recruiter HR. Initially the HR forwarded me the wrong job profile. The job profile was for team lead and I am a developer. She asked me to study python for interview. Few days later, the other HR mailed me confirming the date for phone interview. This time she forwarded the correct job profile. The interviewer called after 10 mins of scheduled time. Intially she mistook me for some other candidate. There was no formal introduction or description of the role or project. She seemed busy and she directly asked me if I am willing to work on php or python and Mysql. And then she proceeded with questions.

How will you assign ACLs to users or groups? Theoritical discussion no code required.   Answer Question Which is the toughest SQL code you have ever coded?   Answer Question Convert a one dimesional array of Strings containing [a,b,c, d,e ...z] to 2 dimensional array of a2[aa,bb,cc]   Answer Question Why do you want to work for google?   Answer Question How would you calculate the number of gas stations needed in the US?   Answer Question

Feb 23, 2011
---------------
Contacted by google recruiter to schedule the phone screen interview. I set it up for a couple of weeks later because I was too busy at work. The questions during the phone interview were not very difficult, but I could definitely have done better if I had some more time to prepare. Definitely dust off algorithms, data structures, and read some coding related interview books. If I took a couple of months to do that I'd definitely ace this. The guy was very nice, gave a hint when he felt I need one. Although I came to a solution it wasn't optimal. There was also a coding question which we did through a google-doc. Make sure to take time to double check all cases for the coding solutions. After the interview I found that the problems were part of a standard list of google problems. **Find the median of a very large dataset distributed over several network nodes. ** the coding question was something about writing an iterator.

Find the median of a large set of numbers distributed over several machines in a network.   Answer Question

Aug 8, 2015
---------------
It was back in 2010, it started with a phone call from a recruiter, he was pretty informative. Then a single phone interview round which i did not pass unfortunately for a total mental block on a binary search question .. Generally, the interviewer was professional, she kept trying helping me out but seriously if you just can't recall something called binary search there's little they can do with such simple question .. eventually, she finished in a very friendly manner .. so as to keep my hopes alive .. till i receive the formal rejection ..

Given a sorted array, how would you go about searching for a single item in there   Answer Question

Sep 20, 2014
---------------
Hands down one of the best experiences I have had. HR contacted me for a phone interview. Gave an interview and within 2 hours, I got a call for onsite interview. The onsite interview had 5 rounds plus on lunch interview. The questions were based into 3 categories - Coding, Design and Open ended questions and interviewers are required to make sure all these categories are covered thoroughly. Interviews were more like discussions and interviewers treated me like a human who can make mistakes rather than some machine which will spew out answers the next second.

Open ended questions were quite interesting - How would Google transfer data between phone and its cloud when it doesn't own the cell tower.   1 Answer

Aug 28, 2011
---------------
I got a phone call with an IQ test, some recursion problems, etc. The guy who called presented a problem and asked me to solve it which I feel I did correctly. The solution was as efficient as possible.

Implement B+tree.   Answer Question How can you optimize the code written for B+ tree.   Answer Question

Mar 3, 2011
---------------
First round was a telephonic round : Questions related to algorithms, java, python, unix and operating sytems. Then an on-site interview 1:1 consisting of 6 rounds. Most of them focusing on the above topics with different problems and questions.

The phone screen was the hardest. It was something that involved two separate concepts - one was a dynamic programming algorithm and the other was a trie data structure - and somehow combining them to make up the answer. I don't remember the exact question, but somehow it involved storing the words in a dictionary into the trie structure and then using the algorithm to determine something...   Answer Question

Jul 22, 2012
---------------
I was contacted by a YouTube recruiter by phone - presumably after he saw my resume on LinkedIn. After a phone screen, I was called in for a round of in-person interviews. It was around 6 people over about 4 hours. From my understanding, Google usually goes through multiple on-site interviews, but since I already had an offer from a major competitor, I convinced them to speed up the process and make do with only one on-site. I got the offer about 2 weeks later and accepted it. The questions were standard CS algorithm/design/coding questions, but cumulatively were definitely the hardest round of questions I've ever faced. I don't remember them any more, but they really made me think. Google lives up to it's tough-as-nails-interviews reputation.

Implement a blocking queue in Java.   1 Answer Implement a system to serialize and deserialize strings   Answer Question

Feb 7, 2012
---------------
Started with tech recruiter: asked me 10 multi-choice questions around a variety of computer science stuff, Java, C++, http, etc. This was just a smoke test to weed out people quickly - if you studied CS this is really easy. Then I had two phone interviews: both were technical, asked CS algorithm style questions, runtime analysis is very important here. Then I had one onsite interview, consisting of 4 interviews. Again these questions were about data structures and algorithms (blocking queue, a heap like structure, string serialization). I liked all the interviewers, they were friendly to me and we had some great dialog. Seemed like a great place to work. They knew I had interest from other companies, so they rushed the offer process. The recruiters were very friendly, but definitely were a bit pushy wanting a decision from me quickly.

No Question
Mar 3, 2011
---------------
First round was a telephonic round : Questions related to algorithms, java, python, unix and operating sytems. Then an on-site interview 1:1 consisting of 6 rounds. Most of them focusing on the above topics with different problems and questions.

Implement B+tree.   Answer Question How can you optimize the code written for B+ tree.   Answer Question

Jul 22, 2012
---------------
I was contacted by a YouTube recruiter by phone - presumably after he saw my resume on LinkedIn. After a phone screen, I was called in for a round of in-person interviews. It was around 6 people over about 4 hours. From my understanding, Google usually goes through multiple on-site interviews, but since I already had an offer from a major competitor, I convinced them to speed up the process and make do with only one on-site. I got the offer about 2 weeks later and accepted it. The questions were standard CS algorithm/design/coding questions, but cumulatively were definitely the hardest round of questions I've ever faced. I don't remember them any more, but they really made me think. Google lives up to it's tough-as-nails-interviews reputation.

The phone screen was the hardest. It was something that involved two separate concepts - one was a dynamic programming algorithm and the other was a trie data structure - and somehow combining them to make up the answer. I don't remember the exact question, but somehow it involved storing the words in a dictionary into the trie structure and then using the algorithm to determine something...   Answer Question

Feb 7, 2012
---------------
Started with tech recruiter: asked me 10 multi-choice questions around a variety of computer science stuff, Java, C++, http, etc. This was just a smoke test to weed out people quickly - if you studied CS this is really easy. Then I had two phone interviews: both were technical, asked CS algorithm style questions, runtime analysis is very important here. Then I had one onsite interview, consisting of 4 interviews. Again these questions were about data structures and algorithms (blocking queue, a heap like structure, string serialization). I liked all the interviewers, they were friendly to me and we had some great dialog. Seemed like a great place to work. They knew I had interest from other companies, so they rushed the offer process. The recruiters were very friendly, but definitely were a bit pushy wanting a decision from me quickly.

Implement a blocking queue in Java.   1 Answer Implement a system to serialize and deserialize strings   Answer Question

Dec 14, 2010
---------------
Friendly interviewer asked lots of technical questions about data structures and algorithms. I hadn't formally studied those in a long time and so obviously it didn't go very well.

What are the complexity characteristics of all the operations that you can perform on the data structures that you can think of?   Answer Question

Dec 24, 2010
---------------
Applied online. Was contacted by a recruiter immediately and a phone interview was scheduled. Later, was called for a 1:1 interview session in NY. 4 interviews. Got a 'No' in a week after I returned.

Phone Interview: i) Find the number of inversions in an array (describe & code) ii) Find collinear points in a given set of 2D points (describe & code)   4 Answers Onsite: Can't reveal the questions - signed NDA. The questions consisted of algorithm design, implementation. Designing solution to large problems and speaking them out/writing them out. Interviewers were nice. I was not good enough :)   Answer Question

Jan 8, 2011
---------------
Had an on-site interview few years ago but didn't get an offer at that time. Recently an internal recruiter contacted me if I'm interested in Software Engineer position. He immediately scheduled a phone screening even though I had an on-site interview once. The interviewer was from completely different job and questioned me a lot of irrelevant questions. Although I did write the code right for his question, he didn't seem to like me for some reasons. I wasn't invited for on-site this time even I'm well qualified. Google hiring process is really high false negative rate. The recruiter apologized me for the outcome but he wasn't able to do anything once the decision is made by the engineering team. I got to wait for another few years until I re-apply.

Search smallest value from a tree. What if you have enough memory, how to improve the speed?   4 Answers

Jan 24, 2011
---------------
* Write iterator class encapsulating in-order traversal of a binary tree. What is a time complexity? What is a worst case? * You have a collection of html documents grouped by a source web site . You need to count frequencies of bi-grams across all documents and present it in a sorted order (may be return top N frequent bi-grams). How would you approach it? How to filter out non-significant bi-grams? How to distribute and merge? What data structures to use to keep counters? * OOP. Write classes representing expression tree for a simple calculator. You care only about constants and basic binary operators. Write function evaluating expressions. * N clients - M servers. Each server can handle limited number of queries/sec. How to improve availability and performance ? * Write code to shift a string with rotation [a, b, c << 2 = 2 c, a, b] * How to count frequencies of characters in a string. What if the string is too huge? When is it reasonable to distribute across machines? How to find the most frequent character in the distributed scenario with a minimum data exchange between machines? * You are given a huge stream of geo coordinates. Unordered. Return list of objects in a specified radius from some point X.

Count bi-grams in a huge collection of documents grouped by source web site.   1 Answer

Feb 9, 2011
---------------
The interviewer asked a few questions about my resume. I think I talked to long when the interviewer said, "tell me about yourself". Be careful with that question, the interviewer is probably just looking for a couple of key points. Also, use the opportunity to say something personal so they know you're a real person.

Was asked how I would implement division without using division or mod operators. The answer should return in the form quotient r remainder.   8 Answers Was asked to implement a Linked List insertion.   1 Answer

Feb 11, 2011
---------------
The recruter called me first and set up the interview, he also sent me some information about the position, and some topics I may need to parepare, such as basic algorith, data strcture, and said that the iterviewer will send me an email to set up the google doc for coding then. The interviewer first asked several questions about my research, then we went directly for coding. The question is about the move (up move) of a robot.... he didn't describe the problem very clear, so I have to ask him to clarify it. I think he might thought that it's already be very clear, however, I do not have any background information or the problem senario. Anyway, when I stuct there, he even didn't talk to me or try to help me to prob the problem, so we had a long time silence. Then I realized that it's a problem, so I started to imporve the code. It turns out the problem is not that difficult, but you really should understand it well.

Write the code for "moving of the robot": there is a "generator" -- each time generate 1/0, when 1 the robot will move up, when 0 will go down, write the function to make the robot move up forever.   3 Answers

Nov 7, 2010
---------------
I greatly anticipated this interview. Many engineers, including me, wants an opportunity to work with the best and the brightest. But the interview went wrong in many ways, and it changed my mind about wanting to work at Google. The on site interview was 3 sessions 45 minutes each. 1) The recruiter was incredibly slow. It took almost three weeks for the on site to be scheduled. He often promised to get back to me tomorrow, then I don't hear from him for 5 days. It was frustrating working with him. But I kind of expected this since my friends who interviewed before had similar experience. 2) The first interviewer had a strong accent. I couldn't understand him so I had to ask him to repeat many times. I felt like I was being rude, but thinking back, his inability to explain the questions was cutting into my time to answer them. Then he asked me to review some C++ code. Wait a minute, I am a Java programmer and the recruiter said the interview will be conducted in Java. The last time I used C++ was 7 years ago. I explained it to him, but he insisted, I gave it my best shot while struggling with syntax. 3) The second interviewer was arrogant and rude! He seemed like he didn't want to be there. Again, asked me to code a problem that is only relevant in C++. I gave it the best answer in Java. He argued with me that it will not work, then I had to explain to him null assignment in Java also deallocates a variable because of GC. He wouldn't admit he was wrong, so he made a degrading comment about how Java programmer knows nothing about memory management. Then he asks a harder question basically requires putting everything in a hashmap then check for a match. He rudely interrupts me while I tried to explain my thoughts. At one point, I literally got a little angry. I happen to be a pretty patient and none confrontational person. I think he had a canned answer in mind, and he didn't want to listen to anything else. 4) The third interviewer was 7 minutes late, but he was nicer. He seemed cocky about working at google. Many things he said started with something like "at google, this is how we do...". The questions he asked was a little confusing. I had to ask many follow up questions to understand it. If they are looking for someone with C++ skills, then why waste half day of my time. After meeting these interviewers, I recognized that my friends, who work at google, have the same arrogance. The same arrogance a Microsoft recruiter once shown me when I first graduated from college. Look at where they are now. Google is on track to become just like them. If this is what google represents, a prestige driven egotistic cult, then I don't want to be a part of it.

Remove a node from a singly linkedlist without knowing the head node. All you have is the node itself.   5 Answers Find a sequence with max sum in an array of negative and positive real numbers.   14 Answers

Apr 14, 2011
---------------
I am not a CS major. They asked one question about communication through the internet. Then several simple algorithm questions.

What problem you may run into if you want to send one file from one place to another through the internet.   1 Answer

Jan 29, 2012
---------------
There was one phone screen, two phone interviews, and one in person interview. The phone interviews were mostly puzzle solving and algorithms. The in person interview was all just your basic CS questions. Oddly enough they didn't ask much about my background, anything on my resume, or any of my side projects. I would recommend you know your CS algorithms and data structures, and to practice puzzle solving since you will definitely be asked a lot of those.

What was the hardest problem you've ever solved and how?   Answer Question How do you implement a hash?   Answer Question

Jun 24, 2012
---------------
Overall know your algorithms and theory. Be comfortable coding on a whiteboard.

Write an application to solve a game of boggle.   Answer Question Write a substring text parser.   Answer Question

Nov 27, 2010
---------------
Google recruiter picked my Linkedin profile and contacted me. Initial phone conversation with her was followed by the first phone interview with a manager (each manager I talked to stressed he was totally hands-on, just like other developers, plus carried managerial responsibilities). I'd say this was probably true based on the types of questions he asked. He mostly asked me about my current and past jobs, projects, accomplishments, approaches to design, team work, etc - pretty much "traditional" relaxed semi-technical interview questions. This one went extremely well, as per my recruiter's feedback. The next one also went well - now with the team lead for the group they wanted me for. A few design questions, one technology question (what do you think of usingan 24, 2011
---------------
* Write iterator class encapsulating in-order traversal of a binary tree. What is a time complexity? What is a worst case? * You have a collection of html documents grouped by a source web site . You need to count frequencies of bi-grams across all documents and present it in a sorted order (may be return top N frequent bi-grams). How would you approach it? How to filter out non-significant bi-grams? How to distribute and merge? What data structures to use to keep counters? * OOP. Write classes representing expression tree for a simple calculator. You care only about constants and basic binary operators. Write function evaluating expressions. * N clients - M servers. Each server can handle limited number of queries/sec. How to improve availability and performance ? * Write code to shift a string with rotation [a, b, c << 2 = 2 c, a, b] * How to count frequencies of characters in a string. What if the string is too huge? When is it reasonable to distribute across machines? How to find the most frequent character in the distributed scenario with a minimum data exchange between machines? * You are given a huge stream of geo coordinates. Unordered. Return list of objects in a specified radius from some point X.

Count bi-grams in a huge collection of documents grouped by source web site.   1 Answer

Feb 9, 2011
---------------
The interviewer asked a few questions about my resume. I think I talked to long when the interviewer said, "tell me about yourself". Be careful with that question, the interviewer is probably just looking for a couple of key points. Also, use the opportunity to say something personal so they know you're a real person.

Was asked how I would implement division without using division or mod operators. The answer should return in the form quotient r remainder.   8 Answers Was asked to implement a Linked List insertion.   1 Answer

Feb 11, 2011
---------------
The recruter called me first and set up the interview, he also sent me some information about the position, and some topics I may need to parepare, such as basic algorith, data strcture, and said that the iterviewer will send me an email to set up the google doc for coding then. The interviewer first asked several questions about my research, then we went directly for coding. The question is about the move (up move) of a robot.... he didn't describe the problem very clear, so I have to ask him to clarify it. I think he might thought that it's already be very clear, however, I do not have any background information or the problem senario. Anyway, when I stuct there, he even didn't talk to me or try to help me to prob the problem, so we had a long time silence. Then I realized that it's a problem, so I started to imporve the code. It turns out the problem is not that difficult, but you really should understand it well.

Write the code for "moving of the robot": there is a "generator" -- each time generate 1/0, when 1 the robot will move up, when 0 will go down, write the function to make the robot move up forever.   3 Answers

Nov 7, 2010
---------------
I greatly anticipated this interview. Many engineers, including me, wants an opportunity to work with the best and the brightest. But the interview went wrong in many ways, and it changed my mind about wanting to work at Google. The on site interview was 3 sessions 45 minutes each. 1) The recruiter was incredibly slow. It took almost three weeks for the on site to be scheduled. He often promised to get back to me tomorrow, then I don't hear from him for 5 days. It was frustrating working with him. But I kind of expected this since my friends who interviewed before had similar experience. 2) The first interviewer had a strong accent. I couldn't understand him so I had to ask him to repeat many times. I felt like I was being rude, but thinking back, his inability to explain the questions was cutting into my time to answer them. Then he asked me to review some C++ code. Wait a minute, I am a Java programmer and the recruiter said the interview will be conducted in Java. The last time I used C++ was 7 years ago. I explained it to him, but he insisted, I gave it my best shot while struggling with syntax. 3) The second interviewer was arrogant and rude! He seemed like he didn't want to be there. Again, asked me to code a problem that is only relevant in C++. I gave it the best answer in Java. He argued with me that it will not work, then I had to explain to him null assignment in Java also deallocates a variable because of GC. He wouldn't admit he was wrong, so he made a degrading comment about how Java programmer knows nothing about memory management. Then he asks a harder question basically requires putting everything in a hashmap then check for a match. He rudely interrupts me while I tried to explain my thoughts. At one point, I literally got a little angry. I happen to be a pretty patient and none confrontational person. I think he had a canned answer in mind, and he didn't want to listen to anything else. 4) The third interviewer was 7 minutes late, but he was nicer. He seemed cocky about working at google. Many things he said started with something like "at google, this is how we do...". The questions he asked was a little confusing. I had to ask many follow up questions to understand it. If they are looking for someone with C++ skills, then why waste half day of my time. After meeting these interviewers, I recognized that my friends, who work at google, have the same arrogance. The same arrogance a Microsoft recruiter once shown me when I first graduated from college. Look at where they are now. Google is on track to become just like them. If this is what google represents, a prestige driven egotistic cult, then I don't want to be a part of it.

Remove a node from a singly linkedlist without knowing the head node. All you have is the node itself.   5 Answers Find a sequence with max sum in an array of negative and positive real numbers.   14 Answers

Apr 14, 2011
---------------
I am not a CS major. They asked one question about communication through the internet. Then several simple algorithm questions.

What problem you may run into if you want to send one file from one place to another through the internet.   1 Answer

Jan 29, 2012
---------------
There was one phone screen, two phone interviews, and one in person interview. The phone interviews were mostly puzzle solving and algorithms. The in person interview was all just your basic CS questions. Oddly enough they didn't ask much about my background, anything on my resume, or any of my side projects. I would recommend you know your CS algorithms and data structures, and to practice puzzle solving since you will definitely be asked a lot of those.

What was the hardest problem you've ever solved and how?   Answer Question How do you implement a hash?   Answer Question

Jun 24, 2012
---------------
Overall know your algorithms and theory. Be comfortable coding on a whiteboard.

Write an application to solve a game of boggle.   Answer Question Write a substring text parser.   Answer Question

Nov 27, 2010
---------------
Google recruiter picked my Linkedin profile and contacted me. Initial phone conversation with her was followed by the first phone interview with a manager (each manager I talked to stressed he was totally hands-on, just like other developers, plus carried managerial responsibilities). I'd say this was probably true based on the types of questions he asked. He mostly asked me about my current and past jobs, projects, accomplishments, approaches to design, team work, etc - pretty much "traditional" relaxed semi-technical interview questions. This one went extremely well, as per my recruiter's feedback. The next one also went well - now with the team lead for the group they wanted me for. A few design questions, one technology question (what do you think of using technology X for solving the problem Y?). Plus one pretty simple algorithm that I was asked to explain on the phone, although my recruiter initially told me about coding using Google's online collaborative tools. It was awkward to just "talk" through this an integral part of an interview at google. You should be real real real good at coding and also your concepts(needless to say) of OS, etc. Read some google papers (research) and know about google products.

Differences between two programming languages appearing in your CV (the interviewer chooses which ones)   Answer Question

Aug 18, 2010
---------------
I received an email from one of Google's recruiters offering me the possibility of getting into the hiring process for a Software Engineer position. After a relatively simple phone interview which included a programming problem (not necessary to provide code, just a solution) I was invited for an on-site interview. My agenda there consisted of 5 different interviews (all of them with Google's engineers). In each of them I was asked about the fundamentals of CS and was also given a programming problem. For most of them you had to provide code (C was always an option for this) and analyze the computational complexity of the solution. I left the offices thinking I could have done better. Maybe I was just too nervous or too in need for the job.

Reverse a linked list in place   4 Answers

Aug 25, 2010
---------------
They had a really laidback group of engineers interview me with mostly technical programming questions, and some trick questions thrown in. They had a sheet which they use to record what prior interviewers asked, so they could cover different problem types. The questions became more difficult at the end of the day since the earlier interviewers had asked more classical problem-solving tehchnique (solutions used classical data structure).

No Question
Sep 23, 2010
---------------
The initial call was from the recruiter who asked me about my background and a quick pop quiz (true or false) of 10 tech questions. Answered 9 of them correctly and had a telephone interview with a Google engineer. The initial part of the interview was more about the group, their product and my knowledge about the market surrounding the product. The next part was technical with me having to code to check if the Suduko square is valid. Managed to answer correctly. Coded in C. The interviewer was professional asked me to use the language of my choice.

Write code to check the validity of a suduko square   1 Answer

Oct 5, 2010
---------------
Algorithm to partition array (on the left side zeros on the right side other numbers). Use in-place optimal solution.

Partition an array in such way zeros to be moved on the left side of the array, other numbers on the right side of the array. Extra storage not allowed, only in-place.   6 Answers

Aug 17, 2010
---------------
It was my dream to interview with Google. I applied earlier but got a call now. Recruiter calls me and ask me if I am interested in a job opening at Google. He setup a phone interview. Phone interview lasts for 45 minutes. He asked me a question and ask me to code into the shared Google doc. That went fine. Next day I got a call for on-site. There are 5 on-site 1:1 interviews with one lunch interview. Interviewers are really smart people. I enjoyed talking with them. All of them were from engineering.

I really don't want to confuse you people with the hard questions. Questions were ok if you know the basis and do programming on day to day basis then it's fine.   Answer Question

Jul 3, 2012
---------------
I talked with interviewer about some technique questions. They asked a lot about algorithm. I answered all of the questions.

Why are you choosing google.   Answer Question why do you think google fits you   Answer Question

Jan 31, 2012
---------------
For this Google phone interview, I got a 25 year old programmer who had limited experience, but who in his arrogance believed that because he worked for Google, he was a world-class computer scientist. As you might imagine, I couldn't convince him that I knew anything at all, despite my own success and experience. Would I interview with Google again? No, thanks!

Design the back-end for facebook.   1 Answer Design an iterator for a collection of collections in java. The iterator should hide the nesting, allowing you to iterate all of the elements belonging to all of the collections as if you were working with a single collection.   2 Answers

Jul 14, 2010
---------------
I first did a phone interview, in which I was asked to design the file system behind their index. Then, in my first in-person interview, I was asked various typical Interview 2.0 style questions. It seemed very focused on 'how fast can you find the clever solution to this problem'. I answered questions in c and java, mostly very basic data structure manipulations questions (implement a stack using a queue, collection of collections, etc). The most interesting question I got asked was how to do the backend for facebook. A second call back interview was supposed to focus on design, but wound up asking me very similar data structure questions because the senior interviewers I was supposed to meet with were not available, and I got junior engineers instead.

What's the difference between a non-exclusive lock and an exclusive lock?   Answer Question

Apr 22, 2012
---------------
The scheduling of the interviews took a few emails. I was directed from one person to another for about three times. In the meanwhile I was asked a few times about my grades, by different recruiters. Finally I had two phone interviews. One was a coding assignment on Google Docs. I was asked to code the solution for printing the nodes of a tree. The second interview was also technical. I was asked a range of questions varying from locking to discrete math. In the end I didn't get the offer.

can't disclose   Answer Question

Jul 20, 2010
---------------
Applied online. Contacted by recruiter, set up telco. After that, set up telco for technical interview on phone with detailed instructions on what to prepare. Technical telco went fine, invited to onsite interview. Onsite interview standard - 5 sessions with one additional for lunch. Questions mostly coding on whiteboard. Interviewers nice. Office space large and nice. Heard back after 1 week that no offer will be made.

Write a method that finds depth of a (non-balanced) binary tree.   3 Answers Given unsorted sequence of billions of numbers that cannot all fit in memory at the same time, find the median of these values.   3 Answers Implement a method that matches an entire string with star wildcard pattern, e.g. returns true for ("*ogle", "Google"), but false for ("fragile*", "agile") - without using regular expression language support.   2 Answers

Jul 27, 2010
---------------
Google ain't all that. First, their time frame is too drawn out; they schedule in person interviews anywhere from 2 to 4 weeks after the phone screening. Second, it takes most of the day; I had to take a day off for this... unfortunately. Ask if you can break it up in two visits, I felt my answers gradually went downhill after lunch. Third, uneven question quality. The first question I was asked was to implement a remove method on LinkedList (wtf is this - internship position?). The last one had to do with finding a median on an unknown unsorted collection of numbers of enormous magnitude without loading it all into memory. The engineer who asked that one had poor conversational English, making it harder still. All in all, pretty algorithm-specific, very little attention paid to OOD skills, requirements analysis etc. Finally, to give them credit, the onsite interview was Friday, and the decision was made the following Monday because I asked them to accomodate my schedule. BUT: the recruiter never replied to my subsequent email or phone call after I asked him to elaborate on how the decision not to move forward was reached... kinda rude after having someone take all that time to go through the motions. I figured I did well on at least 75-80% of the discussions, so I'd like to know how high the bar is anyway??? One other thing that stood out is that he said I could try again in a year... uh, sure - let me just mark my calendar. All in all, a great place to start your engineering career, but the process is somewhat insulting to a seasoned professional with many years of experience.

Given a search terms, find the minimum window containing all the words   3 Answers There are n pots with different # gold coins in them. Two players play a game, where each player can select a pot at either ends. maximize the gold   7 Answers

Aug 16, 2010
---------------
A recruiter contacted me based on my resume, base on my prior application more than 4 years ago. I sent an updated resume and references of classmates currently working at the company. Based on prior interview and references, there was no phone interview. The recruiter set up an on-site interview. Questions were all based on algorithms, data-structures and problem solving skills. Had to write code on the board. Was able to give general direction and could not solve the problem completely at all times. Did decently well, but did not meet the expectations of 1 or more interviewers. But was a positive experience.

No Question
Jul 27, 2010
---------------
Google ain't all that. First, their time frame is too drawn out; they schedule in person interviews anywhere from 2 to 4 weeks after the phone screening. Second, it takes most of the day; I had to take a day off for this... unfortunately. Ask if you can break it up in two visits, I felt my answers gradually went downhill after lunch. Third, uneven question quality. The first question I was asked was to implement a remove method on LinkedList (wtf is this - internship position?). The last one had to do with finding a median on an unknown unsorted collection of numbers of enormous magnitude without loading it all into memory. The engineer who asked that one had poor conversational English, making it harder still. All in all, pretty algorithm-specific, very little attention paid to OOD skills, requirements analysis etc. Finally, to give them credit, the onsite interview was Friday, and the decision was made the following Monday because I asked them to accomodate my schedule. BUT: the recruiter never replied to my subsequent email or phone call after I asked him to elaborate on how the decision not to move forward was reached... kinda rude after having someone take all that time to go through the motions. I figured I did well on at least 75-80% of the discussions, so I'd like to know how high the bar is anyway??? One other thing that stood out is that he said I could try again in a year... uh, sure - let me just mark my calendar. All in all, a great place to start your engineering career, but the process is somewhat insulting to a seasoned professional with many years of experience.

Write a method that finds depth of a (non-balanced) binary tree.   3 Answers Given unsorted sequence of billions of numbers that cannot all fit in memory at the same time, find the median of these values.   3 Answers Implement a method that matches an entire string with star wildcard pattern, e.g. returns true for ("*ogle", "Google"), but false for ("fragile*", "agile") - without using regular expression language support.   2 Answers

Aug 16, 2010
---------------
A recruiter contacted me based on my resume, base on my prior application more than 4 years ago. I sent an updated resume and references of classmates currently working at the company. Based on prior interview and references, there was no phone interview. The recruiter set up an on-site interview. Questions were all based on algorithms, data-structures and problem solving skills. Had to write code on the board. Was able to give general direction and could not solve the problem completely at all times. Did decently well, but did not meet the expectations of 1 or more interviewers. But was a positive experience.

Given a search terms, find the minimum window containing all the words   3 Answers There are n pots with different # gold coins in them. Two players play a game, where each player can select a pot at either ends. maximize the gold   7 Answers

Aug 23, 2010
---------------
A recruiter (HR) from Google sets up a phone interview with an engineer from Google, based on your availability. The process was quick and easy. After a few days, another interview was setup and within 5 days I got a response from the company, The interviews went as they were described, one hour each. The first was entirely technical, the second covered a wide range of topics.

How will you determine two graphs are the same?   3 Answers What happens when you enter a URL in a browser? How does a DNS system work?   2 Answers

Sep 2, 2010
---------------
Google is a great company with great work ethics. You will realize this as soon you talk to the HR. They are very polite and gives a good understanding of the interview process and enough materials for preparation. Here's is the details of my First Phone Interview - The technical interview are all programming interview and data structure based. It started with some basic java questions like describe threads, inheritance, abstract vs interfaces, static, final. I was next asked to describe a shortest path algorithm in a graph. I was then asked about a solution for file upload issue that interviewer has faced. It was like there was some issue in uploading more then 3 files at a time. So how will you restrict that only 3 files are uploaded at a time where user can enter any number of files. So basically 3 files at a time till all the files are done. My answer was will maintain a count variable. He asked me alternate solution's. I said we can use a stack. He then asked me to write the code using the stack solution. He had the google doc window shared where i wrote the code.

Different ways of implementing   1 Answer

Jul 1, 2010
---------------
The final round consisted of 3 interviews and all of them were in a similar vein. They started out with a small problem and asked for the algorithm to solve it and then increased the scale and complexity of the problem. It was an interesting experience, Most questions were simple string based or graph questions. MapReduce was also asked.

How would you desing a web proxy?   Answer Question How would you count the frequency of letters in a word/ file?   Answer Question

Aug 4, 2010
---------------
Had an initial recruiter calling me since I was referred. Was mentioned if I get 2-3 employees referring me, I can skip phone interview. Yet, proceeded with phone interview (1 person 30 minutes). Went on-site for 5 interviews, all asking for algorithm questions, such as implementing a calendar such as outlook and how to identify conflicts. I think I did pretty well in the interviews, answered them all. Provided references and recommendation letter, but yet was rejected.

Reverse bits of a digit   1 Answer Implement a calendar system that identifies conflicts   Answer Question

Aug 5, 2010
---------------
Phone interviews : asked me really simple question , some problem solving questions and question from JAVA. there were 3 questions per interview and both interviews lasted 45 minutes each.

Sort the entries in database in single pass?   Answer Question

Jan 13, 2011
---------------
1. Ask the problem and solution of my previous project 2. Introduct one of my favorite course project 3. Explain Binary Search Tree 4. Find the next larger node and write down code in BST 5. Check whether a string is symmetric, how to test your result

Find the next larger node and write down code   1 Answer Check whether the string is symmetric, how to test your result   6 Answers

May 9, 2012
---------------
5 individual interviews with the barage of puzzle-like technical questions. Must write perfect code and come up with a good solution. 2 were positive experiences, 3 were not (interviewers seemed a bit condescending).

Design an efficient service that allocates phone numbers to mobile customers.   Answer Question

Jul 7, 2011
---------------
Passed first, failed second. The second interviewer seemed that he was determined to fail me. The first question he asked is "You don't have much background in SW, why did u apply?"...why did u decide to interview me then....wth Anyways, he asked me "write a function that caculates the angle between minute and hour hand". I was able to solve it pretty quickly...then he accused me of knowing the answer in advance....(WTF again) so yeah whatever.

Write a function to caculate the angle between hour and minute hand on a clock.   9 Answers

Jul 7, 2011
---------------
Passed first, failed second. The second interviewer seemed that he was determined to fail me. The first question he asked is "You don't have much background in SW, why did u apply?"...why did u decide to interview me then....wth Anyways, he asked me "write a function that caculates the angle between minute and hour hand". I was able to solve it pretty quickly...then he accused me of knowing the answer in advance....(WTF again) so yeah whatever.

Write a function to caculate the angle between hour and minute hand on a clock.   9 Answers

Oct 2, 2010
---------------
Was contacted by Google initially, asked for up to date resume. Then had phone screen checking for where I'd like to work and what I'd like to do, followed by a technical phone screen which consisted of a a few technical questions and a programming problem done over Google docs. Once this was passed, was offered to interview at the New York office with five 1 on 1 interviews over one day. Was notified shortly after interview that no offer would be extended. Would recommend applicants review as many programming puzzles as possible and know all your data structures and algorithms inside and out, especially all Big O notation stuff. Google makes this clear during the process and gives you helpful websites to brush up pre-interview.

This is not a question from the day but gives you an idea of what to expect. Given an array of numbers and another number, work out whether the array of numbers can be manipulated using standard mathematical techniques to equal the other number given. e.g. given 5 and 10, can you make 50? 5 * 10 = 50, so yes.   3 Answers

Dec 29, 2012
---------------
HR resume screen Hiring manager resume screen (if the position is team-specific) 1 or 2 phone interviews 4 onsite interviews

Most are technical questions, and what they are looking for is your thought process on how you come up with the solution (of course a correct / optimized one).   Answer Question

Jun 2, 2010
---------------
The interview processes began with a phone/computer interview. I was on the phone with a software engineer but we were sharing an online whiteboard to look at code. I was given a short program in Java (equivalent programs in other languages were available) and asked to identify what it did. I was then asked to optimize the code to do this faster and to analyze its big O complexity. The second round of interviews were on-site face to face. Was asked to solve problems on the whiteboard. General advice: you really have to know your fundamental data structures and algorithms inside out. Trees, graphs, linked lists. Don't forget Big-O.

You have a simple search consisting of search terms that are OR'ed together, ie: Cats AND Dogs. You have a set of documents possibly containing those terms and you have the positions of those terms in each document. How would you search for Cats AND Dogs?   1 Answer

Jun 15, 2010
---------------
Some nice recruiter called my desktop via linkedin, and he arranged one telephone interview. I did pretty good and the experienced guy asked me to talk onsite. To short the time, I ask the recruiter to condense the interview into one afternoon instead of 1 day. The interview process is different from other company, and no hiring manager, just the interviewing panel -- some folks just focused review. I talked with 5 folks, and the question is easy for one people with experience. Not that brain-teaser issues or some dynamic-programming in textbook. I am pretty positive on the process. Then the recruiter needs collecting all feedback and submits the result to the hiring committee. But the process took too long, 2 weeks has no answer even they ask me wait patiently. After I got some offer, and call them to check: they said no perfect fit, and decide not to continue

write a function to calculate X^N   5 Answers

Jun 24, 2010
---------------
A Google representative came to my school and I submitted my resume. After about two weeks I got a call back for a phone interview. Two phone interviews back to back. Challenging but fun. Then about three weeks after I got a call asking for a one on one at the Googleplex. Very cool! College recruiting day was ver scheduled. Had three interviews back to back in the morning. Bombed the second one and got a call one week later saying no thanks.

Network distribution problem.   Answer Question

Jun 26, 2010
---------------
I got call from recuriter who set up the intial phone interview. Did not get call as expected the first time, the recuriter then set up interview a week later with a different engineer. I was warned in advance that most questions will be based on data structures and alogrithms.

Calculate the nth number of the fibonacci series   5 Answers Implement Queue based on a stack   2 Answers

May 17, 2010
---------------
I was contacted directly by a recruiter, we exchanged a few emails and talked for a few minutes about past experience, skills, interests, etc. After I agreed to continue with the process, I had a phone interview, an on-site interview, was told that they'll contact my references and then received the offer. 1-3 weeks passed between each step. The recruiter talked me through the process and kept me informed about the progress of my application, but the process itself is rather opaque: you do not get to know exactly what you could be working on, you're unlikely to meet people you will be working with, and you do not get much feedback until the offer / no offer. Hiring decisions are made by committee(s) (i.e. not by a hiring manager who has an opening in his team), and although the recruiters may have a good feeling of which direction the application is going, they cannot promise anything until the decision is made. The phone interview was with one software engineer for 45-60 mins. After a few ice-breaking questions, they jumped into a few technical questions and then gave me a few minutes for my questions. The on-site interview consisted of 5 1-1 technical interviews of 45 minutes each with software engineers, plus a lunch break in one of the cafeterias with another engineer; In total I probably answered 20-30 different questions on data structures, algorithms, and discrete maths. You write down the answers on a whiteboard or notebook and the interviewers take notes. Sometimes correct syntax is required, sometimes pseudocode is acceptable. The level of the questions varied a lot and covered a lot of areas: one minute I am manipulating the bits of a byte to implement one coding trick, the next I am discussing heuristics for an intractable problem. Most interviewers gave me a few minutes at the end to ask them questions, and the discussions touched briefly on my past experience although I was not expected (and one really shouldn't) give too much information on my current work; keep in mind that the interviewee signs an NDA but the interviewers don't. In my current job I do a fair amount of interviewing and I often interview candidates who give the impression of being competent but fall short of doing well in the technical interview because they're unprepared. This often leads to a no-hire decision, probably an unfortunate false negative, but hiring decisions are very hard to make since bad recruits are a severe liability to an engineering team. I did not want to be such a candidate so I prepared as best as I could; luckily the process was slow enough to give me some time to do that. I read (and worked through the exercises of) textbooks on algorithms, datastructures, discrete maths, the languages I use, practiced my handwriting, brushed up on standard CS topics I do not currently use, and learned a bit about Google specific technology like MapReduce. I also brushed up on my past research/experience and areas related to that. I was not asked on most of what I prepared on, and I was asked on areas I did not think of preparing on, but I think that this preparation really helped me to be in the right mindset to solve the type of questions I was asked. In my opinion, good knowledge in the fundamentals is essential but the most important skill is problem solving. I was asked questions about areas I'm not familiar with, but (with some help from the interviewers) I was able to break them down into smaller components I could at least tackle. I probably didn't impress in those questions but it was better than throwing in the towel. I was not asked directly on specific datastructures and algorithms, but if I decided to use some to solve a problem, then I was asked detailed questions about them. So: problem solving is the skill, CS knowledge provides the tools. I have negligible experience of being an interviewee, and it's amazing all the silly mistakes my nerves made me do; I really felt that I had misrepresented myself as being clumsy (at least more than I am...), but luckily it is a myth that one mistake is enough to fail the whole process. I did not feel the arrogance in the interviewers mentioned in other reviews here. Not all of them made me feel comfortable, but overall they're what you expect from a silicon valley company. Before the application proceeded, I couldn't tell how I did, but I felt that it was a fair process, and definitely a positive experience that left me with a very good impression of Google; If you are good at the fundamentals, be able to show a level of expertise on everything you list in your resume, have spent the time to prepare, and you're not intimidated by relentless questioning, possibly on areas you're not that familiar with, then you have a good chance of satisfying enough interviewers to move on to the next step. Keep in mind that Google affords to be picky so their hiring process tries to minimize hiring bad recruits at the cost of rejecting potentially good ones.

I got the impression that interviewers are selected depending on what's on your resume. I was asked about heuristics on a specific intractable problem probably because my background included something related. You really need to know your stuff.   Answer Question

May 11, 2010
---------------
I was contacted by a Google recruiter by phone. My resume was on file from a previous interview 3 years ago which did not result in an offer. We had a short conversation about what was available at Google and about what my experience was. The questions and information were very high level and it didn't seem like this was even a phone screen of any sort. She then passed me on to the HR person at the NY office. I was told that there would be a phone interview where I would need to be at a computer and would need to be able to code, but since I has already been onsite previously they decided to skip this. I was handed on to yet another person to actually schedule the interview and then back to the HR person. The onsite interview was from 10 to 3 and consisted of 5 interviews and a lunch conversation. Each interview was 45 minutes and they ran pretty much right on schedule. They were difficult, but pretty much what was expected. There almost no discussion of work history or anything other than technical questions. Most of the time was spent at the whiteboard working on and then refining the answer to a question. They mainly focused on data structures and algorithms around them. Things like BST, hash tables, tree traversals. The questions were not standard algorithm questions that you tend to see around, but a bit more involved. They were interested in your speaking about the algorithmic complexity of your solution and how to choose appropriate data structures. Hash vs. BST came up a bit. The coding that had to be done was a bit awkward for a whiteboard. The solutions were not necessarily short. One interview revolved around a higher level system design question that was refined throughout the discussion. There was very little to no time to ask questions or discuss working at google and the inteviewers did not seem interested in selling me on google. The lunch conversation was not an interview and did not contribute towards the assessment. The person I ate with was very nice and seemed honest about the way things are at google. Over 2 weeks after the interview I was contacted with the rejection. Overall the process was smooth and people were helpful and nice. Though I did not find anyone to be particularly interested in selling the company. The interviewers were hard but fair for the most part. One interviewer did not describe the problem particularly well and had me coding a solution to the wrong problem for a while.

General algorithm questions. particularly focused on algorithmic complexity. Know average and worst case time for operations on hash tables, trees, etc. The questions are not puzzles and if you know your data structures, algorithms, etc, they aren't too hard.   Answer Question

May 8, 2010
---------------
I had two technical phone interview. Both of them were strictly limited to 45 min. On the first one, I was asked few technical questions and one brainteaser. Afterwords I need to write a small program and post it through Google docs. On the second interview, I was asked to DICTATE CODE, so that the person will write it down and estimate. One of the questions was terribly difficult. I spent about 20 min to resolve it but could not. Another one were much more simpler and doable. The guy did not test my language and technology knowledge and experience at all. He just wanted me to resolve terrible brainteasers, which hypothetically even student without any experience could do.

One independent survey showed that 70% on people asked like coffee. Another independent survey showed that 80% of people like tea. What is the upper and lower bound of peoples who likes both coffee and tea   14 Answers Write a function Brackets(int n) that prints all combinations of well-formed brackets. For Brackets(3) the output would be ((())) (()()) (())() ()(()) ()()()   10 Answers

Apr 16, 2010
---------------
I uploaded my resume, got an email for a phone scree. The recruiter called me and after a few basic question set a time for a phone interciew. After I passed the first phone interview, there was a secon one, and after I passed the second one, there was an onsite interview. I was interviewed by 5 interviewers onsite. The questions were not really hard and I answered all of them and I found efficient algorithms as they wanted and they seemed satisfied, but I was rejected after the onsite interview. It seems to be really hard to get into, so my advice is do not focus on Google. Focis on another company. It is probably not worth the time you spend on all these interviews as the chances are low.

They were all C++ questions. find mean, find page rank, find intersection, then OO and design questions   Answer Question

Apr 17, 2010
---------------
I interviewed with the company before and came very closed to be hired, so they expedited the process and have me interviewed in their NY office without going through phone interviews. The question they asked are easier than I thought. You just need to make sure you remember all those basic data structures and algorithms, and be careful and not make dumb mistakes. There is only one hard problem, but if you know dynamic programming, you shouldn't have trouble solving it.

Giving n numbers, and one number s, find out whether there are two numbers form the n numbers sums up to the number s. Finding one solution is extremely easy, but what's required is to find out ALL solutions to the problem and analyse the run times.   6 Answers

Oct 26, 2010
---------------
I was only asked questions about system administration, no software questions were asked. The guy asking the questions was very nice but I was prepared for software not system admin questions.

What steps would you take to determine the source of a slow web site?   3 Answers

May 15, 2010
---------------
The interesting parts of the Google interview process are all under NDA and you can't discuss them for two years after the interview. Here's what I can tell you: - Their initial contact with me was via email, through LinkedIn. I didn't contact them. - Two rounds of telephone interviews are required for out-of-state candidates (i.e. anybody they will have to pay to fly in). Both interviews will have a "take home assignment" portion - a piece of code that you'll have to write and email to your interviewer within a fixed time (1 hour for me). If you pass these hurdles you'll be brought out to Mountain View for an all-day in-person interview. - Travel arrangements are absolutely painless, it's all handled for you and all you need to do is write an email and pick dates. - Google flies you in on day X, interview day X+1, fly out day X+2; no redeyes necessary. They pay for flight, hotel, rental car, and per diem for meals. You get to pick airlines and rental companies for frequent flyer miles. Note that you have to put your meals and the rental car on your own credit card, and file for reimbursement. They say to allow several weeks for reimbursement, but my experience was that the money arrived by direct deposit in about a week after filing. If you wish to stay extra days to explore the neighborhood and pay for the additional rental car and hotel expenses yourself, that's fine. The interviews are extremely technical and involve real programming exercises, manipulating data structures, analyzing or describing algorithms, etc. Be prepared to iterate what you're doing on the board. Be ULTRA prepared with knowledge of standard search and sort algorithms and junior-level CS data structures; also be aware of their big-O complexity. While the interview questions aren't exactly complicated, they cover so much territory that there is no way to study for them from "cold". If you are not programming on a daily basis in the languages in which you're being interviewed, you will not pass these tests. The process moves extremely quickly - at most a day or two between steps. Depending on how your scheduling works, you could go from first contact to an offer in less than two weeks. Absolutely everything you have read about Google perks and benefits is entirely true. It's hard to imagine a company with better employee benefits.

Interview questions are protected by non-disclosure agreement.   2 Answers

Mar 23, 2010
---------------
The interviewer asked me about my research topics, including my problem formulation and methodology. This part already took 10 mins. Then he asked to use google docs to write an algorithm which can pop out the top unique entries in a database with 100 billion entries.

Try to figure out the top unique search queries from a database with 100 billion entries   2 Answers

Mar 22, 2011
---------------
Two consecutive 45 min 1:1 phone screen interviews. 10 min breaking. They just started to ask questions without letting me introduce my work or something. Typically 2 big questions. As you all know, some interviewee wants you to write real code on Google docs. Then, they are asking whether I have any questions. Please ask good questions.

Write a function that computes the intersection of two arrays. The arrays are sorted. Then, what if one array is really larger than the other array?   6 Answers

Jul 23, 2010
---------------
The whole interview process was comprised of two phone interviews, and on-site interview. The first phone interview was from an HR, and the second was a technical interview in which I was asked several basic CS problems but no algorithm development or online coding. After that I was invited to fly to Santa Monica, CA for in-person interview. The interview insisted of 5 round of interviews. The content included algorithm, system design, and so on. I though I was doing fine, but after one week, I got a call from the HR told me that I was not accepted due to lacking of working experience. However, the overall process was smooth, the interviewers were nice and friendly. The questions are not really so hard to answer.

Give the descending order of the following 4 terms, assume that n is infinite. n!(n factorial), n^n, 2^n, n^(google)   2 Answers Convert decimal number 99 to base 7.   3 Answers

Jan 6, 2012
---------------
Everybody that interviewed me was generally pleasant. Lots of emphasis on puzzles, which I tend to enjoy, but don't find to be very effective interview questions.

Out of 10 coins, one weighs less then the others. You have a scale. How can you determine which one weighs less in 3 weighs? Now how would you do it if you didn't know if the odd coin weighs less or more?   2 Answers

Jun 18, 2010
---------------
It started out with an email from a google recruiter. She was very responsive and helpful in terms of trying to get me prepared for the interview. On the day of the interview she went through her previous interviews and tried to give some sample questions that were given to other interviewees. When it came time for the interview, I received an online google document and the interviewer posted up the question:"How would you write a sort routine to ensure that identical elements in the input are maximally spread in the output?" I worked through the problem and he asked the BigO notation for every solution that I had.

How would you write a sort routine to ensure that identical elements in the input are maximally spread in the output?   3 Answers

Mar 31, 2010
---------------
I submitted my resume online, and about 3 weeks later got a call from a recruiter who asked me about my experience and the kind of role I would like. She then lined me up for a phone screening. I was asked 3 main questions, 2 coding related and one about how web pages are retrieved and displayed and how the process can be optimized.

Write an algorithm to calculate n factorial   1 Answer Explain the steps involved from entering a web site address to the page being displayed on your browser. How can the process be speeded up.   Answer Question

Jan 6, 2012
---------------
Everybody that interviewed me was generally pleasant. Lots of emphasis on puzzles, which I tend to enjoy, but don't find to be very effective interview questions.

Out of 10 coins, one weighs less then the others. You have a scale. How can you determine which one weighs less in 3 weighs? Now how would you do it if you didn't know if the odd coin weighs less or more?   2 Answers

Jun 18, 2010
---------------
It started out with an email from a google recruiter. She was very responsive and helpful in terms of trying to get me prepared for the interview. On the day of the interview she went through her previous interviews and tried to give some sample questions that were given to other interviewees. When it came time for the interview, I received an online google document and the interviewer posted up the question:"How would you write a sort routine to ensure that identical elements in the input are maximally spread in the output?" I worked through the problem and he asked the BigO notation for every solution that I had.

How would you write a sort routine to ensure that identical elements in the input are maximally spread in the output?   3 Answers

Mar 31, 2010
---------------
I submitted my resume online, and about 3 weeks later got a call from a recruiter who asked me about my experience and the kind of role I would like. She then lined me up for a phone screening. I was asked 3 main questions, 2 coding related and one about how web pages are retrieved and displayed and how the process can be optimized.

Write an algorithm to calculate n factorial   1 Answer Explain the steps involved from entering a web site address to the page being displayed on your browser. How can the process be speeded up.   Answer Question

Mar 10, 2010
---------------
This was the second phone interview, the first being with a recruiter. I spoke with an engineer at google and he asked me some general c++ questions (malloc/polymorphism/virtual functions/etc) and then gave me a problem to write an algorithm for (find the next in a sequence of numbers). The interviewer gave me some hints along the way, but unfortunately I was stuck for a good 10 minutes on one of his hints that turned out to be a misunderstanding between us. I verbalized everything I was doing along the way to try to make things as clear as possible. I didn't get the answer correct in the end. He told me how to see where the sequence goes, but I don't understand how he would decide to use that approach. I feel like i would have no problem writing the algorithm but i don't know how he arrived at the solution. It wasn't a very positive experience overall. i don't expect to be asked for an in-person interview.

you have a sequence where each number is a multiple of 2 or 5 (so: 2^i * 5^j). he gave the beginning of the sequence as 1,2,3,4,5,8,10,16... and asked me to find an algorithm to calculate the next number in the sequence.   20 Answers

Mar 13, 2010
---------------
The recruiter who contacted me was very helpful. She described me how the interview would be, what to expect, what not to expect, what are the interviewers looking for pretty well without a single hint of any question. She did her job well. The interviewers were very kind, helpful and nice. They asked very smart , algorithms based questions. No tricky questions. They had a positive attitude and they wrote down every single word I spoke or wrote on the whiteboard. I didn't make it, but had a nice experience at Google. By the way, I had an awesome lunch in one of their cafeterias too! All in all, good experience!

Print mth to last elements of the linkedlist   1 Answer Create a binary tree based on a sorted array   2 Answers

Mar 21, 2010
---------------
A friend of mine referred me internally at Google, and I got a call from a recruiter almost immediately (within 2 days). I was then scheduled for 2 phone interviews about a week apart. Finally I had an on-site interview that consisted of meeting with 5 engineers for 45 minutes a piece, plus a 6th person for lunch. The lunch person was not a formal interview, but more a "get to know Google" meeting.

You have a genealogy: 1) Describe a data structure to represent it. 2) Given any two people within the genealogy, describe an algorithm to determine if they share a common ancestor. You just need to return true/false, not all ancestors.   6 Answers

Mar 25, 2010
---------------
I still don't understand why I did not pass. I had a phone interview and was asked to write code plus solve a puzzle and I did both. I was informed later by HR that I did not pass and was simply shocked - I asked what was wrong but their policy is not to disclose anything. I think Google has some serious issues with their interviewing process.

Sample uniformly on a circle centered at zero with radius 1.   2 Answers Write code to check whether every element of an array has been visited (you are given a starting position and each position stores a pointer to a subsequent position)   1 Answer

Sep 27, 2010
---------------
The hiring process what pretty smooth. I was contacted by the HR who set up the initial phone screens. After a couple of the phone screens, i was invited over for in person 1:1 interviews. The interviewrs were pretty smart and generally nice. They did offer a bit of help during interviews. I guess the important thing is the think aloud and make sure they can jump in and help you out if possible. I liked the overall atmosphere there and love google products.

Questions related to data stuctures and algorithms.   Answer Question

May 18, 2010
---------------
Of all the interviews I've ever had, this one was the most disappointing. My experience is in NLP, and I specifically applied to Google for a job doing NLP, either in machine translation, speech recognition, or one of the other many NLP tasks they do. My Google interviews were the first ones I had out of college, and I was still naive enough to believe I'd be asked about the stuff I've done and that I'm applying to do. Wrong. HR apparently just switched my application to a generic new grad job, so the only questions I was asked were generic sorting algorithms and stuff like that. Not a word about machine learning or NLP. Just sorting algorithm basics that I haven't seen since sophomore year and have never and probably will never need to touch in the work place. I've since learned from later interviews and from friends who interviewed at other places: if you're interviewing for anything in software development, there's about a 95% chance you'll only be asked generic technical questions that have nothing to do with the position you're applying for, or the things you'll be working on. It's really sad that even at a top company like Google, this is still the case. I guess you just have to play the system.

Define an algorithm that converts a string to an integer without using a built in method like int()   2 Answers Given a list, return the first pair of duplicates in the list.   1 Answer

Jul 9, 2012
---------------
One HR phone interview with some technical problems. Two Software engineer interview with more advanced technical problems and programming tasks.

I should not offer the question since I signed the non-disclosure agreement.   1 Answer

Mar 1, 2010
---------------
Applied for a Software Engineer position. I was contacted by a recruiter for some general questions and background information. I was then instructed that I'd be receiving a call the following week from another software engineer for a technical screening. The engineer called me and went over a few technical questions regarding mainly javascript and running time (big O). I was then asked to provide 2 algorithms in code within an hour after the call. Overall the interview seemed to go well....as so I thought. I wasn't contacted until the following week of the results. I was turned down but they cannot give you any information of why you didn't meet their standards. They won't tell you if your code is wrong, where you went wrong or where you could improve as a developer. Just a standard "your skills don't meet our needs at this time" response. Kind of disappointing given that you prepare for hours upon hours of your time and energy and receive 0 feedback. How can you prepare? Well, I went over all of my old CS 101 notes, hash tables, data structures, and all the theory behind it. It can be a bit overwhelming if you haven't visited that information for over a decade. My advice is to brush up on your theory and write some practical examples along those lines, like sorting an array using Merge sort in your favorite language. Don't worry about trying to get better in your languages...you either know it now or don't know it. It's nearly impossible to prepare for everything for this position given that they don't hire a Javascript developer or C++ developer. They just hire developers in general and only the top 1% developers in the world, as they indicated. Don't bother asking about the position because you could be working on any number of projects and they will not give you any specifics. Overall, I rate the experience a 2.5 out of 5. The interview questions I got weren't terribly difficult, but I don't know where I went wrong or how I could improve since no feedback is given. That's where Google's policy needs to be revamped. The people I talked to were nice but don't expect any personality. It's very dry and straightforward and I'm not really sure if that's indicative of how people are there. The youtube video on working at Google seems like it's such a great place to work, but can't really say for sure at this time given my experience thus far with how they approach engineers.

Give 2 coding solutions on returning an array by removing duplicates. One solution with O(n^2) and the other Linear.   4 Answers

Mar 6, 2010
---------------
I was contacted by the recruiter via LinkedIn. After a few initial hiccups, the recruiter called me directly and after a brief chat, asked for my resume. I received a questionnaire about my skills, experience and interests after that. The recruiter also sent me great tips on what to prepare for the interview and what would be expected. He then scheduled a phone interview based on my availability. The interview was good too. The questions were interesting which tested my algorithm and data structure skills. I thought I had done a decent job. However, I got a call from the recruiter a couple of days later (which I appreciated) that they had decided to not go further based on my background (which was frustrating).

What was the most challenging issue/bug you came across and how did you resolve it?   Answer Question

Feb 16, 2010
---------------
It was the first round phone interview. Nothing special. An Indian interviewer. Nice but hard to understand. Questions were a lot of basic concepts, OO, DB, OS, Networking... all inclusive... Google doc coding was easy. But I only had at most 5 minutes to code. Finally he asked the Order complexity. Easy first round screening interview. I'll keep my fingers crossed.

DB questions like normal forms, inner join and outer join concepts, which I didn't prepare at all. Be prepared!   Answer Question

May 15, 2010
---------------
First an HR person called and asked me preliminary questions and then set up a phone interview with an engineer. It was well planned and the call started on time. However; my phone interview with the engineer did not go too well and they told me that they did not want to consider me for the position.

How would you implement a stack to achieve constant time for "push", "pop" and "find mininum" operations?   3 Answers Given an array of integers where each element points to the index of the next element how would you detect if there is a cycle in this array?   12 Answers

Jun 11, 2010
---------------
I had a HR emailing me for scheduling a phone interview with the HR first. I gave a date 8 days from that Thursday. But, I was surprised when I got the call the next day, but, since it was just the HR round, I just gave some basic information about myself and my resume and I was all set for the second round (technical interview). If I had passed this round, I might have had one or two more technical phone rounds and then would have been called on-site. It was through Google University Recruiting.

Write a function that divides two numbers without using the divide '/' operator.   9 Answers

Mar 22, 2010
---------------
I was contacted by a HR recruiter, and scheduled a phone call. We discussed possible positions with my research and engineering background. As an outcome, a phone interview was scheduled a week after the initial contact. A phone interview was to see my problem solving skills and basic coding knowledge through some specific algorithm and data structure problems. 2 days after the phone interview, I was notified of the invitation to the on-site interview. The on-site interview consisted of 6 one-on-one interviews: one for my phd thesis work, four for technical algorithm/data structure/problem solving questions, one for lunch. I felt that they see the thinking process, and also the initial quality of algorithm/data structure, and the developing process beyond the initial idea in terms of computation complexity, running time, and memory usage, and etc.

Hash table, binary search tree,...   Answer Question

Mar 10, 2010
---------------
2 Telephonic Interviews. I am an Electrical Engineering Student with more RTOS/ARM background. The first interview was conducted by an Electrical engineer. He asked me questions about what an RTOS is, how to handle interrupts, use of "static" in C and C++, an algorithms question on finding duplicates in an array.

What is an RTOS? How different is it from a conventional OS   2 Answers

Aug 4, 2010
---------------
I had two 45 minute phone overviews and for 45 minute in-person technical interviews

You have all of the prices for a given stock for the next year. You can buy once and sell once in that year. How do you determine when to buy and sell to maximize your profit?   12 Answers

Apr 7, 2010
---------------
I was contacted by a recruiter after visiting Google at a career fair. Then I went through 2 phone interviews with live coding about algorithms, data structures, optimization. After that I was invited on-site for a full day interview (Google College Day) and had 3 interviews. The 2 phone screen interviews were pretty basic. It was a while ago so I didn't remember everything. The 1st few questions were about Fibonacci sequence with optimization, also lowest common ancestor with optimization and find repeated number with optimization. I suggest u started out with a naive answer so that at least you can solve the problem, then think of a better way to do it. The on-site interviews were really hard and intimidating. The 1st guy asked me about OO concepts with some trick questions. The 2nd guy was totally unprepared and just kinda thought of questions on the spot. He asked me about designing a server and how to prevent failure, how to reroute requests and make backup and such. The 3rd guy was nice but tough. He asked me about Bloom Filter and techniques they used in URL whitelisting in Google Chrome. I had no idea as an undergrad.

Find a repeated number in a list of numbers   2 Answers Write a function the generate Fibonacci sequence   Answer Question I have superclass A and subclass B of superclass A. B overrides a function foo() in A. I have an instance of class B. How do I call foo() but using class A's version   5 Answers How do you check if a URL is bad really fast in Google server. The point is for the user not to notice the lag in the checking   2 Answers

Jan 24, 2010
---------------
Recruiter was main point of contact. Processed resume/experience and setup interviews. Two 45 minute technical phone interviews spaced about 3 hours apart. Asked about entries on resume and previous work experience. Then some problem solving questions, and finally some algorithms question. One included coding on a collaborative document on Google docs. Both asked time complexity related questions. Few weeks later, scheduled 3 on site interviews and lunch. Each 45mins-1hour long. Questions here were more focused, mainly picking a topic and sticking with it. No time complexity, but quite a bit of coding. Some questions on statistics, many on data structures, some on API design. Overall had a great time. The engineers I talked with were intelligent and fun. In the end I think it was a few poor answers during the phone screen that prevented any offer, but a good experience overall.

Given a stream of integers of unknown (possibly large) length, how would you pick one at random? Now prove its random.   6 Answers Define binary search tree. Develop a procedure to verify a binary search tree.   6 Answers

Jun 13, 2012
---------------
I was contacted by a recruiter. I passed the phone screen which included writing some Java code for threads. Then I did an onsite interviews. The questions ranged from puzzle problems to Java to web architectures. The people were friendly. I was a bit nervous. I hadn't slept well the night before - be sure to get enough sleep!

Describe the algorithm for a depth-first graph traversal.   1 Answer How would you store 1 million phone numbers?   4 Answers

Feb 14, 2010
---------------
First interview was organized by one recruiter which i did during holiday season and i did well. I was hoping that next step would be a on site interview but got a mail from other recruiter that the first one has left so he will take over and reschedule another phone interview. it was not clear to me if the second interview was due to the recruiter change or ph interview result . Anyways i could not clear second phone screen as i could not wrap up one binary tree puzzle on time

Find the lowest common ancestor for BST   4 Answers

Jun 30, 2010
---------------
I got an interview request from internal referral. The process was clear initially, the recruiter explained how the recruiting process will go. After we begin the process, there were few hiccups in the communication between recruiter and me. It seemed that they were too busy and some email was missed or not answered. But overall it was a OK experience.

Write a function to find intersection of 2 sorted arrays.   3 Answers

Feb 14, 2010
---------------
I contacted a recruiter I found online. He scheduled a phone interview for me. The interview consisted of few questions on Java and an algorithm question. I was asked to write a function to find an intersection from 2 sorted arrays. And the interview ended. With little more practice one can crack the interview easily. "Programming interview exposed" book really helps you prepare for the interview.

What cool things did you do in your previous job. Basically the interviewer wants to know if there can be a good fit between me and the team.   Answer Question

Jun 8, 2012
---------------
Two phone interviews. Both people were nice, but the technical guy was a little awkward. First was with the recruiter to talk about their opportunities and to make sure there was a slot I might fit in. Second one was about an hour technical screen that consisted mainly of two technical problems - one was easy, the other was difficult. The recruiter called me back a few days later to say that while I had done well on the technical problems, after reviewing my resume they determined there weren't any compatible open slots and to re-apply in a few months to see what was available.

Write a function to find intersection of 2 sorted arrays.   3 Answers

Feb 10, 2010
---------------
The process began when I responded to an unsolicited contact from a Google recruiter. We scheduled a phone screen interview. During the phone screen, I was asked a number of questions that essentially verified that my skills and experience listed on my resume were correct, and then we did a few basic design and coding questions. A day or two later, I was notified that Google wanted to bring me in for an onsite interview. The onsite interview was scheduled for about three weeks later. Google advised me to study up on algorithms and data structures, big-O analysis, and so on, which I did. At the onsite interview, I was interviewed by five different software engineers, each interview lasting approximately one hour. Each interview consisted of one or more challenging software design or coding problems. In all cases, I was asked to do big-O analysis on the run time and/or memory requirements of my solution. I got performance anxiety towards the end of the day, and performed poorly on two of the interviews, in which I froze up on questions I should have been able to answer. A few days later, after the hiring committee considered my application and interview results, I got a call back from the recruiter who notified me that Google was declining to give me an offer, but because I had excellent personal recommendations and very good feedback from most of my interviewers, that I should re-apply in 12 to 18 months.

You're given a binary tree and pointers to two nodes in the tree. Describe the fastest algorithm you can come up with to determine the closest common ancestor.   4 Answers You're writing an application that receives a stream of individual items of data. The stream may be very long or very short, but you have no way of knowing how long it is (i.e. there'htm?delete=true&respondableId=1574789' data-response-id='' data-employer-id='9079'>Delete

Dec 13, 2009
---------------
Two phone interviews. Both people were nice, but the technical guy was a little awkward. First was with the recruiter to talk about their opportunities and to make sure there was a slot I might fit in. Second one was about an hour technical screen that consisted mainly of two technical problems - one was easy, the other was difficult. The recruiter called me back a few days later to say that while I had done well on the technical problems, after reviewing my resume they determined there weren't any compatible open slots and to re-apply in a few months to see what was available.

Design a system to find all Googlewhacks and analyze its efficiency in terms of memory, storage, and run time, and its scalability characteristics.   Answer Question

Oct 5, 2011
---------------
Applied for the position online. HR contacted to schedule telephone interview. I asked for 3 weeks time. HR sent some general information on how to prepare for interviews. "Programming interviews exposed" and tutorials on topcoders.com were included in the reference material. The telephone interview was 1 hr long. There were three questions. Towards the end the interviewer asked me to code the algorithm for the last question. There was not much time left. On site interview was scheduled about 1.5 months latter. There were 5 1-on-1 interviews and a lunch interview. 4 out of 5 interviews involved writing code on the board. The last interview was general discussion on how to design a solution for a distributed system that the interviewer explained.

Why do you want to change your job?   Answer Question

Oct 25, 2014
---------------
Initially was contacted by HR to go over some basic points on my resume and to setup a techinical interview. The person I spoke with on the phone seemed a little resentful that everything was provided by Google for Google employees because it was very difficult to not spend a lot of time at work. Everyone working at Google is very bright according to him and most worked very hard so it sounded like the balance between work and life was a little off. If coding is your passion then it sounds like Google takes care of the rest. The lady from HR seemed rather more upbeat and enjoyed the people she worked with.

You're given a binary tree and pointers to two nodes in the tree. Describe the fastest algorithm you can come up with to determine the closest common ancestor.   4 Answers You're writing an application that receives a stream of individual items of data. The stream may be very long or very short, but you have no way of knowing how long it is (i.e. there's no trick to figuring out the size of the stream of data). How would you go about choosing m items such that any subset of m items was equally likely? (Not an even distribution of values, but just that any m items are equally likely to be chosen). So for example, m=1000, and the number of items in the stream, n, may be 1000, or 10000, or 100000000, or much much larger; there is no way to know how many.   4 Answers

Dec 13, 2009
---------------
I applied online and got a 45 minute phone interview. They asked me to fill out a questionnaire that consisted of scale of 1 - 10 expertise type questions for programming languages, areas of computer science, etc. The phone interviewer was asked me two questions and had to code on paper and read it out for the first question. Got an email the following week inviting me to kirkland for an on-site interview. Google reimburses any of your expenses during the on-site interview trip. Be sure to retain all receipts and send them scanned copies *within 15 days of your on-site interview.*

I am playing a card game called 24. Cards ace to king are numbered 1 to 13. During a given round, I am provided four cards to play with from the shuffled pack. If the numbers from the four cards result in 24 then I win the round if I shout '24' first. How would you code a function for this?   4 Answers A quad tree is used to represent a black/white image. If you are provided with two such image representations, write a function to create a third tree that represents the merged image. (Black overrides white, mixed; mixed overrides white)   1 Answer

Mar 8, 2010
---------------
Initially was contacted by HR to go over some basic points on my resume and to setup a techinical interview. The person I spoke with on the phone seemed a little resentful that everything was provided by Google for Google employees because it was very difficult to not spend a lot of time at work. Everyone working at Google is very bright according to him and most worked very hard so it sounded like the balance between work and life was a little off. If coding is your passion then it sounds like Google takes care of the rest. The lady from HR seemed rather more upbeat and enjoyed the people she worked with.

Easier questions 1) Two variations of a program exist, A and B. When run on machine 1, A runs twice as fast as B. When run on machine 2, A runs 10x as fast as B. How would you investigate this? -same datasets -same versions of OS and libraries -same hardware 2) Had to code a method that calculated the factorial, first simply, then a second one recursively.   3 Answers trickier question, code a method given the following method signatuontacted by a recruiter. I passed the phone screen which included writing some Java code for threads. Then I did an onsite interviews. The questions ranged from puzzle problems to Java to web architectures. The people were friendly. I was a bit nervous. I hadn't slept well the night before - be sure to get enough sleep!

Describe the algorithm for a depth-first graph traversal.   1 Answer How would you store 1 million phone numbers?   4 Answers

Feb 14, 2010
---------------
First interview was organized by one recruiter which i did during holiday season and i did well. I was hoping that next step would be a on site interview but got a mail from other recruiter that the first one has left so he will take over and reschedule another phone interview. it was not clear to me if the second interview was due to the recruiter change or ph interview result . Anyways i could not clear second phone screen as i could not wrap up one binary tree puzzle on time

Find the lowest common ancestor for BST   4 Answers

Jun 30, 2010
---------------
I got an interview request from internal referral. The process was clear initially, the recruiter explained how the recruiting process will go. After we begin the process, there were few hiccups in the communication between recruiter and me. It seemed that they were too busy and some email was missed or not answered. But overall it was a OK experience.

Write a function to find intersection of 2 sorted arrays.   3 Answers

Feb 14, 2010
---------------
I contacted a recruiter I found online. He scheduled a phone interview for me. The interview consisted of few questions on Java and an algorithm question. I was asked to write a function to find an intersection from 2 sorted arrays. And the interview ended. With little more practice one can crack the interview easily. "Programming interview exposed" book really helps you prepare for the interview.

What cool things did you do in your previous job. Basically the interviewer wants to know if there can be a good fit between me and the team.   Answer Question

Jun 8, 2012
---------------
Two phone interviews. Both people were nice, but the technical guy was a little awkward. First was with the recruiter to talk about their opportunities and to make sure there was a slot I might fit in. Second one was about an hour technical screen that consisted mainly of two technical problems - one was easy, the other was difficult. The recruiter called me back a few days later to say that while I had done well on the technical problems, after reviewing my resume they determined there weren't any compatible open slots and to re-apply in a few months to see what was available.

Write a function to find intersection of 2 sorted arrays.   3 Answers

Feb 10, 2010
---------------
The process began when I responded to an unsolicited contact from a Google recruiter. We scheduled a phone screen interview. During the phone screen, I was asked a number of questions that essentially verified that my skills and experience listed on my resume were correct, and then we did a few basic design and coding questions. A day or two later, I was notified that Google wanted to bring me in for an onsite interview. The onsite interview was scheduled for about three weeks later. Google advised me to study up on algorithms and data structures, big-O analysis, and so on, which I did. At the onsite interview, I was interviewed by five different software engineers, each interview lasting approximately one hour. Each interview consisted of one or more challenging software design or coding problems. In all cases, I was asked to do big-O analysis on the run time and/or memory requirements of my solution. I got performance anxiety towards the end of the day, and performed poorly on two of the interviews, in which I froze up on questions I should have been able to answer. A few days later, after the hiring committee considered my application and interview results, I got a call back from the recruiter who notified me that Google was declining to give me an offer, but because I had excellent personal recommendations and very good feedback from most of my interviewers, that I should re-apply in 12 to 18 months.

You're given a binary tree and pointers to two nodes in the tree. Describe the fastest algorithm you can come up with to determine the closest common ancestor.   4 Answers You're writing an application that receives a stream of individual items of data. The stream may be very long or very short, but you have no way of knowing how long it is (i.e. there'htm?delete=true&respondableId=1574789' data-response-id='' data-employer-id='9079'>Delete

Dec 13, 2009
---------------
Two phone interviews. Both people were nice, but the technical guy was a little awkward. First was with the recruiter to talk about their opportunities and to make sure there was a slot I might fit in. Second one was about an hour technical screen that consisted mainly of two technical problems - one was easy, the other was difficult. The recruiter called me back a few days later to say that while I had done well on the technical problems, after reviewing my resume they determined there weren't any compatible open slots and to re-apply in a few months to see what was available.

Design a system to find all Googlewhacks and analyze its efficiency in terms of memory, storage, and run time, and its scalability characteristics.   Answer Question

Oct 5, 2011
---------------
Applied for the position online. HR contacted to schedule telephone interview. I asked for 3 weeks time. HR sent some general information on how to prepare for interviews. "Programming interviews exposed" and tutorials on topcoders.com were included in the reference material. The telephone interview was 1 hr long. There were three questions. Towards the end the interviewer asked me to code the algorithm for the last question. There was not much time left. On site interview was scheduled about 1.5 months latter. There were 5 1-on-1 interviews and a lunch interview. 4 out of 5 interviews involved writing code on the board. The last interview was general discussion on how to design a solution for a distributed system that the interviewer explained.

Why do you want to change your job?   Answer Question

Oct 25, 2014
---------------
Initially was contacted by HR to go over some basic points on my resume and to setup a techinical interview. The person I spoke with on the phone seemed a little resentful that everything was provided by Google for Google employees because it was very difficult to not spend a lot of time at work. Everyone working at Google is very bright according to him and most worked very hard so it sounded like the balance between work and life was a little off. If coding is your passion then it sounds like Google takes care of the rest. The lady from HR seemed rather more upbeat and enjoyed the people she worked with.

You're given a binary tree and pointers to two nodes in the tree. Describe the fastest algorithm you can come up with to determine the closest common ancestor.   4 Answers You're writing an application that receives a stream of individual items of data. The stream may be very long or very short, but you have no way of knowing how long it is (i.e. there's no trick to figuring out the size of the stream of data). How would you go about choosing m items such that any subset of m items was equally likely? (Not an even distribution of values, but just that any m items are equally likely to be chosen). So for example, m=1000, and the number of items in the stream, n, may be 1000, or 10000, or 100000000, or much much larger; there is no way to know how many.   4 Answers

Dec 13, 2009
---------------
I applied online and got a 45 minute phone interview. They asked me to fill out a questionnaire that consisted of scale of 1 - 10 expertise type questions for programming languages, areas of computer science, etc. The phone interviewer was asked me two questions and had to code on paper and read it out for the first question. Got an email the following week inviting me to kirkland for an on-site interview. Google reimburses any of your expenses during the on-site interview trip. Be sure to retain all receipts and send them scanned copies *within 15 days of your on-site interview.*

I am playing a card game called 24. Cards ace to king are numbered 1 to 13. During a given round, I am provided four cards to play with from the shuffled pack. If the numbers from the four cards result in 24 then I win the round if I shout '24' first. How would you code a function for this?   4 Answers A quad tree is used to represent a black/white image. If you are provided with two such image representations, write a function to create a third tree that represents the merged image. (Black overrides white, mixed; mixed overrides white)   1 Answer

Mar 8, 2010
---------------
Initially was contacted by HR to go over some basic points on my resume and to setup a techinical interview. The person I spoke with on the phone seemed a little resentful that everything was provided by Google for Google employees because it was very difficult to not spend a lot of time at work. Everyone working at Google is very bright according to him and most worked very hard so it sounded like the balance between work and life was a little off. If coding is your passion then it sounds like Google takes care of the rest. The lady from HR seemed rather more upbeat and enjoyed the people she worked with.

Easier questions 1) Two variations of a program exist, A and B. When run on machine 1, A runs twice as fast as B. When run on machine 2, A runs 10x as fast as B. How would you investigate this? -same datasets -same versions of OS and libraries -same hardware 2) Had to code a method that calculated the factorial, first simply, then a second one recursively.   3 Answers trickier question, code a method given the following method signature that will print out any numbers that intersect both arrays of numbers //Example arrays // 4, 18, 25, 40, 411 // 20, 25, 40, 320, 1009, 1100 void intersect(int[] arr1, int len1, int[] arr2, int len2) {   5 Answers

Sep 7, 2010
---------------
Contact by HR via phone, then on-site interviewed. Questions are mostly related to data structures, algorithms, basic coding technique. Interviewed with 2 interviewers, 1hour each. 1 Question each. Interviewer try to lead you to an correct answer, and then optimize it. After 1 week contact HR, been told can not proceed to the next stage.

Reverse an sequence, or array   1 Answer Design an algorithm, which can record the largest number in an ever-upgrading sequence.   3 Answers

Dec 1, 2009
---------------
I was contacted by the recruiter the same day my friend referred my resume. Since I had previously applied, the recruiter let me skip the phone interview. They brought me on-site one week later and I met with six different interviewers (two of them were a joint interview). Most of the questions were pretty standard - I had prepared from the book "Programming Pearls" by Jon Bentley as well as www.careercup.com. There were strictly technical questions - no annoying brainteasers (thankfully). A few interviewers asked me to analyze my own algorithms I came up with and suggest any better possible things. Heaps and trees stood out as the most important data structures. The design question was open ended, and it was one of the questions from the CareerCup site so I wasn't caught off guard. Afterwards it took about 2 weeks to receive an offer, but the recruiter was good about keeping in touch and kept me updated as my application passed through the local hiring committee then the executive committee. Given Google's reputation for bad hiring process, I was surprised that it took only 3 weeks from beginning to end.

-Object-oriented Design question -Binary tree coding question -Sorting question -STL vector question -A few others (cannot reveal due to NDA)   Answer Question

Dec 3, 2009
---------------
I got an email from my school's career center about the opportunity. I uploaded my resume on Google's hiring web page. I got an email from the company's recruiter within 2 days. The interview questions were not too difficult although I screwed up one of them out of stress. I had two 45-minute interviews. The down side was that the interviewers gave no feedback, and I just got a boilerplate email from the recruiter. That was really bad.

Given the list of points of the skyline of a city in order (from East to West) Find the maximal rectangle contained in this skyline. I was asked to write the code. I managed to find the algorithm but was not sufficient.   19 Answers find the intersection of two integer arrays in increasing order.   1 Answer

Dec 16, 2009
---------------
Two 1.5 hour long interviews. Mostly asked technical questions on simple algorithms (sorting, search, etc.). Asked to write code. Didn't ask about previous experiences at all. All in all, felt more like a school exam. One interviewer was friendly, the other seemed bored or tired. Luck of the draw, I suppose.

How would you find the most searched for phrase in Google, assuming that you could use 10000 computer in parallel?   2 Answers

Oct 19, 2009
---------------
A person contacted me after I got friends to upload my resume in India and applied online in the US. Both of them contacted me, the US one first, I fixed a date, and then the Indian chap called me. The next day the US person calls me and tells me I have to choose: I choose the Indian one. Interview schedulued for 2 days away at night 9.30 PST.

There were 2 questions: 1 design and 1 implementation. The design was something like the following: you have a billion google searches a day, design a data structure which lets you pull out the top 100 unique ones at the end of the day.   6 Answers The implementation question: Find a max and min in an array simaltaneously. I used a 2n comparisons approach and a 1.5n on-average approach.   6 Answers

Nov 6, 2009
---------------
Submitted resume online on 2009-09-15. Received an email from someone in Staffing on 2009-10-07 asking for my location preferences, whether I am eligible to work in US, and actual date of intended graduation. Received email from recruiter in Seattle/Kirkland office on 2009-10-08 to schedule a phone call. Told me we would talk about Google's recruiting process and focus on my background, education, and career interests to ensure that I speak with engineers who have a background and interests similar to my own. Received call from recruiter as scheduled on 2009-10-14. We talked about Google's recruiting process, but not so much about my background, education, and career interests. I made sure she had my latest resume and I asked some questions about work-life balance in the Seattle office and also about Google's IP/non-compete policies. After the call I emailed times I would be available for two back-to-back technical phone interviews. Received email from recruiter on 2009-10-15 confirming my scheduled time for two back-to-back technical phone interviews. Email included information about types of software engineer positions in the office and links to various Google pages (Labs, Code, lifeatgoogle Youtube channel) and Yegge's advice article. Also asked me to answer a few preliminary questions about myself to ensure I don't have any conflicts. Received call from first Google engineer as scheduled on 2009-10-20. He described his work in Gmail on contact management and chat, mainly using C++. He asked me to describe a big project I've worked on and I told him about my thesis and its accompanying software implementation. He then asked some technical questions. I asked him about his work-life balance in that office and asked him if working there is anything like what you read about in Hamming's "You and Your Research." After the interview I hung out for a couple hours waiting for the next phone call but it never came. I contacted the recruiter and she informed me that the second interviewer was unable to access his calendar and was unable to call. We rescheduled the second interview. Received phone call from second engineer as rescheduled on 2009-10-23. He told me how he works on Google Maps and used to work on Talk at the Kirkland office. He asked me to talk about my thesis and I did, joyed talking to me but we would not be moving forward. The overall process was enjoyable, even when I was an anxious wreck. The technical interviews boosted my confidence, even though I stumbled on the easiest questions (postorder & basic C programming). The first engineer was far more polite & humble than the second one, but the second one was certainly civil enough. The recruiter was kind, easy to talk to, and obviously put effort into answering all of my tough questions about the Seattle/Kirkland offices & Google policies. I learned that the Seattle/Kirkland offices tend to be a little more laid-back than the Mountain View office. Also, Google does make you sign a non-compete but it's not overly draconian. Many engineers run their own companies after hours and are even allowed to use AdWords and whatnot, provided they sign some agreements. I encourage you to go through the process for interview practice if nothing else.

* Describe a balanced binary tree. * When would you want to use a balanced tree rather than a hashmap?   6 Answers * Describe preorder, inorder, postorder.   1 Answer * Write a function, preferably in C or C++, to reverse a string.   5 Answers * Describe the design of a most-recently-used list, such as the "Recent Files" menu in Microsoft Word. It has two public methods, getlist() and access(str), which retrieve the list and mark an item as accessed, respectively. The list has a maximum number of items it can hold, say 5, and it should not have duplicates. Describe the data structure used and the running time of both public methods.   11 Answers * You have a data structure of integers, which can be negative, zero, or positive, and you need to support an API with two public methods, insert(int) and getmedian(). Describe a data structure you would use to support this API and describe the running time of the two methods. * Imagine you're writing a function that takes an array of integers and an integer and it needs to return true if any pair in the array sum to the 2nd argument. The array can have negative numbers, zero, or positive numbers. Describe how you would design this function and what its running time would be. I ran through the trivial n^2 solution, then modified it to an nlogn and finally to a linear solution.   7 Answers

Oct 21, 2014
---------------
I was interviewed by two google employees, for an hour each. I was in a small room with a white board and was asked to write the solutions to various coding question. The second interviewer also left some time for me to ask her about what it was like to work at google.

Write a program the generates the power set of a set of numbers   10 Answers

Aug 13, 2010
---------------
Initial communications was by email followed by a technical phone interview.

Implement a program to play the battleship game.   Answer Question Given a grid that contains rectangles, write a function that will return all the rectangles that overlap with each other.   6 Answers

Nov 10, 2009
---------------
it was two rounds 45min interviews. interviewers are pretty nice. First ask me to talk about past experience, and then went to technical questions. one tech question is local celebrity problem, describe the algorithm and implement it. antoher one is about merge sort. besides, one interviewer also asked a puzzle.

I had questions about collections in Java and memory management questions in C.   Answer Question

Nov 12, 2009
---------------
Had 2 phone interviews 45 minutes each. All interviews were technical. Half of the time we were talking about my experience and my projects. On the first interview I had problems which the Google Engineer asked me to program in Java. On the second interview I was programming in C.

Given an array whose elements are sorted, return the index of a the first occurrence of a specific integer. Do this in sub-linear time. I.e. do not just go through each element searching for that element.   4 Answers Given two linked lists, return the intersection of the two lists: i.e. return a list containing only the elements that occur in both of the input lists.   3 Answers

Sep 28, 2009
---------------
I interviewed at Google for a full-time Software Engineering position after graduation. As I informed the recruiter that I had a pending offer already, they skipped the initial interview and brought me in for a full-day interview. I met with 5 engineers: two 45 minute interviews, an hour lunch, and two more 45 minute interviews. There was very little discussion about past experiences and my resume. All 3 out of the 4 interviews involved a programming question that I had to solve on the white board. The last interview was an abstract systems design question.

NDA; don't want to comment. In general, be prepared to divide and conquer in every way possible. Also, dynamic programming would be a good subject of study.   Answer Question

Sep 30, 2009
---------------
Had one phone interview, then met on-site with a small number of developers during a single day. All interviews were highly technical, focused on algorithm design, improvement, and ways to parallelize computation. One interviewer was discourteous and impolite; when I misinterpreted a request, he was quite rude in pointing out that my answer was of a wholly different format than he was expecting. We did not get along, and as a result I did not fare terribly well. In every other interview, I believe I did very well or better. Also, I really got along well with every other interviewer. In my limited experience, the reports of rude or dispirited Google employees are quite exaggerated. I strongly suspect that a single mediocre report is enough to scuttle an interview, regardless of the others. My advice: Be prepared for people you don't get along with (as with any interview!), ask questions if there's even the hint of vagueness in your task, and have fun.

The question was the following. I'm rephrasing the question to make it clear for everyone to understand: - You are going on a one-way flight trip that includes billions of layovers. - You have 1 ticket for each part of your trip (i.e: if your trip is from city A to city C with a layover in city B, then you will have 1 flight ticket from city A to city B, and 1 flight ticket from city B to city C. - Each layover is unique. You are not stopping twice in the same city. - You forgot the original departure city. - You forgot the final destination city. - All the tickets you have are randomly sorted. Question are: - Design an algorithm to reconstruct your trip with minimum complexity. - How would you improve your algorithm. Example: - randomly sorted: New York-&gt;London San Francisco-&gt; Hong Kong Paris-&gt;New York London-&gt;San Francisco - sorted: Paris-&gt;New York New York-&gt;London London-&gt;San Francisco San Francisco-&gt; Hong Kong   9 Answers

Sep 17, 2009
---------------
The recruiters are very proactive and professional. The interview is mainly about design, problem solving and brainstorming. The questions are not the classical programming ones I saw from websites, but one definitely has to know the basics such as sorting and complexity to come up with good answer.

Given an array of integers which is circularly sorted, how do you find a given integer.   1 Answer

Aug 9, 2009
---------------
I initially submited my resume online for the position of Software Engineer at Google. About 2 months after, I received a call from HR asking me if I was still looking for a job, and if I was interested in a position at Google. I said yes and listed a number of positions I was interested in: Research Scientist, Software Engineer and Used Design Scientist. Two days after the call I received an email stating that my resume will fit the position of Software Engineer and was scheduled a technical phone interview 3 days later. The interviewer was nice and polite. I gave a first answer to the puzzle but he wasn't really satisfy with the answer. I got stuck for 20min and didn't get much help from the interviewer. The interview last 45min. I was given 10 minutes at the end to ask him question about his job, the life at Google, etc... Then he hang up the phone in a manner that let me knew I wouldn't go through the next step... Two days after the interview I received and email from the HR stated that I was rejected.

If a person dials a sequence of numbers on the telephone, what possible words/strings can be formed from the letters associated with those numbers?   Answer Question

Aug 14, 2009
---------------
Recruiter called and asked some basic questions e.g, 1) What is the time to search in a balanced binary tree. Then 1st phone. I was asked to equals and hashCode for a class. In the 2nd phone interview I was asked to search for an ineger in an array which is circularly sorted.

Describe your work - experience? A job situation you could manage or couldnt handle   Answer Question why google. describe yr short term and long term career goals   Answer Question

Sep 16, 2009
---------------
HR was a bit slow, and didn't get back to me with an answer until I followed up a few weeks later. Interviews were technical, very interesting, and challenging. They were computer science / software engineering problems that did not have obvious immediate answers. They want you to first state a naive algorithm, and then see if you can make it more efficient. Having a few of these interviews in a row was very draining, I definitely slowed down at the end.

No Question
Jan 7, 2011
---------------
It was difficult . A lot of technical questions were asked.

No Question
Jan 7, 2011
---------------
It was difficult . A lot of technical questions were asked.

Describe your work - experience? A job situation you could manage or couldnt handle   Answer Question why google. describe yr short term and long term career goals   Answer Question

Aug 23, 2010
---------------
several rounds of phone interview, then half day of onsite

some general OS questions and C++ question   Answer Question Linked list and tree questions   Answer Question

Oct 1, 2009
---------------
NDA makes this impossible to describe beyond - met with 5 engineers over the course of a day, each had a different technical/programming question. It would be easy for a recent grad or anyone who slings code 24/7. Not a good indicator of actual skills or abilities. Google interviewing at Google - there are plenty posted.

Which wireless channel should you choose for you home wifi, considering there is no interference on any of them.   2 Answers

Jul 31, 2009
---------------
The interviews were with 4 different Software Engineers. From what I gathered online and from the feedback I got from friends currently Software Engineers at Google, I though I had decent chances: strong knowledge of at least one current language, some knowledge about algorithms and data-structures as well as Big O notation. I was surprised to be asked non software questions like various network speed efficiency of various wireless technologies, solve math brainteaser in a language I specifically said I had not used in years, and being told that the code had to compile and run as is, regardless of potential typos. It took several weeks for Google to come back to me but I got a quick offer from a competitor with a more realistic interview process. I'm glad I did not hold my breath, I think I should have left after the second person, it was pretty obvious the process was a plain waste of time.

question on design patterns   1 Answer explanation of ph.d. research   Answer Question

Oct 25, 2009
---------------
I got an e-mail from a recruiter at Google. Then, I talked to her on the phone about my skills and other stuff on my resume. I had a technical interview over the phone which I passed. I had a simple coding question and some questions on Java, which I said I was mostly familiar with. My interview process took a long time because I had to go to a couple of conferences after I passed the phone interview. For the on-site interview, I reviewed algorithms and common questions on java that I found online, which was really helpful since some of things I did not come across since I have been working on Ph.D. without much programming involved. In general, the interviewers were friendly and not intimidating as some people might think because they are Google engineers. I thought I had done well specially on the algorithms part, but I did not get an offer. The recruiter was nice enough to give me a call and tell me personally instead of sending one of those generic e-mails "...we have no match for you..."

Given X number of search terms, write an algorithm that will return the smallest substring from an article that contains all of the search terms.   3 Answers

Apr 20, 2013
---------------
Very odd interviewing process. I had applied to work in Google Finance in Mountain View, they ended up calling me about a position for Google in Shanghai. I had no interest in moving out there. Furthermore, very strange interview process. I was expecting to work on the Google Finance front-end, but they ended up asking me a whole bunch of search engine related questions which I was not prepared for.

Find the largest 100 numbers out of a list of a trillion unsorted numbers   3 Answers

Jul 15, 2011
---------------
Talked with recruiter via email to get some basic information exchanged. After sending her transcript and resume and answering a bunch of questions to get a feel for what I was looking for she arranged a phone interview. The interviewer was an engineer at google who asked me a couple general algorithm questions which was expected but I was turned off by the specific language question(s) he asked that I felt were not relevant as one could easily reference them online, I am not a dictionary, I am a problem solver.

Given a picture of a skip list data structure, implement the algorithm to maintain skip lists (add, search, delete).   Answer Question

Apr 20, 2010
---------------
A recruiter from Google found my profile on LinkedIn and contacted me. We discussed by phone my career interests relative to opportunities at the company. She transferred me to a different person in staffing who represented jobs that were a closer fit to my interest. The technical lead called me for a phone screen which consisted of describing what I did. That went well. I was excited to have an onsite interview in the renowned building 42. There were two 1:1 interviews in the morning, lunch at the acclaimed free Google cafeteria, and two more interviews in the afternoon. The questions were challenging and quite technical. The interviewers were great people who I felt I could work with. I enjoyed the chance to meet them. I got home and contemplated skip lists and spinlocks and algorithms I could not compose on the whiteboard, It was a great learning experience to better prepare me for the future.

Something about reading a file of extreme size a chunk at a time, and search for the occurrence of a string in it. The focus was on describing the algorithm and data structures used.   1 Answer

Aug 21, 2010
---------------
I was called up by a person who already worked as a Google Engineer and was asked a bunch of questions for which I was not prepared fully. I think the most basic mistake I made was assuming that working full time and evenings on coding would prepare me for any coding question within my are of expertise. Of course not! :)

Please tell us about the most satisfying project you worked on in the last year?   Answer Question Please tell us about a personal challenge you had with someone who managed you?   Answer Question

May 25, 2009
---------------
A quick phone interview. Good questions about my past experience and future interests. Very fair and well organized. Friendly, and to the point. Not intimidating. An enjoyable experience. Focused on recent positions, including ability to problem solve. talk some about working with others, ability, manageability, willingness, . not as technical as I would have expected

No Question
May 7, 2009
---------------
In the end I did not get the offer, but interviewing with Google has been a very interesting. The interviews for the software engineer position consisted mostly entirely of algorithm and coding questions with a little bit of design. The algorithmic questions did not require one to 'remember' some obscure or very advanced algorithm. All questions were solvable using basic algorithmic knowledge. The interviewee is expected to be able to estimate the performance of the solution that he/she is proposing and to come up with a reasonably optimal solution.

Given a dictionary of words, decrypt it using a given decrypt() function   Answer Question

Sep 11, 2010
---------------
Had a phone interview with a software engineer, he asked me how to decrypt a dictionary and how multithreading can help make the process faster

That's all good and correct. Now, assume that the computers you are given have only 1 MB of memory each. How would you solve the same problem using the same number of machines?   1 Answer

May 30, 2009
---------------
I was originally contacted by a Google recruiter. After discussing the position, the recruiter first set me up for a phone interview and then for a site visit. During the site visit, I talked with five different engineers. I met each person alone and each meeting was similar to each other: A 5-10 minutes chat about my background and then 35-40 minutes Q&A session with technical questions.

Create a fast cached storage mechanism that, given a limitation on the amount of cache memory, will ensure that only the least recently used items are discarded when the cache memory is reached when inserting a new item. It supports 2 functions: String get(T t) and void put(String k, T t).   1 Answer Create a cost model that allows Google to make purchasing decisions on to compare the cost of purchasing more RAM memory for their servers vs. buying more disk space.   1 Answer Design an algorithm to play a game of Frogger and then code the solution. The object of the game is to direct a frog to avoid cars while crossing a busy road. You may represent a road lane via an array. Generalize the solution for an N-lane road.   2 Answers

Mar 19, 2009
---------------
I was initially contacted by a Google recruiter through LinkedIn Inmail. I stated my preference to work in NYC on Google’s infrastructure software and a one-hour technical screening phone interview was scheduled. The phone interview covered Computer Science basics such as trees, hash tables, coding constructs, differences between Java and C++, and Design Patterns. At the end I was given a coding assignment to complete within 24 hours “to show my best work” and submit to Google. The NYC on-site interview was scheduled 2 weeks later where I was interviewed by 5 different Engineers for 45-minutes each. Some asked me to design solutions to problems and code them (on a white board) in my preferred programming language. Others were open-ended problems where (I believe) I was expected to ask smart questions to define the problem and its solution.

Are there any particular projects or areas that you would enjoy working on at Google?   Answer Question What percentage of the time are you coding and in what language?   Answer Question

May 18, 2010
---------------
The intervew was two hourlong interviews. I completely bombed it due to spending all my study time on reading up on interview questions rather than basic algorithms. It's really all about being prepared for anything by having solid background in algorithms. You need to be able to come up with recursive algorithms on the spot, with cost analysis. They won't be anything that you can memorize and regurgitate later either (e.g. write quicksort). I wouldn't say that the interview would've been hard had I gone back to my algorithms class material for preparation, but unfortunately, I hadn't. The interviewers themselves were professional and pleasant.

When one of my interviewers held up the pen in his hand and asked how I would go about testing it.   Answer Question

Oct 21, 2009
---------------
I was emailed by a Google recruiter to assess my compatibility for a position in Software Engineering. The recruiter sent a list of questions via email, but the questions were mostly boilerplate -- some of which could have been readily answered with a cursory glance at my resume (which they already had). The better questions were of a "tell me about a time you..." format. I responded to the questions by email and got a canned "thanks" response, but heard nothing more and did not pursue it.

Create a data structure for LFU cache   1 Answer

Jul 29, 2013
---------------
I interviewed for this position through university recruiting toward the end of my M.S. in Computer Science. After submitting an application online, I was invited for a first interview on campus. This involved meeting with two different people back to back for about half an hour each, and consisted of basic data structures and algorithms questions as well as an opportunity to ask questions about Google. I was tracked into the Test Engineer role for the remainder of the hiring process. The second round interview was full-day and took place at the New York City office, with a group of ten or fifteen other students. I had more technical interviews with several different people, and questions were a bit more involved, in particular a set of open ended questions about how I would go about "testing" some common everyday objects. There was also lunch in the cafeteria, a tour of the offices (which included pretty cool games/activity areas), and a slot of time where current employees came in and discussed their experiences working there. I wasn't very knowledgeable about test engineering prior to the second interview, so some of my answers showed my lack of understanding of the full breadth of known testing approaches. I was also not necessarily interested in a test position.

Why the manhole cover is round?   3 Answers

Jul 21, 2009
---------------
I submitted application online. After a week, a recruiter contacted me via email to schedule a preliminary screen. The call was mainly about scheduling the next technical phone interview. In the technical phone interview, the interviewer asked me questions on tree travesal and graph. I visited Google for an onsite interview a few weeks later. The onsite interview consisted of 5 1:1 interview plus a lunch.

A question on graphs and their use for optimally sorting fictitious coins from another country.   Answer Question

Mar 27, 2011
---------------
Interview went smoothly with questions already seen earlier online. The interviewer gives advice and can lead you into the answer when you are struggling. With coding questions mostly using a language of your choice and not requiring any specific technical background except the basic computer sciences classes such as data structures and algorithms. Yes, a good knowledge of these is understood to be a trivial prerequisite for joining the company. Some complexity questions are asked too.

No Question
Mar 19, 2009
---------------
Initial interview with in-house recruiter, followed up by a technical phone interview. We reviewed my resume and work experience, as well as, technical questions and programming questions. Second in-house recruiter interview, followed-up by on site interview. A full day interview with several technical staff members. None of the interviewers looked at my resume nor asked me any questions regarding my past work experience including time management, project timelines, group interactions, risk assessment, etc. I have years of experience in delivering high-volume products to the consumer market including patents. They simply asked me data structures questions and posed coding problems. They are looking for one type of engineer (CS) regardless of employment experience.

No Question
Jul 8, 2010
---------------
I had just finished a summer internship and was interviewed for a full time position. I had two separate interviews with other engineers. The interviews consisted of programming questions, logic and math puzzles, and a brief discussion of previous experience.

Imagine dropping a Rubik's Cube into a bucket of paint. How many of the cubes will get paint on them?   7 Answers

Mar 5, 2009
---------------
It started with a general phone screen by HR. There were no technical questions except asking "How many years experience do you have with...", and no behavioral questions. Next, there was an on-site interview that consisted of two one-on-one interviews with other engineers. It was 100% technical. They did not open it up for my questions to them, and didn't even seem to consider that they'd need to sell the job to me. In fact, they didn't even ask me general questions - only questions from their pool of technical questions. For this position (and maybe this would be different depending on the job), the questions were more on the academic side - questions touching on discrete structures, analysis of algorithms - generally the kind of thing that you need to know in school and don't really need in practice (and if you do, there's a book on your shelf for it). It only takes one interviewer to pull the plug on you, so you have to impress every interviewer, not just the majority.

Design a web search engine that searches web locations for anagrams of a given string.   1 Answer Design a 2D dungeon crawling game. It must allow for various items in the maze - walls, objects, and computer-controlled characters. (The focus was on the class structures, and how to optimize the experience for the user as s/he travels through the dungeon.)   Answer Question

Mar 18, 2009
---------------
I had a phone conversation with a recruiter from the New York office, and a few days later she sent me detailed multi-page email on how the in-person interview will be conducted. I was told I will meet 3 engineers in the Austin office. When I arrived in the office, I was met by an engineering manager. An hour was spent discussing an algorithmic problem. I tried to ask questions about the culture of the Austin office, how requirements are gathered, how testing is done, what the technical environment is, but was pointed back to the code on the whiteboard. After an hour of conversation with this engineering manager, another engineering manager showed up, and the first hour was repeated with a different algorithm/code problem. And then yet another engineering manager. My questions were not answered, and these guys were not interested in anything other than my ability to reason about large sets of bits. A recruiter followed up about a week later, and Google send me a check for my interview expenses. I suppose it was a good interview experience - I quickly learned that I definitely did not want to work there.

Something about poker, or baseball season, or some other game that I was not familiar with enough to reason about.   1 Answer

Jun 18, 2010
---------------
There was initial generic HR interview of the question and answer type. Then two 1:1 phone interviews of about an hour each. Then a day on site full of 5 one on one interviews, each also about an hour, asking difficult technical questions, but thankfully none of the hard logic puzzles and riddles that they were rumored to use. The on site interviews included a lot of grilling on basic skills, data structures (both existing ones, and having to create my own to meet an examples problem), performance scaling, networking, and I forget what else. Interviewers were helpful. They encouraged you to talk out what you were trying to do. No one was hostile. I would describe all 7 (2 by phone, 5 in person) one on one interviews as rather fun. The accommodations were nice. The cafeteria's were very nice. Everyone was tremendously friendly. I really liked the town as well. The only criticism I would offer is that the time after each interview to hear news and find out what the next step was seemed very long. Over all the process was thorough, but it felt a little drawn out.

To diagnose why bandwidth was bad (hypothetically of course) between sites. After a few obvious questions to ask I was stuck because that really wasn't my area.   2 Answers

May 3, 2009
---------------
I was contacted by a recruiter and given a phone interview. After I passed the phone interview, I was scheduled on an on-site interview. My interview was for 2 days. The first day, I interviewed with 4 engineers and got a free lunch. On the second day, I interviewed with 2 other engineers.

What would you like to work on in Google?   Answer Question

Oct 18, 2010
---------------
Google has a similar interview process to the other major tech companies. Their questions are very smart and designed to test computer fundamentals while giving the interviewer an easy time of making a hire/no-hire decision. The questions get progressively harder as the day progresses. Starting from simple problems like "you're trying to recover a machine, you're in single user mode, /etc/passwd is corrupt, but none of your text editors are working on the boot image due to shared library issues. how would you rebuild /etc/passwd?" they quickly progressed to divide-and-conquer approaches to merge sorting data too large to fit in memory and other standard coding puzzle questions.

How would you restore /etc/passwd on a machine with a corrupt root disk which is only barely functioning. You have a shell and most unix shell commands, but no text editors.   2 Answers How would you sort a file which is too large to fit in memory.   3 Answers

Aug 27, 2010
---------------
Several successive one-to-one interviews. First was a general discussion, ending with questions about a particular point of a framework. Apparently really did not care about my previous experience or skills. Second one was more about infrastructure, basically how to build web search engines (inverted indexes, how to match several terms,etc). Third one was algorithms oriented, was is the best way to implement sort, Java Code, and variations on the best choice for pivot, ending in maths, arithmetic suites, etc. Last one was somewhat about web client data model. Overall, tricky interviews, but a very strange and bad feeling about the interview process with the complete lack of discussions on real world previous experience.

What happens when you enter a search query on google ? ideas about sorting results ?   Answer Question How to choose pivot in quicksort   2 Answers

Jun 3, 2010
---------------
The recruiter wasn't interested at all in discussing the position. He just wanted to get me moved on to the next step. He clearly didn't think he needed to take the time to sell me on the position. His attitude was just "We're Google, of course you want to work here". The phone interview was fine, but I was unable to get any kind of idea of what specifically I would do. Would it be front end work? Back end work? What team or product? Without any information there and being told I wouldn't know what I would work on until I started, I decided to decline taking an on-site interview.

I had developed a large scale transactional system in the past. The questions, which were very insightful and well-thought out, revolved around a few edge cases in the system, and how we solved issues related to that.   Answer Question

Mar 26, 2009
---------------
I had have put my name on Google's candidate list through my advisor who worked there in the past. They called me to arrange a phone interview and some paperwork. In that paperwork, I was asked in what areas, at which locations and on which dates I would like to have internship. My first interview was scheduled a few weeks after that. My first interviewer was working in New York office. Two weeks after that I was told that I passed the first stage and my name had been put into the pool of candidates. I was going to be contacted if a group needs an intern that matches to my interests and specialties. However they didn't contact me for a couple of weeks even I told them that I had an offer from another company, so I decided to accept the other offer.

This is an open ended question? How would you differentiate the same keywords in different contexts? For example, how can a search engine understand which of them represent the hotel brand name and which of them represent the celebrity, if a user searches for "Hilton"?   1 Answer What kind of data structure would you use to index annagrams of words? e.g. if there exists the word "top" in the database, the query for "pot" should list that...   4 Answers

Mar 24, 2009
---------------
Hiring and interview process was well-run. From initial phone screen to onsite interview took 2 weeks. The onsite consisted of around 5 one one ones with their engineers. Everyone was cordial. Like all other tech interviews, I did a lot of whiteboard coding. I liked the work culture and office environment.

Tell me all about yourself.   1 Answer

Mar 24, 2009
---------------
Hiring and interview process was well-run. From initial phone screen to onsite interview took 2 weeks. The onsite consisted of around 5 one one ones with their engineers. Everyone was cordial. Like all other tech interviews, I did a lot of whiteboard coding. I liked the work culture and office environment.

Tell me all about yourself.   1 Answer

Jul 24, 2010
---------------
I submitted my resume on the Google website for open positions. Within 2 days, I received a call from a gal from the Google Enterprise recruiting team. She went over my resume, asked about my current work experience and if I knew about Google Apps etc. She then asked about my GPA. I told her that my GPA doesn't meet Google's requirements (it's no where near a 3.8+) She giggled and then said, someone like you probably needs a 3.5 or better GPA to get hired at Google, we don't check your transcripts... I was a little taken aback (seriously, was she asking that I inflate my GPA.) She said you've got a stellar resume, I'm going to set up a phone interview with you. If they like you, you can fill out a form that asks for you GPA -- just remember that we dont ask for transcripts. By now, I got the drift.

How would you sell Google Apps to someone who has invested in servers and computers and uses Offiice   Answer Question

May 28, 2012
---------------
Applied online, got contacted by a number of recruiters, each from a different office. Chose the Mountain View location. Passed the first phone screen and not the second.

Give the SQL schema of a college student registry application   Answer Question

Jan 19, 2010
---------------
5 people interviewed. had group lunch together in a different building. asked both algo and programming questions. asked lots of related technical questions, systems related. people interview you may be quite random too. large company with lots of groups now. hard to find the right project has high expectation for senior people. They rejected for this reason.

an algo question   1 Answer

May 25, 2009
---------------
I had one recruiter call, then one technical interview over the phone (very nice question, very nice interviewer who guided me through the process of answering the question - he was very pleased in the end) then a short recruiter call (another HR person) then the on-site. There were 5 1:1s of about 30 minutes, with a lunch break. The questions were easier than during the phone interview. A lot of coding. But I kind of blew up - I thought I had the right answer for some of the questions, but much later I realized my answers weren't great at all.

Stuff with string manipulation.   Answer Question

Aug 15, 2009
---------------
Recruiter contacted me and then sent me 3 exam questions to be completed in 2 hours.After 2 days she scheduled telephonic interview. Interview lasted 1 hour and 15 mins. Questions ranged from data structure design, wrting unit tests and algorithms complexity. I was asked question to find abotu tree traversal. Random quesions like why do we use desig patterns were asked.

Write a program to find depth of binary search tree without using recursion   2 Answers

Sep 17, 2009
---------------
Was recommended by a former colleague and called for a phone screening by a recruiter. Recruiter asked a few relatively basic technical questions. Was then contacted for another more in depth phone interview. I believe this was still with an HR person, not anyone from engineering. They asked more in depth technical questions. Was able to answer all but one of them but eventually answered it with some hints. Was not ever called back.

Name some types of Java collection classes.   Answer Question What's the difference between a hashtable and a hashmap?   2 Answers

Mar 18, 2009
---------------
I had three phone interviews and then they brought me on site for a face to face interview with 5 developers. The phone interviews were mostly technical questions to make sure I had some semblance of development experience. The on-site interview was far more detailed, with detailed questions about bit-masking and such.

How would you store 1 million phone numbers?   4 Answers

Mar 18, 2009
---------------
Communication with the company were great. The recruiter was timely in her responses to email queries and was very friendly to deal with. The phone interviews (2) were appropriate in length and in content and the interviewers were only time. The onsite interviews were also well planned and well scheduled, everyone was on time. I had 5 or 6 1:1 interviews during my day and they all asked different types of technical questions. The only nit I would pick was that the focus was entirely technical, it seemed like no one really cared about my personal or career growth or what I really wanted to do. The actual hiring process is what I had the most problem with. Google insists on hiring really smart people and putting them on somewhat random projects. During the interview process they will tell you nothing about what you'll be working on, in fact they don't even know until the day you start! This is ridiculous when you are trying to hire engineers with difficult to find specialty skills. These same people are getting compelling offers from other companies who are willing to let them work on stuff in their domain of expertise and are willing to tell then what they'll work on. Google treats all of its new hires like they are fresh out of college. I.e. they are smart, but have little experience so they'll be ready to just work on anything just because its Google. Sadly this is simply not true of the more experience senior people out there.

Implement a skip list traversal routine. Algorithmic complexity of traversal. Algorithm for converting uniformly distributed random numbers into a logarithmic distribution.   1 Answer

Aug 12, 2009
---------------
A Google recruiter contacted me (I never applied for any positions in Google). Within a week I had my phone interview which went very well. They decided to skip the second phone interview (at least that's what I was told) and invited me to the NY office for in person interview. In person interview lasted the whole day with me talking to 6 people and having a lunch with a team. I found the office to be super cool and fun atmosphere and people were very nice. They questions asked were fairly reasonable. What threw me off was recruiter stressing several times that Google's approach to interviews is very academic. I was more technical then academic (I thought) and spend the next week reviewing algorithms and data structures and such. I was told at the end that I have very strong professional qualifications, but my knowledge is more academic and were looking for somebody with more hands on experience (after me throwing theory at them left and right). At the end I think I overdid it. I think you need to find a good balance if you want to get hired.

Most phones now have full keyboards. Before there there three letters mapped to a number button. Describe how you would go about implementing spelling and word suggestions as people type.   3 Answers Implement on a board a shortest path algorithm when traveling from point A to point B on a board. Once you produce a solution, they throw modifications to an initial problem like what if you know that points x, y, z cannot be used in a path.   2 Answers

Oct 10, 2015
---------------
I had my onsite interview in a couple of weeks back. There were a total of 5 interviews plus a one hour lunch interview. In each of the 4 interviews I was asked a technical coding question while the last one was a systems design interview. I thought i did reasonable well on 4 of the interviews but in the end i got rejected which was kinda disappointing.

Out of the respect for the NDA I would not be able to share the exact details of the questions but two of the questions involved DFS on a 2d matrix. 1 question was on string manipulation and one was about solving a problem related to google docs.   Answer Question

Aug 28, 2015
---------------
Everything seemed very professional. 5 in person interviews. The interviewers expected to have a fully working solution by the end of the interview. In the end I did not get the offer and the feedback from the recruiter was that it seemed I knew how to solve the problems but I was not fast enough...:|

print the entries of a 2D matrix in spiral order   1 Answer

Aug 16, 2015
---------------
2 Phone interviews, followed by on-site interviews. On site interviews were 4 45 minute programming interviews and one 45 minute systems design interview. Recruiter in close contact all the way through the process. Questions easier than expected - more straight programming questions rather than algorithmic design questions. Unfortunately mental blank in first interview meant didn't receive offer.

Under NDA, but programming questions covered string processing, graph traversal and AI.   1 Answer

Aug 12, 2015
---------------
Phone call then face to face interview. Phone call was light, informal just general background stuff. Then after that a proper interview took place in Google and standard questions were asked as well as some technical questions.

why should we hire you?   1 Answer

Aug 10, 2015
---------------
Recruiter contacted me and explained me the process. We scheduled the phone interview one month later. It went quite okay, nothing unexpected. I got the answer the same day and we scheduled an on-site two weeks later. The on-side was fine, although there can be tricky questions. In general, it was not too difficult and a fun process. Everything went quick and very professional!

Usual technical interview questions, nothing unexpected   Answer Question

Jul 29, 2015
---------------
Reached by a coordinator, passed phone interview and went to on-site interview. There are four on-site one-to-one interview and lunch with another engineer. I solved all interview questions, but some may not optimal, and I made a serious problem which was pointed out by the interviewer.

Phone interview is extremely simple. I can&#039;t remember exact questions, all of those questions only require basic level of data structures and common algorithms, such as linked list (I used twice), binary tree, dynamic programming, BFS, recursion, etc.   Answer Question

Aug 18, 2015
---------------
Applied online and received an email from a recruiter in the next hours. We scheduled a call where some general questions where asked and a technical interview call was scheduled. In the technical interview call we used Google Docs the code and I didn't find the question to difficult. After some days I had a call with my recruiter and we arranged the on-site interviews in around 10 days. The experience in the on-site interviews was very pleasant. I had 5 interviews of 45 minutes. The schedule was 3 consecutive interviews in the morning, then lunch and tour with a different engineer, and then 2 more interviews.

One technical phone interview. Four technical on-site interviews. One system design on-site interview. The technical questions where pretty straight forward and for one you needed topological sorting to solve it. System design question was not entirely what I expected.   Answer Question

Aug 8, 2015
---------------
I was contacted by a recruiter who found my profile on LinkedIn. She asked me whether I was interested in a software engineering job at Google. It seemed like an interesting opportunity so I said yes. However, after the initial contact with this recruiter I kept on being passed on between different recruiters. I must have had contact with at least 4 different recruiters. When a date and time was finally set for the phone interview, I was stood up by one of these recruiters. I contacted him again, and a new time was set. Unbelievably, I was stood up again! The appointment was not in his agenda, he explained. Third time, I put the appointment in his agenda myself, and this time, the phone interview happened. We agreed on a date for the interview with an engineer. The recruiter said that he would send me information about what type of questions would be asked during the phone interview. He also said he would contact me again a little bit before the date of the interview. I never received any news anymore from the recruiter! A little while before the interview was supposed to happen I started working at another company. Given the previous experience I actually didn't expect them to call me. Surprisingly, they did! However, given how they treated me, and I was at my new job, I also stood them up. Afterwards, the recruiter emailed me again to ask me what happened. Maybe I should not have stood them up myself, but I feel they also acted very unprofessional during the recruitment process.

I only had an initial phone interview with the recruiter and no technical questions where asked.   Answer Question

Aug 31, 2015
---------------
It was a classical Interview Process as explained in a lot of reviews. I had a first phone call with a HR to talk about my resume and my experience. Then I had a first technical phone interview with a Software Engineer from the office I applied in. Given that I did really well on that phone interview, I was directly taken for five on-site interviews, one of which was a System Design interview.

Suppose that you have a sorted array of integers (positive or negative). You want to apply a function of the form f(x) = a * x^2 + b * x + c to each element x of the array such that the resulting array is still sorted. Implement this in Java or C++. The input are the initial sorted array and the function parameters (a, b and c).   1 Answer

Sep 1, 2015
---------------
Only interview on Algorithm. 45-minutes per round. The question was not very hard. But I took too much time to complete and it still had some redundancy. So I failed.

Given an array of strings in which elements are mixture of * and #s. Find out the minimum coverage of # of this array.   1 Answer

Jul 16, 2015
---------------
The process for setting up the time/date and preparation for the interview was smooth. The recruiter was quick on emails and polite. After a brief chat over the phone with the recruiter I had a phone interview with the technical guy (an employee). The technical guy had a heavy Australian accent on top of speaking to me over a loudspeaker. I am used to American accent and understanding his speech required extra efforts of mine in addition to not hearing him properly because of his loudspeaker. I'd have asked him to switch to a "normal" microphone mode but being already very stressed I didn't think about that during the interview. I applied for a fresh grad position and this interview was one of the first interviews I had in my life. The guy asked me to write down an algorithm for a problem. But before that he spent about 20 minutes of basically bragging about himself. I know that it's normal for an interviewer to introduce himself and his projects but his talk was more than that! He gave a basic description of the problem and the trick was to ask more questions in order to come up with the properly working algorithm. The guy didn't make any efforts for giving me clues or trying to lead me through the solution. He was just like "Huh, ok, then what" or "Huh, ok". I felt he was waiting for the interview to be over asap. I'd have solved that problem but I was very nervous in part for being interviewed by Google, in part for not understanding properly what he was saying, and in part for his arrogance. I immediately sensed his arrogance after he asked me this question: "Have you worked with large systems?" To which I replied "Yes, the number of nodes ranged from X to Y" (which was already the max number for computing in my domain), and then he, with sensible ridicule in his intonation, said something like "Huh, this is not a big number." Everyone knows that Google has way way bigger numbers in their systems, but that doesn't mean that the interviewer has a right to belittle the experience of the candidates, nor to expect from a fresh grad to have worked on the Google-scale-like systems. I can't disclose the technical question asked during the interview, because you already know why.

How big was the systems I worked with?   11 Answers

Jul 12, 2015
---------------
Apply online, interviewer are very nice. last 40mins. We talked through phone, he introduced me about Google and asked me if I had any questions regarding to the company.

Can you write code in Java or C++ to find the power set of a given set. For example if S={a,b} the power set is P={{},{a},{b},{a,b}} ( you can also choose any of your favorite programming language)   Answer Question

Aug 12, 2015
---------------
As the normal hiring process for new grads in China. One phone interview and four onsite interviews. And two questions for each one. The first and third interviewer is trying to help me finding the way to the best solution. And the second and forth interviewer talks little.

Optimize class string in stl. For example, a is a string, b is a string with value &amp;#034;hello&amp;#034;. When the programmer writes &amp;#034;a = b&amp;#034;, a becomes &amp;#034;hello&amp;#034; and b is still &amp;#034;hello&amp;#034;, but a does not allocated memory for efficiency. Then the programmer calls &amp;#034;b.uppercase&amp;#034;. b become &amp;#034;HELLO&amp;#034; while a is still &amp;#034;hello&amp;#034;. That is string behaves exactly like the one from stl but allocate new memory as late as possible.   Answer Question

Aug 10, 2015
---------------
referral, email questions, phone interview What was your largest coding/CS project (personal or academic) in C/C++, Java or Python in the last 6-12 months? How many lines did you personally code? Why are you interested in Google? What is your favorite Google product? What would you do to enhance that product?

abstract version: given array of doubles representing left start position of lines with width 0.01 meter like [-0.001, 0.001,0.01, -0.2] along x axis determine if the give lines cover [0.0 ,1.0] inclusive   Answer Question

Jul 26, 2015
---------------
2 back to back telephone calls from the software engineer of google, each one last for 45 mins, writing codes in google doc, they are focusing the core algorithms and data structures design and implementation

one DFS and one Hash Table   Answer Question

Jun 12, 2015
---------------
Contacted by recruiter after earlier narrowly failed interview. First stage was a short phone call with a few quick questions by the recruiter. This was followed by two 1-hour phone interviews with engineers; both of them consisted of one soft question and one programming problem. I wrote code in a Google Docs document that was shared between me and the interviewer. Before the interviews, the recruiter provided a wealth of preparation materials. The final stage was an onsite interview at a Google office. Google paid for travel and lodging, and was very flexible in scheduling the flight. There were four 1-hour interviews, each with a different programming problem and a few follow-up questions, with a lunch break in the middle. To write the code, I could use a whiteboard or a Chromebook that was provided. When I forgot a detail about a method of an STL container, I was allowed to pull up a reference page. There was a focus on doing things in an algorithmically efficient way; I was usually asked to estimate the complexity of my code, and come up with improvements if my initial solution was not optimal. Open source experience proved very useful, as I was able to provide in-depth answers to soft questions. After accepting the offer, there was a background check to verify my employment and education history, as well as my criminal record.

One of the phone interviews involved adding extremely large numbers represented as strings of decimals. I was required to first write a basic implementation, and then discuss how it might be parallelized.   Answer Question

Jul 13, 2015
---------------
I was referred by a current employee, HR then contacted me directly, scheduled a phone interview and then went to onsite interview day (5 interviews). The whole experience was great everyone was very friendly, they provided a training session on how to approach questions through a hangout. When I had a family bereavement they rescheduled the interview, and they were happy to accommodate my schedule even when it meant a long delay in between interviews.

Cannot Disclose Interview Questions.   Answer Question

Jul 7, 2015
---------------
There was a call for PhD internships somewhere in North America, I sent my resume and a recruiter contacted me. They wanted to do two phone interviews (2x45min), which took place approx. 3 weeks later. I requested Google Hangout with video, because someone suggested that to me as it would make the talking easier. About a week later I received an email that I passed the interview and that I will continue to the host matching phase. The first interviewer I had was very rude, he came too late and both his mic and earphones stopped working after a while. He didn't do anything to change it but just watched me code. It was difficult because I didn't know what to do exactly, but I solve the question nonetheless. Because of this we could only do one question, he asked nothing about my background and I could not ask him any questions. The second interviewer was very friendly. We chatted about my background, he asked a questions about OO programming and another one about list sorting. Both went well and in the end I got to ask him some questions as well.

Mostly straight-up ADS questions, but one was &#034;How would you design a system containing millions of small documents for millions of users&#034;.   Answer Question

Aug 3, 2015
---------------
Quite demanding, I spent a lot of time preparing. First an informal phone interview, then did an interview via Google Docs, and then five on-site interviews. Afterwards I wasn't quite accepted but they told me to apply again in 6-12 months and I probably will. It was a great experience and I learned a lot through my preparations. Recommend you get a good book (or two) on programming questions, and spend 2-3 months before you apply.

problem solving   Answer Question

Jul 14, 2015
---------------
The recruiter called me and set a time and date of my technical interview. It was 45 min phone interview. Using Google Document to write the code. I enjoyed my interview although it was very stressful for me. The lesson I got was that sometime the most easy answer is the best one.

No Question
Aug 3, 2015
---------------
Quite demanding, I spent a lot of time preparing. First an informal phone interview, then did an interview via Google Docs, and then five on-site interviews. Afterwards I wasn't quite accepted but they told me to apply again in 6-12 months and I probably will. It was a great experience and I learned a lot through my preparations. Recommend you get a good book (or two) on programming questions, and spend 2-3 months before you apply.

Mostly straight-up ADS questions, but one was &#034;How would you design a system containing millions of small documents for millions of users&#034;.   Answer Question

Jul 14, 2015
---------------
The recruiter called me and set a time and date of my technical interview. It was 45 min phone interview. Using Google Document to write the code. I enjoyed my interview although it was very stressful for me. The lesson I got was that sometime the most easy answer is the best one.

problem solving   Answer Question

May 21, 2015
---------------
Process took 1+ month from the initial talk with recruiter. Routine phone interview with a couple of interesting coding questions, nothing out of the ordinary. Asked to discuss runtime, improve the code, etc. Onsite interview was significantly harder, for some of the questions you might not even expected to write full code in the allotted 45 minutes.

Questions involving graph theory and DP   Answer Question

Feb 11, 2015
---------------
The process went on for about 50 days or so. After the initial call from the recruiter, i got around 15 days to prepare for the first round, aka the screening. This was conducted over a phone call and lasted for a little more than an hour. Basic questions, nothing too hard, the key was to demonstrate the thought behind the solution and find if multiple solutions exist and not just the end result. 4 days later, i got a call from the recruiter who informed me that i have been shortlisted for an onsite interview at the Google office. I got around 20 days this time around to prepare. Had 4 rounds of interviews at the office, mostly on data structures and their usage. The key thing again was to demonstrate your ability to arrive at a solution, rather than directly solve it. I do not think the questions were very difficult, but in some sense my nervousness got the better of me and even though i had solved a lot of similar questions during my preparation, i jumped to conclusions on the answer and delivered incomplete answers. Overall, my experience with the entire hiring process right from the time of the first call till the end was very good. I am happy that i got the opportunity to review algorithms and solve many problems during the preparations. It is sad that i did not get through, but i look forward to applying again to Google. As for the interactions with the employees at Google, they were very helpful during the interviews or otherwise.

The question was very similar to questions from chapter about arrays from Cracking the Coding Interview book. I cant tell exact question, but the overall idea: given integer array, count number of element pairs, satisfying some conditions. This is very popular question, so there are many examples with different conditions.   Answer Question

May 7, 2015
---------------
Recruiter wrote me, then phoned, asked few questions for basic knowledge of Computer Science: sorting, hashing, etc. Then he appointed phone technical interview and gave some materials to understand overall process. It was my first phone interview. It started with some questions abou my job, and continued with programming problem. After few minutes I described the algorithm, then started coding. I wrote core function, but did not finished the helper function, because, as I understood, interviewer was ok with it. Now, since I have more experience in interviews and programming questions, I understand that I have made 3 mistakes: 1) I was very nervous. It is not helphul, thanks to cap)) Solution: get more practice in some war-conditions, like whiteboard, white list and abcense of answers or even hints. 2) I have not finished the code. Now I understand that it was fatal mistake. Solution: practice to make things done on 100%. 3) I choose good company for my First interview ever. Solution: try yourself on other companies first. Anyway, it was very interesting and helpful.

Match arrangement   Answer Question

Jun 12, 2015
---------------
Got a phone interview. Just one algorithm problem. I did not solve that out and then he asked me about my experience. I suppose I answered well, but the coding part I did so bad. So I still failed that.

Sort lines in very large file (large enough that it does not fit into memory).   1 Answer

Jul 24, 2015
---------------
I applied to Google and Facebook at roughly the same time. Although I did not get any offer, interview at Facebook was professional and friendly, and at the end I learned about my strong and weak sides. Interview at Google was the opposite of that. 1. Recruiter sent me an email asking when we could talk. I answered specifying when I have time for a phone call. Then there was over a week of silence, and finally recruiter called me on different hour that I specified. He said that he has one possible date for phone interview, so I accepted. 2. My first phone interview did not happen, because interviewer did not show up. Interview was rescheduled. 3. Second interview went smoothly. I answered all the questions, and interviewer seemed satisfied with the answers. 4. The same day recruiter called me and said that my evaluation was inconclusive and we need another phone interview. I asked for technical feedback, but I was not given any. The only information that I received was that "my solution was not good enough". 5. Second interview went similar to the first one. Again I answered all the questions. This time interviewer even said that he is satisfied with my answers. 6. After a week recruiter called me and said that evaluation was inconclusive again, and this ends recruitment process. I asked for technical feedback, and he said that he does not have any, but he will contact me when he get one. 7. After two weeks without information, I tried to contact my recruiter by email. Then again by phone. 8. After a month I received anonymous survey about my interview experience. I used it to complain about lack of information from recruiter and the fact that I still do not know why I was rejected. 9. The next morning I got a call from my recruiter. He apologized for not contacting me earlier and gave me technical feedback from my two interviews. I learned that first call I failed because my solution was not optimal (it was O(N log N) when O(N) was possible). On the second call I implemented optimal algorithm, but there were several issues with implementation that led to lowering my evaluation to "neutral". And two neutral opinions are not enough to qualify. Overall, recruiter never answered any of my emails, and each time we talk he was condescending and unfriendly. Overall it was frustrating and disheartening experience.

Die Fragen testen zum großen Teil ob man sich mit Algorithmen und Datenstrukturen auskennt und schafft sie auf neue Probleme anzuwenden. Auch wird getestet, wie man bei unklaren Fragestellungen reagiert.   Answer Question

Jul 27, 2015
---------------
Ich wurde von einem Recruiter von Google angeschrieben, nachdem ich von einem Freund, der sich auch bei Google beworben hat, vorgeschlagen worden bin, angeschrieben. Nach einem kurzen Telefongespräch hab ich dann ihnen meinen Lebenslauf zugeschickt und hatte kurze Zeit später mein Telefoninterview (45 min). Nachdem dies erfolgreich verlief wurde ich dann auf den Campus eingeladen für weitere Interviews (5x45 min). Eine Woche später erhielt ich dann deren Angebot. Insgesamt hat der ganze Prozess 6 Wochen gedauert, hätte aber auch schneller gehen können, da man selber entscheiden kann, wann man die Interviews haben will und ich mir beide Male je zwei Wochen Zeit gelassen habe.

Easy to Medium questions from leetcode (not those exact questions, but similar ones)   Answer Question

Oct 28, 2015
---------------
I was directly contacted by the hiring team. My recruiter kept in touch and heloped me during the whole process. After a first phone discussion, I got a first technical phone interview, then was summoned to Zurich's office for the onsite interviews.

We have a binary search tree with integers (both positive and negative ones). We want to return the value of the node(s) of the tree with the minimum distance from number x. Examples: - If x = 3 and there is a node with value 3, we return 3. - If x = 3 and there are nodes: 1, 2, 5, 6, 9, we return 2. - If x = 3 and there are nodes: 1, 2, 4, 6, 9, we return 2 and 4.   1 Answer

Jun 3, 2015
---------------
It was a 45 min phone interview. It was arranged after talking on the phone with an appointed recruiter. He explained me the process and asked me when I would like to set up the interview. I was for a waiting period of some weeks and after that we arranged the phone interview. The interview process contained a question which I had to program in a shared Google docs. The programming language I chose was Java.

No Question
Jun 3, 2015
---------------
It was a 45 min phone interview. It was arranged after talking on the phone with an appointed recruiter. He explained me the process and asked me when I would like to set up the interview. I was for a waiting period of some weeks and after that we arranged the phone interview. The interview process contained a question which I had to program in a shared Google docs. The programminns overall.   Answer Question

Jul 16, 2015
---------------
The process for setting up the time/date and preparation for the interview was smooth. The recruiter was quick on emails and polite. After a brief chat over the phone with the recruiter I had a phone interview with the technical guy (an employee). The technical guy had a heavy Australian accent on top of speaking to me over a loudspeaker. I am used to American accent and understanding his speech required extra efforts of mine in addition to not hearing him properly because of his loudspeaker. I'd have asked him to switch to a "normal" microphone mode but being already very stressed I didn't think about that during the interview. I applied for a fresh grad position and this interview was one of the first interviews I had in my life. The guy asked me to write down an algorithm for a problem. But before that he spent about 20 minutes of basically bragging about himself. I know that it's normal for an interviewer to introduce himself and his projects but his talk was more than that! He gave a basic description of the problem and the trick was to ask more questions in order to come up with the properly working algorithm. The guy didn't make any efforts for giving me clues or trying to lead me through the solution. He was just like "Huh, ok, then what" or "Huh, ok". I felt he was waiting for the interview to be over asap. I'd have solved that problem but I was very nervous in part for being interviewed by Google, in part for not understanding properly what he was saying, and in part for his arrogance. I immediately sensed his arrogance after he asked me this question: "Have you worked with large systems?" To which I replied "Yes, the number of nodes ranged from X to Y" (which was already the max number for computing in my domain), and then he, with sensible ridicule in his intonation, said something like "Huh, this is not a big number." Everyone knows that Google has way way bigger numbers in their systems, but that doesn't mean that the interviewer has a right to belittle the experience of the candidates, nor to expect from a fresh grad to have worked on the Google-scale-like systems. I can't disclose the technical question asked during the interview, because you already know why.

How big was the systems I worked with?   11 Answers

Jul 12, 2015
---------------
Apply online, interviewer are very nice. last 40mins. We talked through phone, he introduced me about Google and asked me if I had any questions regarding to the company.

Can you write code in Java or C++ to find the power set of a given set. For example if S={a,b} the power set is P={{},{a},{b},{a,b}} ( you can also choose any of your favorite programming language)   Answer Question

Aug 12, 2015
---------------
As the normal hiring process for new grads in China. One phone interview and four onsite interviews. And two questions for each one. The first and third interviewer is trying to help me finding the way to the best solution. And the second and forth interviewer talks little.

Optimize class string in stl. For example, a is a string, b is a string with value &amp;#034;hello&amp;#034;. When the programmer writes &amp;#034;a = b&amp;#034;, a becomes &amp;#034;hello&amp;#034; and b is still &amp;#034;hello&amp;#034;, but a does not allocated memory for efficiency. Then the programmer calls &amp;#034;b.uppercase&amp;#034;. b become &amp;#034;HELLO&amp;#034; while a is still &amp;#034;hello&amp;#034;. That is string behaves exactly like the one from stl but allocate new memory as late as possible.   Answer Question

Aug 10, 2015
---------------
referral, email questions, phone interview What was your largest coding/CS project (personal or academic) in C/C++, Java or Python in the last 6-12 months? How many lines did you personally code? Why are you interested in Google? What is your favorite Google product? What would you do to enhance that product?

abstract version: given array of doubles representing left start position of lines with width 0.01 meter like [-0.001, 0.001,0.01, -0.2] along x axis determine if the give lines cover [0.0 ,1.0] inclusive   Answer Question

Jul 26, 2015
---------------
2 back to back telephone calls from the software engineer of google, each one last for 45 mins, writing codes in google doc, they are focusing the core algorithms and data structures design and implementation

one DFS and one Hash Table   Answer Question

Jun 12, 2015
---------------
Contacted by recruiter after earlier narrowly failed interview. First stage was a short phone call with a few quick questions by the recruiter. This was followed by two 1-hour phone interviews with engineers; both of them consisted of one soft question and one programming problem. I wrote code in a Google Docs document that was shared between me and the interviewer. Before the interviews, the recruiter provided a wealth of preparation materials. The final stage was an onsite interview at a Google office. Google paid for travel and lodging, and was very flexible in scheduling the flight. There were four 1-hour interviews, each with a different programming problem and a few follow-up questions, with a lunch break in the middle. To write the code, I could use a whiteboard or a Chromebook that was provided. When I forgot a detail about a method of an STL container, I was allowed to pull up a reference page. There was a focus on doing things in an algorithmically efficient way; I was usually asked to estimate the complexity of my code, and come up with improvements if my initial solution was not optimal. Open source experience proved very useful, as I was able to provide in-depth answers to soft questions. After accepting the offer, there was a background check to verify my employment and education history, as well as my criminal record.

One of the phone interviews involved adding extremely large numbers represented as strings of decimals. I was required to first write a basic implementation, and then discuss how it might be parallelized.   Answer Question

Jul 13, 2015
---------------
I was referred by a current employee, HR then contacted me directly, scheduled a phone interview and then went to onsite interview day (5 interviews). The whole experience was great everyone was very friendly, they provided a training session on how to approach questions through a hangout. When I had a family bereavement they rescheduled the interview, and they were happy to accommodate my schedule even when it meant a long delay in between interviews.

Cannot Disclose Interview Questions.   Answer Question

May 21, 2015
---------------
Process took 1+ month from the initial talk with recruiter. Routine phone interview with a couple of interesting coding questions, nothing out of the ordinary. Asked to discuss runtime, improve the code, etc. Onsite interview was significantly harder, for some of the questions you might not even expected to write full code in the allotted 45 minutes.

Questions involving graph theory and DP   Answer Question

Feb 11, 2015
---------------
The process went on for about 50 days or so. After the initial call from the recruiter, i got around 15 days to prepare for the first round, aka the screening. This was conducted over a phone call and lasted for a little more than an hour. Basic questions, nothing too hard, the key was to demonstrate the thought behind the solution and find if multiple solutions exist and not just the end result. 4 days later, i got a call from the recruiter who informed me that i have been shortlisted for an onsite interview at the Google office. I got around 20 days this time around to prepare. Had 4 rounds of interviews at the office, mostly on data structures and their usage. The key thing again was to demonstrate your ability to arrive at a solution, rather than directly solve it. I do not think the questions were very difficult, but in some sense my nervousness got the better of me and even though i had solved a lot of similar questions during my preparation, i jumped to conclusions on the answer and delivered incomplete answers. Overall, my experience with the entire hiring process right from the time of tse. Somebody in SE, possibly experienced, who simply asked me to code a search algorithm on-the-fly. Made no sense to me as I am not in software engineering. There seems to be a strong disparity in terms of interviews, and background...I cannot believe that the questions are the same, and that it simply goes to coding, even if one does not intend to apply for software engineering.

Write down (a google doc is open) a search algorithm assuming a scenario where cars are passing and we want to check the licenses not necessarily following the order of the chars on the plate. (was not asked this clearly).   1 Answer

Apr 10, 2015
---------------
The process started by sending a resumé and a cover letter for a posted software engineer developer. After around two weeks, I got an email from a recruiter to setup a first interview on hangouts. This was more about information regarding the upcoming process of tests over the phone and the onsite ones. We decided on a time for the first phone coding test using a shared google doc to show the progress of solving two coding tasks.

The questions were really simple and easy. I would say, anyone one with a few months of coding experience would solve them.   1 Answer

Mar 16, 2015
---------------
I found a recruiter on linkedin, reached out, and was given one technical phone call interview, then flown out to their headquarters, and had four one person, 45 minute interviews.

Implement C's memcpy()   1 Answer Given a binary search tree where there may contain duplicates, but all other logic of the BST is intact, determine the most frequently occurring element.   1 Answer

Mar 9, 2015
---------------
I got a phone interview from google, for software engineer. Firstly we set up the date to have this phone interview. Then I had a 45 minutes phone interview with one of the googler. The question was not hard but not so straightforward. I need some help from my interviewer.

Read a line of data and encode method, determine the end element is belong to which type.   Answer Question

Apr 26, 2015
---------------
I had been an intern, so I just had to do one system design and one algorithms design interview. From everything I'd been told, I had the required experience. I was then rejected because I supposedly didn't have enough experience working with large codebases. This was despite the fact that I was told during my internship that I had done a good job of that aspect. I was never told I needed that experience before hand (infact, I was told the opposite!), so it was rather frustrating. It was also silly that they interviewed me at all, given that my CV already eliminated me. It also took a long time to get the rejection, and it was in the form of a lengthy phone call from a manager explaining all about how I need more experience working with large codebases. It was very odd. I was told I could reapply in a year or 2.

I had to do lots of calculations to estimate memory usage/ speeds for a large distributed system (can't give anymore details due to Google's interview questions being considered intellectual property that is confidential)   5 Answers

Feb 28, 2015
---------------
I was contacted by a recruiter for the software engineer position. We scheduled the first phone interview a week after that. I passed that one and I'm currently waiting on the second phone interview. If all goes well, the next phase would be and onsite interview at one of the Google centers in Europe.

Implement a moving average   Answer Question

Apr 3, 2015
---------------
It was fairly fast and transparent, I was given feedback in the end. Overall would recommend, the best interview experience I've ever had. Seems like the only company out there that respects prospective hires and their time. BUT was rejected because of only one interviewer that gave inadequate review, while others were very positive about hiring.

Given a set of meetings find the amount of time someone spends in a meeting that conflicts with others.   Answer Question

Aug 15, 2015
---------------
I have participated in the foobar contest, resulting in a message from a google HR manager. According to him, the foobar was just for the initial connection and did not affect the overall hiring process. The HR manager described the hiring process in details and sent me a set of educational resource for preparation to the interview(s). When I've studied the resources, which are mostly coding methods and explanations of behavioral questions, we settled the Hangouts interview time. The Hangouts interview was relatively easy, though I misunderstood the desired deliverable. It seems that the reviewer expected me to come up with a fast-written solution rather than a though-through verified solution. This was weird for me, though I admittedly never asked if the reviewer wanted the code fast-written or well-thought through. This resulted in a reject. Overall, the interview process was pleasant, no serious time delays were artificially imposed, the answer came quickly. Interestingly, the HR manager was speaking Russian, so we discussed everything in my native language.

Write a function in Java to multiply two large integers, given as Strings (no BigInteger).   1 Answer

Apr 29, 2015
---------------
Got referral from a friend, was contacted by a hiring manager who scheduled an on-site interview with one of the engineers. The interview itself lasted for about an hour, I was asked to solve two algorithmic problems. I've solved both of them but got a bit stuck in writing the actual code. After about a week the hiring manager told me that it was "a close call" but I didn't pass to the next round.

matching parenthesises problem, pretty famous one   Answer Question

Feb 9, 2015
---------------
I applied on the company website, got contacted several weeks later. Planned a phone call a month later. The first interviewer was not very friendly and started to ask questions directly. The second interviewer was nice, asked questions and did not say nothing when asked to repeat the question. I could talk with him at the end of the interview, like asking what he is doing in Google, and which products he is working.

Basic data structures questions   Answer Question

Mar 12, 2015
---------------
I applied through a referral from an employee. Recruiter contacted me after a few days. Phone interview was setup later on. The recruiter was friendly and helpful, but did take a bit of time to reply.

General Algorithmic Questions   Answer Question

Jan 30, 2015
---------------
Regular process as normal. There are three turns phone interview for me. The voice quality for the second one is quiet poor. I can barely hear what interviewer said. The third interview is quiet smooth and the interviewer is really nice.

Some technical questions and programming tasks.   Answer Question

Jan 26, 2015
---------------
2 phone interviews : first one was easy - normal data structure questions and bit manipulation problems count number of bits in +/- int values , implement a data Structure that support insertion - find min - find most frequently inserted second one was unfair and hard

implement URL hashing to convert long URLS to short Ones and retrieve the longOnes from the short !   Answer Question

Jan 31, 2015
---------------
Some recruiter contacted me, and then arrange a phone interview. There're 3 questions in the interview, and all of them are regular questions. The interviewer person is really nice, in the interview the phone is disconnected for unknown reason. Then he called me again, an enjoyable experience. I'm still in the process. This is just first round, I was told next might be on-site directly or another round phone interview.

Regular questions   Answer Question

Jan 21, 2015
---------------
Applied through an employee. Contacted by a recruiter by email, had to fill out a form about my skills and what area at Google I wanted to work in. After which I had to do 2 phone interviews on the same day, each 45 minutes long. They got back to me within a week.

Had to check if a Sudoku puzzle was valid and a computer graphics problem.   1 Answer

Jan 26, 2015
---------------
Two phonescreens before to onsite interviews. Each phone interview with a single algorithm problem, you must prepare with common algorightms with your prefered language. A Google doc is used to write code during interview.

Nothing hard, mostly basic computer science and algorightm questions   Answer Question

Jan 5, 2015
---------------
Applied through official website. Took a few weeks to get a response from the recruitment team which asked some general questions and university information, and then received an email to schedule interviews.

Given an iterator of Integers, create an iterator that will work correctly only iterating even integers. Ex given an iterator that iterates 1, 2, 3, 4, 5, the iterator should iterate 2, 4   1 Answer

Mar 15, 2015
---------------
It was a very nice process. Recruiters were very helpful and friendly. I did not apply for the position. They reached me through email. First step was a phone interview. The question was a bit easy. Now, I am going for an on-site interview.

What data structure would you use for a search engine?   1 Answer

Jan 8, 2015
---------------
I was contacted by a recruiter for the position. Google's internship application process typically works as follows: two back-to-back technical interviews, hiring committee (if you pass the technical interviews), and then host-matching. Technical Interviews: In the first interview, I was asked questions regarding my resume and background. Then, my interviewer gave me the opportunity to ask any questions I had. Once this was done, we proceeded onto the technical portion of the interview. In the second interview, we began with the coding question. I was then given conceptual questions related to the material in courses I had already taken. In the remaining time, I was allowed to ask the interviewer any questions I had. Both interviewers were courteous and friendly. Hiring Committee: Two and a half weeks after my interviews, I heard back from my recruiter saying I had passed. My application was then sent to the hiring committee. I had no control over what happened here. The committee reviewed my interviewers' feedback and my resume, among other documents, to determine whether or not I was a promising candidate. Fortunately, I was. Host-matching: After getting the OK from the hiring committee, my application was thrown into the host-matching pool with all the other candidates who had passed the committee. In about two weeks, my recruiter notified me that a host was interested in speaking with me. My conversation with my host was rather brief and non-technical. I was told some details regarding the project, which I found to be interesting. I accepted the offer.

No Question
Jan 15, 2015
---------------
I was told that the process would consist of 2-3 technical phone interviews, but I only had one phone interview that lasted 45 minutes scheduled. Was asked questions about string manipulation and data structures. Had to write code on Google documents for the string manipulation question.

No Question
Mar 15, 2015
---------------
It was a very nice process. Recruiters were very helpful and friendly. I did not apply for the position. They reached me through email. First step was a phone interview. The question was a bit easy. Now, I am going for an on-site interview.

What data structure would you use for a search engine?   1 Answer

Jan 8, 2015
---------------
I was contacted by a recruiter for the position. Google's internship application process typically works as follows: two back-to-back technical interviews, hiring committee (if you pass the technical interviews), and then host-matching. Technical Interviews: In the first interview, I was asked questions regarding my resume and background. Then, my interviewer gave me the opportunity to ask any questions I had. Once this was done, we proceeded onto the technical portion of the interview. In the second interview, we began with the coding question. I was then given conceptual questions related to the material in courses I had already taken. In the remaining time, I was allowed to ask the interviewer any questions I had. Both interviewers were courteous and friendly. Hiring Committee: Two and a half weeks after my interviews, I heard back from my recruiter saying I had passed. My application was then sent to the hiring committee. I had no control over what happened here. The committee reviewed my interviewers' feedback and my resume, among other documents, to determine whether or not I was a promising candidate. Fortunately, I was. Host-matching: After getting the OK from the hiring committee, my application was thrown into the host-matching pool with all the other candidates who had passed the committee. In about two weeks, my recruiter notified me that a host was interested in speaking with me. My conversation with my host was rather brief and non-technical. I was told some details regarding the project, which I found to be interesting. I accepted the offer.

First two questions were unexpected. I was nervous.   Answer Question

Jan 15, 2015
---------------
I was told that the process would consist of 2-3 technical phone interviews, but I only had one phone interview that lasted 45 minutes scheduled. Was asked questions about string manipulation and data structures. Had to write code on Google documents for the string manipulation question.

What do you prefer Algorithms or Coding?   Answer Question

Jan 21, 2015
---------------
I was referenced by a friend, right after that the recruiter contacted me, asked some general questions and assigned a phone interview date. On the phone interview I was given some really easy algorithmic questions. I had no trouble answering them. Later on the same day the recruiter contacted me again, said that I passed the phone interview and invited me for an on-sight interview to Zürich. Google provided me with flights and accommodation. On the on-sight I had five interviews and one "lunch with a developer", actually with my friend. First four interviews were general algorithmic ones and the last one was about system design. On the first and second interviews I didn't do well, I needed too many hints from the interviewers, but I managed to solve the problems anyway. The last three interviews went much better, I solved the problems correctly and fast without hints. Ten days after the on-sight I got the refusal. They told I have the potential, but have to practice more. I don't know why other people write here that Google is disorganized and unfriendly. I found it organized very well and extremely friendly. The interviewers were very nice, Google looks like a perfect workplace. As for questions: there are no questions like "implement heap" or "how does quicksort work". Instead they give you algorithmic or math problems (I had no math, but my friend had mostly math). You must know complexities, the big-O notation. Also the interviewers always ask "how would you test it" after you write the solution, so prepare to answer that. Read "Cracking the coding interview", it describes the process and questions just fine.

During the interview, the interviewer gave me a scenario of a board game. He asked me to implement a function to determin whether a given region on the board has been surrounded or not.   1 Answer

Jan 13, 2015
---------------
A Google recuirter contacted via linkedin, she called after that to discuss my CV. The phone interview was only about my CV and the recuiritement process at Google. We fixed a date for a technical interview... waiting.

Famous palentir waterfall question vsriation   Answer Question Sum3 problem   Answer Question Kd tree find all points within a range   Answer Question

Jan 13, 2015
---------------
I had the interview a month ago. The recruiter is very effective and immediately arrange a phone interview. During the interview, the interviewer gave me a scenario of a board game. He asked me to implement a function to determin whether a given region on the board has been surrounded or not. Typical BFS problem.

I was asked about if I should compress and then encrypt or encrypt and then compress. Had no idea what it was about.   1 Answer

May 11, 2015
---------------
Two phone interviews and four one on one interviews. The interview questions are not surprising but covers many topics in computer science. after interviewing with so many companies including Microsoft and Facebook etc. comparably the interviews at google are not pleasant nor comfortable. The interviewers are asked to write down whatever I write on the whiteboard. So most of the time they can't interact with me. Also two interviewers have communication problem. I mean, literally, communication problems in the eyes of software engineers. They couldn't talk and they just stared at the whiteboard listening. they then kept me waiting for a month for the result to come back. The HR told me two interviewers didn't fill in the results so no decision could e made. Really? You are soo busy that you couldn't fill in the results until 4 weeks late?

Test cases of the function I wrote   Answer Question

Jan 7, 2015
---------------
I interviewed for Google's summer internship and passed the interview, but didn't find a host in the host-matching process. I was contacted by their HR for new grad position. First had a 10 minute phone chat with the HR to talk about location preferences and that kind of stuff. Then had two back-to-back 45min interviews with the engineers. The interview process was pretty enjoyable.

Longest increasing path in 2d array   1 Answer

Dec 17, 2014
---------------
I got email from company about my phone coding interview .It was scheduled after 1-2 week .just one questions was asked about finding an intersection of two integer arrays and storing in third array. find the time complexity of the same

No Question
Jan 31, 2015
---------------
I applied on the webpage for a job in Mountain View, the recruiter contacted me the next day and set up a phone interview for a couple of weeks later. The interviewer in the phone interview was very nice and calm. He first asked me about my PhD, then there were a couple of questions about using hash tables versus BST as hash map implementations. This was followed by a warm up coding task (recursion over array of array to print all options) and the actual one (longest increasing path in 2d array). Compared to other interviews both were fairly straightforward. The problem was the time aspect, I never made it to code the second task.

No Question
Mar 4, 2015
---------------
Three 1-hour phone technical interview. One of interviewer was very kind and helpful. Fully technical interview regarding the position and skills. Feels stressful during the interview because you have to talk all the time as well as coding.

Design something   Answer Question

May 7, 2015
---------------
The interview process was good and enjoyable, except for one interviewer who for some reason couldn't articulate what he wanted me to do. It took about 15 minutes to actually understand what he wanted. And this was not because the question he asked was vague (which is what is to be expected) but because the question he asked was completely different to what he wanted me to do. Other than that I really enjoyed the experience.

Finding the next element in a sequence of number. What is the word static in C++ ?   Answer Question

Jan 24, 2015
---------------
A recruiter contacted me by mail saying that my profile would suit with some software engineering positions at the GooglePlex. He then set up a phone interview with me to discuss about my academic projects, and asked me one simple technical question about QuickSort (What's the best and worst case in Quicksort ?). But the interview wasn't really technical since he was from HR (and a very cool guy). Afterwards, he set me up for a 45 minutes phone interview with a Google software engineer: The interviewer was not nice. He introduced himself and directly started with tech questions without even trying making conversation. So I wasn't very confident while answering.

One about inorder and postorder from the leetcode.   Answer Question

Jan 23, 2015
---------------
There was two technical phone interview for 45 minutes. Recruiters helped a lot during the interview process, It's important to hear their tips. Questions were similar to the cracking interview book and leetcode. Second interview seems to be more difficult, so be ready to that. Think carefully before the interview about your most significant project, at the beginning of the interview they will ask about it.

Unfortunately I cannot say, I signed an NDA. The first interview was easier than the second one though   Answer Question

Dec 28, 2014
---------------
I applied online and heard back about a month later for interviews! Definitely wasn't expecting one, as I don't really have much experience but I suppose going to a top CS school helps. 2 x 45minute phone interviews. They are supposed to be back to back but there was a glitch in my first interview that caused us to reschedule. The time it took from my second interview to receiving an offer was less than 2 weeks. My recruiter was incredibly kind!

How long have you spent coding everyday?   1 Answer

Dec 27, 2014
---------------
1st round interview, phone interview, very basic, he asked me do you know algorithm, and how long you spend coding each day, what else, it is just to make sure that you are a real person and nothing else, I am waiting for the second interview next month.

Analyze time constraint without O notation   1 Answer

Dec 24, 2014
---------------
Applied via their website, and a recruiter sent me an email for a phone interview schedule after 1 week. The interview question was a simple, straightforward implementation problem, but I made a few critical mistakes on it.

There was a question on binary trees that I could not figure out.   Answer Question

Dec 22, 2014
---------------
I applied through their online form and was given three 45-minute phone interviews in a row. We talked on the phone while coding on Google Docs. I had three separate interviewers, and each interviewer asked about 5 minutes of personal and resume questions before we got started, and they gave time at the end for me to ask questions.

An unexpected operation on a nominated data structure — the particulars would be different for each candidate.   Answer Question

Dec 11, 2014
---------------
They approached me via linkedin. Initial phone interview to prove I am a human and prepared to relocate. Several days later, a remote online coding interview via a shared google doc page and Skype. A week later, a full-day onsite, 4 hour-long sessions plus lunch. A week later, the notification of offer

There were no unexpected questions, all the questions were simple algorithmic questions similar to problems which you can meet in highschool.   Answer Question

Dec 19, 2014
---------------
At the beginning you are in touch with google via email and you arrange an appointment to hold 2 interviews. Each of them is 45 minutes, it looks like casual conversation with some algorithmic questions included. It's very comfortable and I would recommend everyone (with some programming skills) to try it.

No Question
Dec 22, 2014
---------------
I applied through their online form and was given three 45-minute phone interviews in a row. We talked on the phone while coding on Google Docs. I had three separate interviewers, and each interviewer asked about 5 minutes of personal and resume questions before we got started, and they gave time at the end for me to ask questions.

There was a question on binary trees that I could not figure out.   Answer Question

Dec 11, 2014
---------------
They approached me via linkedin. Initial phone interview to prove I am a human and prepared to relocate. Several days later, a remote online coding interview via a shared google doc page and Skype. A week later, a full-day onsite, 4 hour-long sessions plus lunch. A week later, the notification of offer

An unexpected operation on a nominated data structure — the particulars would be different for each candidate.   Answer Question

Dec 19, 2014
---------------
At the beginning you are in touch with google via email and you arrange an appointment to hold 2 interviews. Each of them is 45 minutes, it looks like casual conversation with some algorithmic questions included. It's very comfortable and I would recommend everyone (with some programming skills) to try it.

There were no unexpected questions, all the questions were simple algorithmic questions similar to problems which you can meet in highschool.   Answer Question

Jan 29, 2015
---------------
Contacted by a recruiter after a former co-worker from another company that is now in Google recommended me. First screening interview was on site since I live close to Google's offices in Tel-Aviv. Small algorithm/data-structure question with coding in C++ and a bit of STL. The interviewer was not very nice, snobish and condescending, yet I passed without any issues and was invited to a full on-site interviews day at a later date. The on-site interviews included 3 interviews focusing on algorithm/data-structures including a bit of coding. Nothing very difficult, but requiring good knowledge of topics like trees/lists traversal, dynamic programming, binary search, etc. One interview was on C++ knowledge, basic stuff like virtual functions, multiple inheritance, etc. with a small algorithm and coding question. Last interview was a design interview - design an image sharing system in which users can upload images, then get a short URL unique for their image and use it in forum messages, social networks posts, emails, etc. I was told by the recruiter that the feedback was mixed but with enough support for passing to the hiring committee. Then I was rejected and told by recruiter that the design interview is the cause. I find this decision very wrong, considering what I accomplished in my career and am sure 100% that any former colleague of mine would testify very positively on my design skills, but think back on the design interview I'm not surprised: The interviewer gave me a pen and papers so I could draw and write my design, but as soon as he finished asking the question he picked a pen and paper and started solving it himself, he seemed to be in a hurry to reach exactly the solution that he expects. He was not nice, arrogant and unpleasant to talk to and have an open discussion. In total 3 of the 6 interviewers were not people I would like to work with, while the other 3 were very nice and were fun to talk to and think together. I wasn't asked even once on my work experience or any of my past projects, no single "behavior" question like "describe a scenario in which you had a conflict", etc. and wasn't asked why I would like to join Google or what I'm looking for in a work place. It seems the entire process revolves around solving technical questions and nothing beyond that, so it's not surprising to me that 3 of 6 interviewers (in my opinion of course) had such bad people skills. I constantly had the feeling that the interviewers (all of them) prefer meek and inexperienced candidates, that can be shaped and trained to think exactly like them and would not show independent or out-of-the-box thinking. *** It actually felt to me like my experience and knowledge is an obstacle or a disadvantage instead of an asset that the company would and should appreciate !!! *** Other than that - I enjoyed solving the questions, food was great (and the engineer that escorted me was very nice and friendly, we had interesting discussions), the offices look and feel great. The recruiter was super friendly, always kept me informed and did his best to speed up the process, I have only good words to say about him. I later passed successfully interviews in other companies (including Google's competitors), some of which were more difficult, and received excellent offers from great work places, and I definitely think the process in Google leads to bad decisions. I was offered by the recruiter to try again in 12 months, but I have no such intention, nor would I recommend it to talented people that I know.

I wouldn't describe any question as "difficult", but they definitely require you to be practiced on data structures and basic algorithms. The design question requires different skills - breaking down a very "open" question, clearly defining components in a system, interfaces between them, flow, etc.   Answer Question

Nov 29, 2014
---------------
I got a very challenging computational geometry problem in my interview. The second interview was easier. I managed to solve both problems and ended up getting an offer from Google New York city.

Given a bunch of points and a convex polygon in R^2. Determine if each point is inside the polygon.   1 Answer

Dec 5, 2014
---------------
Got referred by an employee, heard from a recruiter after only a few days. First a phone call to get the recruiter to know you and you to know the hiring process. Then 1-3 phone interviews depending on how well you do. If you make it, you will be invited to on-site interviews, which are typically 4-5 interviews on one day with different interviewers which are Google software engineers with more than 3 years of experience. You will have lunch with another Google software engineer, too, which will give you the opportunity to ask all kinds of questions. The interviewers usually do not ask much about you or your past work experience, 90% of the interview time gets spend with coding and logical thinking questions. Most coding tasks are in principle pretty simple but I gets hard to do them under the time pressure. The interviewers are told not give much feedback and some of them follow this rule to an uncomfortable extent. You will definitely need to code something within the interviews, but you can find about 75% of the coding challenges by clicking through the first ten pages of Google interview reports. Hints: - Think out loud. - Try to find out how much feedback the interviewer is willing to give by asking clarifying questions. - Prepare by doing some coding beforehand. - Start with a simple solution but mention that there might be better ones and think about them later.

Signed NDA. Lots of standard algorithmic questions including the usage of different data structures.   Answer Question

Nov 19, 2014
---------------
I interviewed in China. The interview was really pleasant. The questions were not too hard. But I have to say, the office in Beijing is really small, sometimes even without windows, giving out most of the pressure to interviewees. To be fair, the questions were not hard. All of them were basic ones. Just have be prepared to write some code. It was not hard at all.

They would pressure you to make sure that all corner cases were considered. And furthermore, they even picked about uppercase keywords and stuff...   Answer Question

Feb 9, 2015
---------------
3 back to back 50 min phone interviews, followed by a host matching process (you are put in a pool of candidates and may or may not be matched to a team based on your interests and skills).

In particular I was given one mathematical puzzle to solve   Answer Question

Apr 10, 2015
---------------
The web tells the truth about the process, it's phone interview (coding) + 5x 45min on site coding interviews. As for on site interviews 4 of them were mostly about coding and 1 was more about design. Be prepared to code on a whiteboard in a real language (not pseudo code).

If you have a binary tree, write a method to get the deepest node in the tree? write another method to get the shallowest node in the tree?   Answer Question If you have a very large 2D integer array, say 1 million x 1 million, however this array is static I.E. doesn't change frequently, write a method get the sum of integers between two given indicies   1 Answer

Aug 9, 2015
---------------
Applied online, got an email three weeks later to schedule two phone interviews, and I scheduled two phone interview with thirty minutes in between. On the day of the interview the first interviewer didn't call and the second one called, I told the coordinator so she scheduled another interview one week later to make up for the missed interview. During the interview the system on laptop crashed and I had to restart it, the interviewer was understanding and he gave me 5 minutes to restart it and then callion over array of array to print all options) and the actual one (longest increasing path in 2d array). Compared to other interviews both were fairly straightforward. The problem was the time aspect, I never made it to code the second task.

Longest increasing path in 2d array   1 Answer

Sep 23, 2015
---------------
Onsite interview: arrive the day before and stay one night in an excellent hotel. There were 5 consecutive 45-minute interviews with lunch after the 3rd. 1 of 5 is about system design. All interviews are 1:1. There is no soft / HR interview; I did meet the recruiter but only very briefly. 3/5 quite OK. 1 so-so with a mistake. 1 pretty bad. For that one, the interviewer didn't state constraints / how fast it should be. This is different from competitive programming where sometimes large constraints can help you think about what solution is required. Only 1 out of 5 interviewers asked a soft question like "what would you like to work on" After 2 weeks I heard back from the recruiter stating that they have new information. Then, the verdict was communicated by phone. From the soft feedback they gave it became clear that they had read through the individual reports of the interviewers, but they don't tell you that you are too stupid. They said you need >= 4 out of 5 "good" results in the interviews and that I got less. Got the cynical advice "practice problem solving a bit more", nice if you are red in TopCoder.

Get the mode of a given BST with repeated keys.   Answer Question

Jan 1, 2015
---------------
Applied online on careers website, got no answer even after 1 month. Applied to recruiter's inbox, got an interview date the next day, I was asked to make 3 consecutive ones. I delayed them with no problems because of my exams. The recruiter was really nice and understanding. Got to host matching, and now waiting for a match project. They notified me after 1 week of the interviews.

programming questions focused on basic data structures and string operations.   1 Answer

Feb 17, 2015
---------------
applied through employee reference before christmas, got scheduled three phone interviews after the holidays. got feedback from the recruiter around one week after the technical interviews, filled in the team match questionnaire. waited about 3 weeks before getting an interview with a host.

No Question
Jan 1, 2015
---------------
Applied online on careers website, got no answer even after 1 month. Applied to recruiter's inbox, got an interview date the next day, I was asked to make 3 consecutive ones. I delayed them with no problems because of my exams. The recruiter was really nice and understanding. Got to host matching, and now waiting for a match project. They notified me after 1 week of the interviews.

Get the mode of a given BST with repeated keys.   Answer Question

Feb 17, 2015
---------------
applied through employee reference before christmas, got scheduled three phone interviews after the holidays. got feedback from the recruiter around one week after the technical interviews, filled in the team match questionnaire. waited about 3 weeks before getting an interview with a host.

programming questions focused on basic data structures and string operations.   1 Answer

Mar 4, 2015
---------------
Three 1-hour phone technical interview. One of interviewer was very kind and helpful. Fully technical interview regarding the position and skills. Feels stressful during the interview because you have to talk all the time as well as coding.

Design something   Answer Question

May 7, 2015
---------------
The interview process was good and enjoyable, except for one interviewer who for some reason couldn't articulate what he wanted me to do. It took about 15 minutes to actually understand what he wanted. And this was not because the question he asked was vague (which is what is to be expected) but because the question he asked was completely different to what he wanted me to do. Other than that I really enjoyed the experience.

Finding the next element in a sequence of number. What is the word static in C++ ?   Answer Question

Jan 24, 2015
---------------
A recruiter contacted me by mail saying that my profile would suit with some software engineering positions at the GooglePlex. He then set up a phone interview with me to discuss about my academic projects, and asked me one simple technical question about QuickSort (What's the best and worst case in Quicksort ?). But the interview wasn't really technical since he was from HR (and a very cool guy). Afterwards, he set me up for a 45 minutes phone interview with a Google software engineer: The interviewer was not nice. He introduced himself and directly started with tech questions without even trying making conversation. So I wasn't very confident while answering.

One about inorder and postorder from the leetcode.   Answer Question

Jan 23, 2015
---------------
There was two technical phone interview for 45 minutes. Recruiters helped a lot during the interview process, It's important to hear their tips. Questions were similar to the cracking interview book and leetcode. Second interview seems to be more difficult, so be ready to that. Think carefully before the interview about your most significant project, at the beginning of the interview they will ask about it.

Unfortunately I cannot say, I signed an NDA. The first interview was easier than the second one though   Answer Question

Dec 28, 2014
---------------
I applied online and heard back about a month later for interviews! Definitely wasn't expecting one, as I don't really have much experience but I suppose going to a top CS school helps. 2 x 45minute phone interviews. They are supposed to be back to back but there was a glitch in my first interview that caused us to reschedule. The time it took from my second interview to receiving an offer was less than 2 weeks. My recruiter was incredibly kind!

How long have you spent coding everyday?   1 Answer

Dec 27, 2014
---------------
1st round interview, phone interview, very basic, he asked me do you know algorithm, and how long you spend coding each day, what else, it is just to make sure that you are a real person and nothing else, I am waiting for the second interview next month.

Analyze time constraint without O notation   1 Answer

Dec 24, 2014
---------------
Applied via their website, and a recruiter sent me an email for a phone interview schedule after 1 week. The interview question was a simple, straightforward implementation problem, but I made a few critical mistakes on it.

There was a question on binary trees that I could not figure out.   Answer Question

Dec 22, 2014
---------------
I applied through their online form and was given three 45-minute phone interviews in a row. We talked on the phone while coding on Google Docs. I had three separate interviewers, and each interviewer asked about 5 minutes of personal and resume questions before we got started, and they gave time at the end for me to ask questions.

No Question
Dec 11, 2014
---------------
They approached me via linkedin. Initial phone interview to prove I am a human and prepared to relocate. Several days later, a remote online coding interview via a shared google doc page and Skype. A week later, a full-day onsite, 4 hour-long sessions plus lunch. A week later, the notification of offer

An unexpected operation on a nominated data structure — the particulars would be different for each candidate.   Answer Question

Dec 19, 2014
---------------
At the beginning you are in touch with google via email and you arrange an appointment to hold 2 interviews. Each of them is 45 minutes, it looks like casual conversation with some algorithmic questions included. It's very comfortable and I would recommend everyone (with some programming skills) to try it.

There were no unexpected questions, all the questions were simple algorithmic questions similar to problems which you can meet in highschool.   Answer Question

Jan 29, 2015
---------------
Contacted by a recruiter after a former co-worker from another company that is now in Google recommended me. First screening interview was on site sinchone screen for an internship, that didn't result in an offer, I was contacted by a Google recruiter for a full-time software engineering position to begin after completion of my PhD. She arranged to fly me out directly to Mountain View, without having to go again through the phone screens. The trip was organized quickly, and I had 4 technical interviews + 1 thesis discussion interview in one day.

Chess moves, something lie "What's the minimum number of chess moves a particular piece has to make to reach a given position"... Not extremely difficult per-se, but threw me off since it was less of a programming question, and would have been easier if I had known how to play chess in the first place.   Answer Question

Oct 21, 2014
---------------
The hiring process was very smooth, the interviewers were very nice, unfortunately i didn't make the cut. It was my first set of technical interviews. I was told to think out loud which i did, i think the main reason i may not have made the cut is i was both nervous and i expected them to ask me to make the hashtables etc not use the java provided ones.

There weren't any difficult questions, but i didnt expect them to ask me to use the java standard library, i expected them to ask me to define my own.   Answer Question

Oct 8, 2014
---------------
Applied through their website. They contacted me the next day. Had a talk with HR and got scheduled a technical interview. They gave me a document with information on what to prepare. It's basically everything a computer scientist should know. From data structures and algorithms, to OS stuff, OOP. The question caught me off guard since most of the question I had seen had a hidden algorithm in them or something like that. This one was quite vague.

I can't say what the question was but it was a very interesting, abstract question. Starting from a very simple idea and going deeper. I did pretty bad, my fault.   1 Answer

Dec 23, 2014
---------------
The process took around 9 weeks. I applied online in mid October and got an interview call within a week. Due to other offers I asked them to expedite my interview schedule and they did so. I interviewed with them end of October and by the 1st week of November they confirmed I had gotten through to Host matching. Here's unfortunately where things slowed WAYYY down. After sending in my host preferences I had to push other offer deadlines multiple times as Hosts were slow to respond. I finally got matched with a host around the first week of December. One week later I was told that the hosts had decided to go with another candidate. It wasn't until the 3rd week of december when the recruiter told me that one of my previous hosts changed his position and would like to offer me the job.

Can't speak on specifics due to the NDA. But questions revolved around problem solving, algorithms, data structures etc. Some logic/Math like coding problems.   Answer Question

Dec 23, 2014
---------------
The process started with a phone call from the recruiter that suggested to do a screening interview onsite. After a 1:1 screening interview onsite, there were 4 onsite technical and analytical interviews the same day. I passed all the interviews and then started talking with managers to choose a project. Something went wrong during these interviews, the positions were irrelevant to what I was looking for. The recruiter tried with a different location, find one option, and after talking with a manager, I was supposed to receive an offer. Unfortunately, the offer didn't arrive and they decided to finish the hiring process. The process took 3+ months from setting the screening to finishing the process.

Transform a tree into a circular double linked list. Check if a string is UTF-8 valid. Design a system to be capable of supporting Google Suggest and similar stuff. A question related to TSP.   Answer Question

Nov 6, 2014
---------------
I applied google without reference from other. I'm a student and complete the online judge which is hold on the code jam platform. I rank in the top 100 in the online judge. Then, I get the opportunity of phone interview. In the phone interview, a people ask me some questions about my resume only 5 minutes and then give me a question. I solved this question and 15 minutes left. However, he didn't ask me another question and just ask me to ask him question. Finally, I fail this phone interview.

A array : 1 3 0 2 4 9 input: dest-node: A0 output: all the source nodes: (A1, A3, A4) Each element in this array means the steps it can take. Each element can go left or right. So A[1] and A[4] can reach A[0]. A[1] can reach A[4], A[4] can reach A[0], so A[1] can reach A[0]. Output the index of element which can reach A[0].   3 Answers

Apr 3, 2015
---------------
Two 45 minutes online interviews separated by a 15 minutes break - with 1-2 questions each (question itself might have more sub-questions). Both the interviews have separate interviewers, and we spend the first 10-15 minutes introducing ourselves and they usually ask you about a recent project. The other 30-35 minutes you have to figure out the answer to the question(s) they ask.

What is the coolest thing you have worked on uptil now.   Answer Question

Jan 19, 2015
---------------
I was contacted by a recruiter via LinkedIn. We scheduled a phone interview 2 weeks later. The Indian engineer who interviewed me was kind. He started by asking me a recent project that I found particularly interesting. Then we moved to the actual interview and the questions where difficult for me.

Given a set of rules of the form "if A=a, then B must be in {b1, b2, .. bn}, C in {c1, c2, .. cn}, D in..." and an input A=a, B=b, C=c.... define a data structure to store this rules and a validator to tell whether the input is valid or not. Second question: now find an algorithm that, when the input is not valid according to the rules, changing one single input make the all sequence valid (if possible)   Answer Question

Dec 22, 2014
---------------
Contacted by an excellent Google recruiter. Took some time to prepare for telephone interviews and, despite getting a bit flustered (I hate telephone interviews), I got enough leeway from the first to get a second. This led to a face to face interview, which I delayed until after a planned vacation. The F2F was an excellent day on site, if somewhat intense. It was very difficult to judge if you were going down the lines the interviewers wanted you to. Much of the advice online is to start working through solutions to the problems they set, starting with a simple idea and improving it as you go. However with a little hindsight I can see that this actually trapped me into a significantly poorer design during the architectural interview than I thought up on the train home! Despite not getting an offer, the recruiter had excellent feedback for me and explained that the hiring board had considered offering me other roles that would have played to my non-technical strengths.

I would not like to share specific information about the questions since I signed a NDA.   Answer Question

Sep 29, 2014
---------------
The recruiting process was very smooth. Studying the "Cracking the Coding Interview" book is recommended by my recruiter. Two phone interviews are followed each last 45 minutes. I did terribly in the first interview since it was my first ever interview and I was not prepared enough. In the second interview I did pretty well and even shared some points about binaries in Java that my interviewer didn't know.

Using bits instead of boolean array.   Answer Question

Oct 4, 2014
---------------
Contacted through recruiter. First phone "interview" was with him, we mostly talked about my background and he asked some basic questions such as quicksort, mergesort, etc. The second one was with their engineer and was mostly technical. Now I'm waiting for their response.

How would you design Google Images?   1 Answer

Aug 26, 2014
---------------
I contacted Google through their website and applied for a software engineer in the Tel Aviv Office. There was an initial phone call with an HR recruiter (I think a day after I submitted my online application) - Just general questions about who I am and what I am looking for. After around 1 week I came to the on-site screening interview - 45 minutes of relatively simple graph questions - DFS/BFS stuff, and maybe a bit more complex questions regarding binary trees, but nothing too special. The interviewer told me I did well, but that I should be a bit more careful about the aesthetics of the code. 2 weeks later I came to my whole day interview session - There were 6 interviews - I would say 3 which were more algorithmic, 1 which was almost pure coding, and 2 which were "design". The design interviews I remember - 1) Design an online battlefield game - What would be the protocols between the server and the client, the algorithms and game flow to decide the state of the game, some basic networking (which I struggled with). 2) How would you design Google images? The premise was that I should be able to search regarding specific features, for example the blue content, or images that are in pages that contain specific keywords. This was a very open-ended question, we thought "together" about solutions, what will be the size of my data which maps words to images, where would I store the images, how many servers I would need, etc... I had no previous experience in large scale design - The interviewer said that it wasn't expected of me. I thought I did relatively well, but I guess they ARE looking for people with previous experience in large scale design, from the input I got later on. Algorithmic interviews I remember - 1) How would you design an efficient algorithm to find out in a sorted array which number appears the most times. I started from the simple solution, and continued to a more complex one ( with some hints along the way from the interviewer) that in summary does a binary search of the number of times the most frequent number appear - (think about it - I have an array of size N, if the most frequent number appears N/2 times, then I can infer this just from sampling the values at indexes (0,N/4,N/2,N*3/4,N). I thought I did well in that interview. 2) Write code that prints the Cartesian product (row by row for each combination) of a given list of lists (that contain integers). Since you don't know from beforehand how many lists there are, you obviously can't just hard-code lots of for loops. During the interview I gave two solutions - A recursive one, and after writing it out, they asked me to also write a non-recursive one - Which I did with a counter which maps each times to a different combination of values (with some mod mathematics). I think I also did well in that interview. There was a lunch break where it was obvious they simply told someone that today "you have to eat lunch with a candidate". It was a bit awkward at first, but it did give me a chance to interrogate him about how it is to work in Google. The food was extra yummy. After one week I got a response that I didn't pass the interview process. The guy stressed that I was "Close", that I did really good on 2 interviews and a bit less good on the other 4. Oh well. My preparation to the interview consisted of doing all the regular algorithmic/coding questions - I think that did prepare me well to the relevant interviews. But there was no real preparation to the more general "System Design" interviews - I think it's a bit more difficult to prepare for those, but I guess I still would have invested in that more time, retrospectively. Otherwise - I thought I did pretty well in the interview day - I guess that they can be REALLY picky about taking people who really did perfect in each and every interview. Just for reference I had an interview day at Facebook a few days later - I thought I did much better at the Google interview day, but ended getting an offer from Facebook and not Google. I guess also some luck doesn't hurt. The responsive of the hiring recruiter was always prompt. He was very nice, though at times it was a bit ridiculous - telling me again and again to call him If I have any problems, even if it's during the weekend or late at night. I mean it was nice to have a sponsor that "cares for me" during the process, but there's no need to push it...

Why do you want to work here   Answer Question

Sep 10, 2014
---------------
the process was quick, and the people were very friendly. They would ask general questions to see if you are a fit in their group. Be geniune and express why you want to work for the company and what you can add to the firm.

Give an approximation of 2 power 26   1 Answer

Sep 14, 2014
---------------
I had two back to back interviews. 1 hour each. First interview started with description of a recent bug that I solved. Then followed by two algorithm questions. Not hard. Second interview has one question related to data structure implementation.

implement an LRU Cache   1 Answer

Sep 4, 2014
---------------
It was phone first interview. They want see if you are smart. You can use paper to write down and think. .don't know what else. Nothing to add to already written

No Question
Oct 22, 2014
---------------
I got a friend to do the referal, and got the on-site interviews two weeks later. The interviewers are professional and the questions are interesting. Two interviewers are from Beijing ,two from USA. They were really nice and I got my feedback a week later. I was sent to Hiring commitee, but got refused by them. The first interviewer ask about my background, but the others didn't. Third person gave a design problem for me.

No Question
Sep 14, 2014
---------------
I had two back to back interviews. 1 hour each. First interview started with description of a recent bug that I solved. Then followed by two algorithm questions. Not hard. Second interview has one question related to data structure implementation.

Give an approximation of 2 power 26   1 Answer

Sep 4, 2014
---------------
It was phone first interview. They want see if you are smart. You can use paper to write down and think. .don't know what else. Nothing to add to already written

implement an LRU Cache   1 Answer

Oct 22, 2014
---------------
I got a friend to do the referal, and got the on-site interviews two weeks later. The interviewers are professional and the questions are interesting. Two interviewers are from Beijing ,two from USA. They were really nice and I got my feedback a week later. I was sent to Hiring commitee, but got refused by them. The first interviewer ask about my background, but the others didn't. Third person gave a design problem for me.

A question about graph theory and another question related to hexadecimal numbers.   Answer Question

Sep 3, 2014
---------------
I had 2 interviews back to back 45 minutes each. The interviewer starts with introducing himself, asks you a couple of questions and the rest of the interview technical questions.

Design a large-scale system, most problems required search for a solution recursively. One of them was to be solved with dikjstra   Answer Question

Oct 15, 2014
---------------
Had two back-to-back white board interviews, wrote down code and they took pictures after. One interviewer was really nice and patient, the other one was a bit unpleasant. The questions were average difficulty but it really depends on your interviewer.

Algorithm analysis of moving average   Answer Question

Jan 22, 2015
---------------
Submitted application online. I was contacted by a recruiter. I had a phone-screen interview and then invited for an on-site interview. It was a nice experience overall. It can be an exhausting experience, but exciting and interesting! I was asked questions that required searching a solution recursively. One of them was related to palindromes. One was reading code (.h files) and telling what it did and how to use it. They covered all expenses and the hotel they choose was the nicest hotel I've ever been (by far). Most of the people was nice and helpful. One of the interviewers was sick and eating bread during the interview, making noises and was kind of distracting.

Finding all combinations of well-formed brackets   1 Answer

Aug 25, 2015
---------------
It seemed more like an oral exam in 3rd year than an actual interview for a full-time job. Too much pressure and focus on one single aspect (coding) and didn't address the different other aspects, behavioral or technical. It's really like an exam sheet in undergrad and I'm surprised Google are only asking about that.

There were two system design questions. Was asked to implement DFS with a twist.   Answer Question

Oct 15, 2015
---------------
A recruiter contacted me via email if I would be interested to apply for a job as a software engineer. I had a telephone chat with her, she explained the whole process to me: one telephone interview and if I pass then a few on-site interviews in London. I arranged the interview for three weeks later so I have enough time to prepare. The interviewer called and went straight to my task. The audio quality was pretty poor. I really struggled with the task, it is hard to code in an editor. After about one hour it was over. 7 days later the recruiter called to tell me that they won't proceed and that recruiters don't get information why, but I should try again in a few years.

No Question
Aug 26, 2014
---------------
Was contacted by recruiter who set up two phone interviews within a week. After the interviews I received a mail with a few days saying they wanted me to come onsite. This was also swiftly organized and I visited the offices two weeks later. Between the phone interviews and the onsite I was also given the opportunity to follow an online tutorial about interviewing at google.

No Question
Aug 13, 2014
---------------
Applied online, was contacted shortly after by a recruiter. Had to technical interviews. Each was 45 min long phone call with a shared google doc. The questions were not hard. Usual programming questions dealing with arrays, strings, hashes, etc. I had a hard time understanding the problem the first interviewer gave me - and I was nervous - so I didn't do so well on that one. The second one went much better even though the difficulty of the two interviews was about the same.

No Question
Feb 25, 2015
---------------
CV passed to Google by a friend. Asked to take 2 phone screens, general ones to check if I was of interest to Google rather than for a particular team. Fairly negative opinion: audio quality plus difficult accents made it a very unpleasant environment and kept having to repeat myself to be heard. Recruiters were generally friendly,

Questions amounted to using iteratiors to solve relatively simple algorithmics problems (sorts, mostly).   Answer Question

Sep 20, 2014
---------------
First of all is Phone Interview, and then 4 Onsite Interviews (Not very difficult but interesting). Next is Hiring Committee Review (it is the most important), and finally Offer Review

What is the difference between Java and Python?   1 Answer

Aug 20, 2015
---------------
Its a full-day new grad onsite interview, four interviews were arranged two in morning and two in afternoon. Stuff accompanied you with free lunch in Google. All were so good and comfortable.

Data structure, C++ key words, a little system design   1 Answer

Jul 16, 2014
---------------
For now I'm waiting for the result of the phone interview. ＊The hiring process in Google Taipei ( in my experience) 1. hand in the resume to the job opening in Google's website 2. HR will contact you (if your resume is attractive enough), but it may take very long time 3. phone interview (45min, about 2 technical questions) if you pass the phone interview↓↓↓ 4. five on-site interviews in a day ( I haven't got it yet) ＊preparation 1. book to read: "Programming Pearl", "Cracking the Coding Interview" 2. website: leetcode, career cup 3. review basic data structures and algorithms ＊detail (The process from applying to having the opportunity of phone interview) 1. The first call : I applied online when I saw the position opening of software engineer in Taipei on Mar 2014. After about 1 month, I received a call from a Google recruiter. He asked me about mt preference of working location since there are some other openings in Hong Kong and China. I told him I preferred working in Taiwan and then he told me he would transfer my resume to Google Taipei but I need to wait since they were very busy. 2. The email from Google Taipei : On May 21, when I was about to give up, I got an email from Google HR and then we discussed the time that she could call me through email. On May 27, she called me and asked some questions about my resume, including my experience, why did I want to work for Google, was there any other competing offer, and lastly did I have any question. Also she explained the whole hiring process to me. It was easy and relaxed. The HR was very nice and no difficult questions once your resume only includes the fact. At the end, I asked her if I could postpone the phone interview until I finished my master oral defense which is around the end of June. She said it was totally fine and she would contact me in another two weeks. 3.An email about how to prepare the interview : Right after we ended the conversation, I got an email from the HR. The email includes a lot of information, such as how to prepare for Google technical interview, which books are recommended to read, some preparation tips, videos. I borrowed the book "Programming Pearl" and "Cracking the Coding Interview" to read. Also I constantly practiced coding on the website "leetcode". I kept practicing and had waited for a long time. On July 7, I sent her an email to make sure that I still had the chance to interview. And then she arranged a phone interview on July 16. 4.The phone interview : (in Chinese mandarin) Refer to the "Most Difficult or Unexpected Question" part

4.The phone interview : (in Chinese mandarin) The interviewer called and first started with my past works and asked me to introduce my projects that is special. I talked about around 2 projects and he would ask some questions according to what I said. I think he cares does the project relate to internet or cloud application, but unfortunately I did not involve too much. After that he asked me two technical questions. I'm not allowed to expose the detail about the technical questions as the HR mentioned in the email. The first question is to write a code on a Google Doc that we shared. It was not too difficult. I think everyone can do it well as long as he(she) has practiced to write codes and review basic algorithms and data structures. Though I was too nervous and made some mistake and said a lot of nonsense. After I finished most part, he asked me could I further optimize it. I didn't figure out any but just during the time I guessed around he pointed out the way he thought. The second question was an open question. I told him my approach and he asked for more detail. And he pointed out the disadvantage about my approach. And after that he asked is there any other approach in my mind. I tried hard to think about another and he also discussed with me the trade off of. During the whole process, the interviewer was silent and made me thought that the phone was disconnect(my cell phone does that many times). I think maybe he was waiting for me to say more, discuss more or some better answers. Too bad I was really nervous and couldn't think too much.   Answer Question

Jul 10, 2014
---------------
The recruiter told me the complete interview process I may go through. He also asked me of my location preference globally, sent me the interview tips which cover a lot of basic knowledge/question for google software engineer interview, such as algorithm and data structure.

I had to solve two problems: - sort items to fulfill specific order (a &lt;= b &gt;= c &lt;= d &gt;= e ...) - find the number of repeating substrings within a given string ("abababab" = 4 times "ab")   Answer Question

Jul 15, 2014
---------------
After applying online a recruiter contacted me via email describing the upcoming interview process. First of all I had to expect a phone interview / google hangout (which ever I preferred) with the recruiter. At this stage the recruiter wanted to get some background information about my person (University, Employment, Projects, etc). Afterwards I was invited for a technical interview (online via google hangout + google doc). In this interview I was asked to solve / code some solutions to problems which the interviewer (who was a software engineer) provided. Unfortunately I didn't pass this stage. The next stage would have been on-site interviews at the Google Campus. 4 technical interviews + 1 interview during a free lunch. Most important knowledge for the technical interviews: - understanding of complexity theory - algorithms (TSP, shortes path, etc) [also their complexity] - data structures (linked lists, trees, graphs) [also their complexity for searching, traversing etc]

Cannot disclose   Answer Question

Jul 25, 2014
---------------
Applied in November 2013 HR got in touch in March 2014 First phone interview in April 2014 Second in May 2014 5 On-site interviews in July 2014 HR was super nice. One out of the 5 on-site interviewers was super unfriendly (and just came out of the shower w/ wet hair). She presented a graph problem which I considered my speciality. It had one tweak which she explained very badly. I asked her to reexplain the tweak twice. Then I was like "I understood it that way. So I'd do it this way. What do you think?". She then told me to "just implement it". I implemented it very fast. In the meantime, she read my CV. When I concluded, she looked at the code (which was probably 15-20 LoC). She then noticed that the way I handled the tweak was different to what she said. So she was like: "I told you to do it that way. What did you do there?". While I felt a little offended because if she had put a little more effort in explaining it I would have gotten it right away. Her version would have been even easier to implement.

Hardest question I had was computing the area of a polygon.   1 Answer

Aug 31, 2014
---------------
Once in a while I get approached by a recruiter from Google. My experience with their recruiters has been quite bad. The first time I was told there were several interesting positions, and I did some tests (including online coding etc.) the recruiter came back to me telling that the position was already filled however, but that I passed nonetheless. The next time there would be an open position he would come back to me. He didn't. After that I decided I would hold off on Google for a bit. When I was approached again after two years, I decided to give it another go, since the recruiter (different person) knew I had applied in the past. I was asked to provide dates / times to be called, I gave them some; after these passed they contacted me that unfortunately they were unable to call me then, so we settled on another date / time. They never contacted me, I mailed them saying I was not amused by this, and they never bothered to reply. I get an impression that recruiters apparently get someone applicants, they don't really care a lot and then to be sloppy with individuals. There are probably enough people out there who really want to work for Google.

A common problem from leetcode/CC150/any algorithm book.   Answer Question

Jul 8, 2014
---------------
Was contacted by a recruiter. Had a very pleasant experience with the process. They send you all the information you need to prepare, books, knowledge points, videos etc. However I did not study very hard and did not pass the phone interview. The question was a basic one if you studied leetcode or CC150 once or twice it would be fairly simple but I did not study at that time. The interviewer was very friendly as well.

All questions were from the expected area.   Answer Question

Jun 16, 2014
---------------
A classic Google process - two phone interviews, then five 1:1 on-site interviews. The hiring process is well documented and you know what to expect. A few personal tips : - Think loud. Brainstorm. - Don't overcomplicate your solutions. It's better to have working O(N^2) than buggy O(N log N). You can describe the better solution during the discussion later. - If you don't see the solution, try to write down a few examples or corner cases. You can observe the solutions from these. - Although it's more than recommended to know a wide range of algorithms or data structures, you'll rarely use these during the actual coding. Arrays, conditions and cycles are usually enough. - Practice. TopCoder, CodefForces, HackerRank, Codechef... These are the tasks you should expect. - Be positive. You've got nothing to lose.

No Question
Jun 3, 2014
---------------
only phone interviews. Did very well, but haven't been interviewed on-site. I think something related to the role pre-requisitis was behind I didn't get it. the recruiters were very friendly, and the interviewers were very friendly, however, I should check role requirements more throughly before proceeding with my application.

how to search a heap with recursion.   1 Answer

May 23, 2014
---------------
First of all a phone interview, 45 minutes. If it is successfull, you are invited to a sighted interview: 5 interviewers, 45 minutes each. I'd better not tell the problems because of NDA, but can give some advices. Read Cormen's "Introduction to Algorithms", at least it's first half. Solve problems from leetcode. Also approaches to some projecteuler problems can help you. Before the interviews they send you a syllabus of what you should know - you should prepare to be asked anything within this syllabus.

NDA :(   Answer Question

May 30, 2014
---------------
I was contacted by a recruiting staff member at the end of my last semester of university. She was very nice and described the interview process with a lot of details. She also sent me a lot of useful information to get me prepared for the interview.

I have been told not to share the interview question. Sorry. :(   Answer Question

Mar 19, 2014
---------------
Q.Given an input string S write a function which returns true if it satisfies S = nT. Basically you have to find if a given string can be represented from a substring by iterating it “n” times. n >= 2 An example would suffice – Function should return true if 1) S = “abab” 2) S = “abcdabcd” 3) S = “abcabcabc” 4) S = “zzxzzxzzx” Function should return false if 1) S = “abac” 2) S = “abcdabbd” 3) S = “abcabcefg” 4) S = “zzxzzyzzx” It would be easy to understand if you can give an algo instead of saying use kmp or suffix tree or… I came up with O(n*n) solution. Wondered how to do in O(n)

Given an input string S write a function which returns true if it satisfies S = nT. Basically you have to find if a given string can be represented from a substring by iterating it “n” times. n &gt;= 2 An example would suffice – Function should return true if 1) S = “abab” 2) S = “abcdabcd” 3) S = “abcabcabc” 4) S = “zzxzzxzzx” Function should return false if 1) S = “abac” 2) S = “abcdabbd” 3) S = “abcabcefg” 4) S = “zzxzzyzzx” It would be easy to understand if you can give an algo instead of saying use kmp or suffix tree or… I came up with O(n*n) solution. Wondered how to do in O(n)   25 Answers

Aug 19, 2014
---------------
It was challenging and very nervous. There are two phone interviews. On the first interview, there were two problems. On the next interview, I needed to write simple code. In general, the interview process was organized very well.

You are given an array of numbers. Rearrange elements in the array according to the following order: a1 &lt;= a2 &gt;= a3....   3 Answers

Aug 26, 2014
---------------
Recruiter approached me through linked in; followed by two phone interviews with the recruiter. The recruiter was nice and everything are smooth. A online coding interview is arranged two weeks later. There were no warm up talking about the coding interview. The interviewee seems not knowing anything about my background. I am a low level software developer. The coding questions are on high level design patterns and classes that I am not familiar with. Therefore, I spend more time than I expected. In the end, although the interviewer agree that my approaches are in correct direction, I know that I can not pass this round of interview.

No much experience in the libraries they want me to use.   Answer Question

Apr 27, 2014
---------------
I was firstly contacted by a recruiter via linkedin. I answered that I am interested in the job, so a first phone conversation was arranged with the recruiter. We discussed some stuff including where I would prefer to go, how to prepare for the interview etc. The recruiter shared a list of books to help me prepare. A phone screening was arranged for a week later. They shared a google doc with me and asked me to write some code there. There were two questions, both simple and easy but examined in great depth. I was asked to give detailed explanations of all test cases and possible failures, time and space complexity.

Questions were fairly easy but required a fair amount of general knowledge to answer all the questions around them.   Answer Question

Apr 15, 2014
---------------
The recruiters and interviewer are very friendly. However, they actually made me do the first screen interview in a time I didn't say I was available.

They asked two questions. 1. O(n*log n) time to find the k-th largest element of a n*n matrix, given every row or column of the matrix is pre-sorted. 2. O(log n) tome to find the k-th largest element of two pre-sorted array. Both questions were expected to be well disscussed, then to write pseudocode and test cases. I found it was very stressful and the time was not enough. I provide a O(n^2) solution for the first one, and solved the second one. But I they didn't move me forward.   2 Answers

May 2, 2014
---------------
got a phone call from an tech HR. it was not a tech interview, asked about me, why google, what from my experience fits to google.

expected a tech interview   Answer Question

Apr 3, 2014
---------------
45 min interview. First 10 min are questions about you. Then you get two programming questions, 15 min each. Finally you get to ask questions about the company for 5 min.

1) Implement x^n fast (divide & conquer) 2) Implement shortest path fast (dynamic programming)   Answer Question

Apr 15, 2014
---------------
The recruiters and interviewer are very friendly. However, they actually made me do the first screen interview in a time I didn't say I was available.

They asked two questions. 1. O(n*log n) time to find the k-th largest element of a n*n matrix, given every row or column of the matrix is pre-sorted. 2. O(log n) tome to find the k-th largest element of two pre-sorted array. Both questions were expected to be well disscussed, then to write pseudocode and test cases. I found it was very stressful and the time was not enough. I provide a O(n^2) solution for the first one, and solved the second one. But I they didn't move me forward.   2 Answers

May 2, 2014
---------------
got a phone call from an tech HR. it was not a tech interview, asked about me, why google, what from my experience fits to google.

expected a tech interview   Answer Question

Apr 3, 2014
---------------
45 min interview. First 10 min are questions about you. Then you get two programming questions, 15 min each. Finally you get to ask questions about the company for 5 min.

1) Implement x^n fast (divide & conquer) 2) Implement shortest path fast (dynamic programming)   Answer Question

Jul 22, 2014
---------------
I was initially sent an email by a recruiter asking if I am interested in a role at Google. If so, I should provide contact details for him to call and discuss the type of role he had in mind. I showed interest and was duly contacted. I was explained what kind of a role they were looking to hire people for. I have always been in the academic field studying away for my degrees so the chance at my very first interview (esp. at Google) got me to say yes. Next I was allowed to choose a time that suited me for a technical interview (via phone and google docs) for which I was prepared in terms of knowledge but very unprepared in terms of the process of the interview.

Standard algorithm design questions   Answer Question

Jul 10, 2015
---------------
One telephone Interview, 5 onsite interviews in the same day. Mostly problem solving questions (algorithm, systems design), no questions about the CV or other "usual" interview questions. Recruiter needed to be pinged from time to time about the progress of the applications but overall the Prozess was quick, since I told them I wanted to Start early. From the first contact to the final decision it took about a month (came in through a referral)

How would you go about designing and developing Google Suggest.   Answer Question

Mar 8, 2014
---------------
Technical interview lasted about 45 minutes. Interviewer was cold and I was really not able to understand him clearly as he was not a native English speaker. His accent and his phone were terrible. I was just hearing a sound from deep.

OOP questions   Answer Question

Jul 1, 2014
---------------
I applied online then a recruiter contacted me two week later, she sent me an online form for some background checks and preferences, then she schedules two phone interviews.The first interview was pretty straight forward and had only 1 coding question and it took the whole 45 minutes, the second interview was not expected it had general CS questions and OOP questions I did poorly

Code a hashmap which you would be happy to place into a production environment.   Answer Question

Aug 4, 2014
---------------
The first phone interview consists of making the interviewee comfortable with some banter. Then Some technical questions which lead into a coding question in a google doc. Once finished you should walk through one or two sample questions. Don't fret if you don't know a library name, but get the syntax of your language correct. Make sure you have a solid knowledge of basic data structures and algorithms. Always cater for corner cases. Knowing about how threadding and distributed computing is always a benefit, but it depends largely upon your interviewer.

Guessing game - I pick a number between 1 and 100 and you are trying to guess it. Every time you query a number I tell you if it is higher or lower. Part 1- Write the code of it, if cost of querying a number is equal. Part 2- How about if cost of querying number x is x? How would you change the algorithm?   5 Answers

Mar 6, 2014
---------------
The process was very transparent. The recruiter responds to emails and phone calls very quickly. The interviewers were very knowledgeable and friendly.

No Question
Jan 27, 2014
---------------
I referred by an employee and got into communication with a recruiter. Then she scheduled a phone interview. After one phone interview I had on site interview.There were four 1-1 interviews and a lunch with an employee.

No Question
Feb 18, 2014
---------------
I was contacted by a recruiter from the USA that was really great. We discussed a possible position and about my application for B1 visa. Unfortunately, my case was not good enough for a B1 visa and he recommended me to another recruiter in the UK. From then on, everything changed. I think that the second recruiter was not so eager to work with me and he suggested me to apply for the software engineer role. My phone interview was a disaster. First, the engineer called me 20 minutes later than the time agreed and postponed the interview for another 10 minutes. Later, on the phone he just told me his name and gave me a problem in open Google doc. The problem was trivial and easy, I asked him several times is there something special, like very long array, distribution of workload, etc., but he just somehow ignored me and pushed me to write code. He was asking me trivial things about my code and not about the solution. From the first 5 minutes I knew that the interview is over. After I think 30-35 min, he sad like this is it, and I told him that it was far from I expected in the interview.

The question was easy, noting special. Classical algorithm sorting question.   Answer Question

Apr 7, 2014
---------------
1st interview: Informal phone interview about "your history and potential options here at Google". The interview was nice and took around 30 minutes. The recruiter basically asked about what was on my CV and then a few other questions like: - How much hours a day do you spend coding? - What is your favorite programming language? - Do you know the Quicksort algorithm? Tell me its average and worst case performance. After asking everything she wanted to, I was told about what I should expect from the next interviews. Also, she sent me an e-mail full of useful links (study material). 2nd interview: Technical phone interview with a shared Google Docs file. The interview took 45-50 minutes. I was asked to code a program to get the string from the text box from google search engine and do a few things with it, like language identification, autocomplete, etc. I was also asked to explain the concept of deadlocks, how I would code processes and resources making a deadlock state happen.

How would you implement language identification for the search engine?   Answer Question

Mar 10, 2014
---------------
I had applied for two development positions in Google. The recruiter reached out to me asking for location preferences, which were all given. Two rounds went well. During the second round, the interviewer pointed out that I was applying for a SDET position in Google. I finished the round, wrote back to the recruiter stating that they had given me an interview for a position I hadn't really applied for, nor interested in. This probably will be the last time I apply for this company.

A question on printing the maximum contiguous set in an unsorted set of numbers.   2 Answers

Feb 15, 2015
---------------
I was referenced by my friend. Recruiter contacted me, and we assigned first phone interview. Interviewer was very nice. He gave hints and just pointed to lines where I was mistaken, after that I found mistakes myslef and fixed it. After that they invited me to onsite interview to Warsaw. My mistake was to prepare on codeforces, topcoder and solved hard ACM problems, that was unnecessary. I did not prepare by easy and tricky interview questions. That's why I failed 2 out of 4 interviews and did not get offer.

Phone interview question: You have a collection of arrays with length 10. Every 2 elements represent a domino(0,1; 2, 3; 3,4,...i and i + 1 one domino). Write a function that gets an array as parameter(with length 10) and returns true if given array exists in your collection, false otherwise. You are free to use any data structure to store arrays(For example I used HashSet of arrays).   1 Answer

Feb 3, 2015
---------------
A google recruiter found me on linked in and asked me several basic data structure relared questions in the first phone scanning interview then schedule another phone interview 2 weeks later.

Design an online coding competition website.   Answer Question

Jul 18, 2015
---------------
1 Telephone interview + 5 On site interviews. It was my first formal interview, and it was quite hard for me. The telephone interview asked you to write a graph searching algorithm on the Google Doc. All 5 interviews include 4 coding tests and 1 product design. Coding test includes whiteboard coding or Google Doc coding, depends on interviewer's preference.

Max-min agent, binary searching, R-trie, etc. All algorithm problems are slightly modified.   Answer Question

Mar 26, 2014
---------------
Good comprehensive 7 rounds

Questions are similar to those on CareerCup.   Answer Question

Jan 19, 2014
---------------
I applied through their website a few months after graduating, and received a response about two weeks later. They e-mailed me a list of tips and things they'd recommend studying for the interview (hash tables) etc. Interview was done using Google Docs to type out code while talking over the phone. Unfortunately, I should have studied more and did not get the interview, and they recommended waiting at least 12 months before trying again.

a problem that can be solved by greedy algorithm， two bit strings， we have two operation, one changes prefix m*k*i bits to 0s or 1s, the other changes any substrings whose lengths are k bits to be 0s or 1s. Minimize the operation times.   1 Answer

Jan 13, 2014
---------------
phone interview， and i failed

All questions I already saw in Internet: leetcode, careercup. 4 was about algorithms, 1 for design. No more details - NDA.   Answer Question

Feb 5, 2014
---------------
*I am not english native speaker. I applied online and get first non-technical call in a month. Then was 3 technical calls. I think I failed 2th. After each call I got feedback in a week. After third call, I was invited to onside interview in London. It took 2 months after last call to onside interview. **I am not from GB. I had to get a visa to come to onside interview. There was 5 interview + dinner. Dinner was with the man that was not only from my own city and speak my native language, but he also worked in the same company as me before relocate. It was really nice surprise.

No Question
Jan 31, 2014
---------------
Applied online for an open position in London. Contacted by mail to fix a first interview by phone. The interview terminated in 10 minutes because of not fluent English.

Average Complexity of Quicksort Algorithm   Answer Question

Feb 4, 2015
---------------
Applied through a referal and was contacted in a few days. The initial interview was by phone and lasted around 50 min. It included a few questions about my cv and an algorithm problems. Next was the on site interview of three one hour blocks. It was similar to the phone interview, except more in depth and with harder problems.

Find a start of a cycle in a linked list with constant space.   Answer Question

Dec 28, 2013
---------------
First contacted by google recruiter to setup an initial phone interview. The phone interview is technical and candidate write code on google doc. If interview is successful, it is followed by another phone interview.

Maximum rectangular area under a histogram.   3 Answers

Dec 9, 2013
---------------
The whole process was very long. It took four months to go from the first recruiter call to the onsite interview. In the meantime I had a few phone calls with the recruiter to schedule/wrap things up, two phone interviews and one on-site interview (comprising of 5 interviews with as many people).

Mostly general programming questions of the typical "Google" kind and one system design question.   Answer Question

Dec 5, 2013
---------------
Got a prep interview followed by a technical interview. Some quick algorithm questions at the beginning followed by a coding question

Given a document, output the 10 most frequent words with their frequencies in descending order   Answer Question

Nov 19, 2014
---------------
I was contacted several years after submitting my resume. I agreed to go through interview process despite being already employed in a very good job. I was told to prepare for the technical interview based on a list of topics, which I did. However, the technical questions were not what I was led to expect based on the topics I was told to read up on (algorithms for sorting, tree traversal, etc.). All in all, I did not feel they were interested in the whole picture, just how well I could code. Not being a full-time coder, I didn't do particularly well, even though I am actually pretty good with a bit more practice. I think they should test more general problem-solving ability rather than get hung up on how well people code in a particular language, which anyone with brains can become good at with practice.

I don't remember the precise question I got hung up on. It was a relatively straightforward C++ coding exercise -- but it was one of my bad days :( Other than that, I didn't find the interview particularly difficult. For example, one standard question (which was answered correctly) was to explain what a virtual function in C++ is and to explain the disadvantage of using VFs.   1 Answer

Mar 10, 2014
---------------
I uploaded my CV in the jobs section and I was contacted by a recruiter few days later. He scheduled a phone called after a week about general info on my CV and what I studied at university, lasted 15min. Then he scheduled the technical phone call two weeks later. After two days the recruiter called me to say that I passed the interview and I flew to London a month later. There I had the usual 4 interviews. The questions were quite tough and it is difficult to say if my answer were good cause the interviewers always nod and smile which is good cause it relaxes but it doesn't give a feedback. The recruiter called me few days later and told me that my results in programming weren't good enough. Overall it was an amazing experience, everyone was very kind and gentle, google payed the flight and the hotel (4stars in the center of london).

In the phone call the engineer asked me two programming questions: Implement a function that calculates in how many ways it is possible to climb a stair given that you can raise one step or two step at a time. (solution Fibonacci like) Then asked me general info about fibonacci sequence and few questions in the field of algebra (modulo operations). Second problem was to generate a random sequence of number for Lotto extraction. Onsite i had three interviews: 3 about programming and 1 about system design (general question about detecting bot in social network, youtube and google+).   Answer Question

Nov 20, 2013
---------------
Applied through an employee referral, the process took 2 months because I asked to postpone the interview to the next month. The recruiter and the enginner who interviewed me where very kind. After an initial phone call, they set up a phone interview that took 40 minutes, but unfortunately my internet connection dropped 2 times during the interview so I wasted time for that.

Nothing so difficult, the problem was the coding speed that wasn't enough, especially because I wasn't used to talk during code, but the engineer asked me to explain what I was doing during coding. Question about string pattern, longest subsequence with certain properties ecc... No question at all on data structures.   Answer Question

Nov 7, 2013
---------------
First round was a written test on paper. It comprised of 18 objective questions & one question for coding.

Given n numbers (P1,P2,P3,.....Pn). Divide them in m contiguous partitions such that the sum of the maximum is minimum. For e.g. (5,1,4,2,3) and m =2 then (5,1)(4,2,3)   7 Answers

Nov 6, 2013
---------------
I was contacted by recruiter. She offered to pick the time for initial phone interview. At scheduled time no one called. When I wrote to her and asked what happened, she apologised and rescheduled the interview and didn't call once again!!! May be it is a corporate trolling of goolge, I have no idea.

No Question
May 14, 2014
---------------
Two rounds of interviews. 1. (a) be asked some backgrounds and presented previous work. (b) given a sorted array, find two elements whose sum equals to a given value. 2. Implement the iterable interface for a collection of arraylists.

The problems are not hard.   3 Answers

Oct 31, 2013
---------------
Process was expedited due to another offer. I went from a single phone interview to an inhouse interview with potential future team members. Recruiters were all helpful, and the internal company paperwork took up the majority of the process.

Was asked about Hexadecimal numbers, bytes, virtual functions in c++ and was asked to write a program that matched string patterns.   Answer Question

Nov 6, 2013
---------------
People from google came to my campus and we were instructed to submit our resumes to their site. Was contacted shortly after by a recruiter and she told me to fill some information online and that she would forward my information to another person. After that I got contacted by another person that basically just gave me some information regarding the interviews and then forwarded the information to another person that was in charge of scheduling my interview. The day of my interview the person that was interviewing me called about 15min late and the interview took around 45min.

Dynamically build a tree from a stream of father-child tuples.   Answer Question

Mar 15, 2014
---------------
I was contacted by a recruiter via e-mail and subsequently via telephone. Scheduled a telephone interview with an engineer and received ample information about preparation. Recruiter was friendly and open to questions. First interview was via telephone and Google doc. Had to solve a relatively easy sorting problem which I implemented in Java. The interviewer was very friendly. Second interview was the same but a different interviewer, who seemed more reserved, and a different problem which I couldn't solve as easily.

Something on optimizong a DFS program using parallel computing.   Answer Question

Apr 1, 2014
---------------
This is the best interview I have ever met. The recruiter is very nice. We began the initial communications in September 2013. And he soon made a telephone interview for me. After that I got the onsite interview. The 1st and 2nd round were on the same day. Both of the interviewers came from US. The first one is Chinese, and the second is American, as this round included an English language test. The 3rd round interview was after about two weeks. After that was the HC review and offer review. Because I did't prepare the English Transcript at that time, it took about three weeks until the offer came to me.

Improve the complexity of the algorithm   Answer Question

Oct 1, 2013
---------------
2 interviews 45 min, data structure questions.

Given a list of number from 1 to N. All of them written three times, except one number (written 1 or 2 times). Find the number   3 Answers

Nov 26, 2014
---------------
Applied online. Called after 3+ weeks and scheduled first interview. Questions was a bit tricky and couldn't solve all of them. Generally the types of problems about problem solving, time complexity and basic OS knowledge.

Implement Biginteger adding function.   Answer Question

Jul 22, 2015
---------------
I applied online on careers website and after two weeks I got an email from a recruiter to choose suitable day and time for the interview. The process took one month. The recruiter was nice and understanding and allowed me to delay the interview because I had exams.

Intersect lines   Answer Question Max Ptah in a tree   Answer Question

Sep 24, 2014
---------------
I was referred by a friend, the recruiter contact me in one week, then scheduled an onsite interview soon. The questions are not very difficult, basically around tree, graph, dp etc. but as I was under prepared, I lost the chance :(

No Question
Sep 5, 2013
---------------
Campus Placements. had 1 test and three interviews of 45 mins each. 2 questions in every interview. mainly coding based questions. No tough algorithm.

No Question
Jul 22, 2015
---------------
I applied online on careers website and after two weeks I got an email from a recruiter to choose suitable day and time for the interview. The process took one month. The recruiter was nice and understanding and allowed me to delay the interview because I had exams.

Implement Biginteger adding function.   Answer Question

Sep 24, 2014
---------------
I was referred by a friend, the recruiter contact me in one week, then scheduled an onsite interview soon. The questions are not very difficult, basically around tree, graph, dp etc. but as I was under prepared, I lost the chance :(

Intersect lines   Answer Question Max Ptah in a tree   Answer Question

Sep 5, 2013
---------------
Campus Placements. had 1 test and three interviews of 45 mins each. 2 questions in every interview. mainly coding based questions. No tough algorithm.

I signed a NDA so I can't disclose the questions. However, the question were not too difficult. Most questions can be found on leetcode, careercup etc.   Answer Question

Sep 23, 2013
---------------
The hiring process was rather lengthy, probably because I am based in Tokyo but applied for a position in Sydney. I submitted my application in mid-June, and received a request for a phone interview at the beginning of July. However, due to my school's schedule, I had to postpone the interview until August. After the first interview, it took more than 10 days for the recruiter to get back to me and I was moved forward to the second phone interview. It tool around another 10 days before I was told that the results were positive. The onsite interview consisted of four rounds, two of which were algorithmic in nature and the other two of system design. The engineers who interviewed me were very positive and supportive. They also talked about their job with a passion, which inspired me a lot. Sadly after 20 days of waiting I was told that there wasn't a good fit for the position.

some knowledge based questions   Answer Question

Sep 17, 2013
---------------
1. referred by a friend of mine who is working in google 2.upload my resume and transcript 3.fill a questionnaire 4.be in touch with a recruiter about interview time 5.do a phone interview 6.pass the phone interview, get in touch with the recruiter again

There are n integers in disk. Memory has m space. how to sort the data efficiently.   3 Answers

Feb 22, 2014
---------------
I was contacted by a recruiter from google india. Had 2 phone interviews. But the recruitment process was really slow and the recruiter replied very late. i got the last reply after 4 months of the 2nd phone interview. It was really frustrating to wait for such a long period..

The second interview includes data design   Answer Question

Sep 28, 2013
---------------
My intern conversion interview, two rounds. First Round: talk my intern project about 5 minutes. Then a hard algorithm problem. Cost all the rest time. Second Round: Since the hard problem has already been asked, the interview is much more casual. Only a simple program problem and the most time are talking my project and the interviewer's work.

Given an active stream of sorted arrays, how would you merge them efficiently?   Answer Question

Oct 5, 2015
---------------
Applied through campus recruiter. Heard back within 2 weeks for phone screen. There were 2 phone screens, 45 minutes each. The first was a technical question and the second was a testing question. Both had behavioural components (how did you cope with a coudn't-care-less team member?...). Followed by on-campus face-to-face. Very nice people, a great experience.

binary tree starting point and ending point   1 Answer

Jul 17, 2013
---------------
Got selected through online test at campus interviews at delhi (IIT) .The technical test basically concentrated on basic c programming with little bit of data structures. There were 4 techinical rounds. Interviews were concentrated on Core knowledge like algorithms and Operations systems. Interviewers were very helpful pointing towards the right answers.

All standard   Answer Question

Jun 15, 2013
---------------
Interview process was pretty standard. There were no questions that came out of the ballpark... most were as you would expect (talk about internet networking and how binary trees can be made to do efficient things).

No Question
Mar 16, 2015
---------------
I was referred by a friend who is employee at Google, and a recruiter contacted me to set up a phone interview. The question was really simple, but some communication problems and my nervousness made me take a long time to get it right. So I didn't make it to the onsite interviews.

Due to NDA I cannot say the question, but it was related to binary search.   Answer Question

May 18, 2015
---------------
After a Google Code jam a Recruiter contacted me and I agreed to give it a try. I had about four months to prepare for the first phone interview and was provided with instructions on what to expect and how best to prepare. Yet I failed miserably. In overall it was a positive experience though took a bit too long if you ask me.

Using Google Docs Interviewer typed some data structures like Linked list or Binary tree but with non descriptive names, like struct A { B b; A* m; A* j; }, you must name the structures. Same with algorithms like inserting an element to the head of list. Then was the task: imagine you're writing a back-end function for tic-tac-toe game. Write a function that takes in data about the state of the game (array of cells) and outputs one of possible game states: Xs won, Os won, it's a spare, it's a draw, the games still continues, something went wrong and game cannot continue.   Answer Question

Apr 1, 2013
---------------
A four round onsite interview in China. Mostly are algorithm question except the last round. The last round had only one question(Impl a LRU cache, you can google it, it seems that is a recycled question)

The algorithm question contain DP, data structure, BFS. It is not hard. But I haven't make any prepareation so I had a bad performance in the last round. That is the reason I think why I didn't get an offer.   Answer Question

Apr 12, 2013
---------------
The interview process takes a long time and is very detailed. An applicant will need to be technically prepared, and also prepared to let the process take its time. If you know your field and is prepared, you'll be fine. Don't expect anyone to care too much about your background or titles - what matters is what you know and what you can produce.

The difficulties are really purely technical. If you're a nice person, everything will be easy except the technical questions.   Answer Question

Apr 3, 2013
---------------
I have applied for a position here. They have contacted me and after an interview with HR, I had two phone technical interviews that involved common data structures questions and toanalyze the complexity of the problems. I cannot give more detailes due to the NDA I sign ed. My opinion is that you have to be very goog in algorithms and data structures.

Afte providing a solution I have been asked to give a better one in terms of comtational time.   Answer Question

Mar 11, 2013
---------------
I was contacted by email first, and asked for my info and available dates. A few days later, I was contacted by my recruiter who introduced herself and gave me a few tips. The next day, another employee sent me an email scheduling two 45-minute back-to-back phone interviews + a Google Doc to use for each interview. The interviews took place as planned. The interviews were technical and involved coding from the outset.

A question about linked lists.   Answer Question

Mar 7, 2013
---------------
I was first contacted by a recruiter from Google London office. We talked about my cv and background, mostly focusing on my programming skills. Next a phone interview was arranged for me due a week later. A software engineer contacted me on the day, and started by introducing himself in less than a minute. He then immediately jumped to the technical question without giving me a chance to introduce myself or talk about my work and experience. The whole process happened so fast that I couldn't really focus for the first few minutes. I answered the question and wrote some code on the shared screen, but my code had a few bugs that the interviewer helped me track them and I fixed them. I heard back a few days later from them that I had not passed the first round because my coding was not strong enough.

City skyline   Answer Question

Jan 17, 2014
---------------
It was very good experience of applying to Google. First I had a screening telephone interview. Then had two online programming tests guided by a google employee. First online technical interview was quite easy and smooth. Second however didn't go that well, since I was stressed thinking that interviewer was not interested anymore, or busy doing something. I should have kept calm and proceed with my task. Hence I failed second task. The HR contacted me after few days stating that they won't proceed at this time and I should try to apply again in the future.

Optimise the code where possible. You have to have it in mind when writing a code, so you could optimise later.   Answer Question

Feb 24, 2013
---------------
two telephonic interviews where i was asked to code on a google doc. the interview were checking for basic knowledge of data structures and programming. The interview went fine but got a rejection call after a few days

All questions were answerable.   Answer Question

Feb 24, 2013
---------------
I was contacted by a recruiter by email. Then she helped me to set up a phone interview with an engineer. The interview lasts around an hour. I was a newly graduate. He asked questions related to my school projects. No coding. Some data structure and algorithm questions.

There're no difficult questions but I think I'm not well prepared so my answers are too normal. He didn't find anything special.   Answer Question

Feb 27, 2013
---------------
Three rounds of technical phone interviews.

Asked about some tree manipulations. Not particularly difficult.   Answer Question

Feb 21, 2013
---------------
2 phone Interviews. One research and one programming related. Both were easy though.

The programming question was to find the closest element in a binary search tree. Can be solved easily.   1 Answer

Jan 28, 2013
---------------
Typical techinical interview - 2 45-min phone calls. The first interviewer is very friendly and asked me to do some basic coding. The second interviewer has some accent so I did not really can understand what he was asking....

1. find duplicates in an array 2. design a method which consumes an integer and output the corresponding column number in Microsoft Excel ( ex. A, B, C......Z, AA, AB....ZZ....)   1 Answer

May 11, 2013
---------------
Contacted by a google recruiter. Arranged a short telephone interview, and two weeks later an onsite in the london office. The onsite consisted of five interviews, with lunch in between. Most interviews were coding interviews, the last one was system design. I found it the hardest, but couldn't say whether that's because I was already tired, or if it was actually hard. I had to follow up the recruiter after 10 days, and then learned that I will not be offered the position. No other feedback was provided.

Given a 'friendship' graph, how would you generate friend suggestions for people, and how would you distribute the data across machines?   Answer Question

Feb 6, 2013
---------------
I just invited to first telephone interview, it was some common questions about fields I worked with, and some questions related to fields.

Which data structure is guaranteed logarithmic complexity!? B-Tree, Binary Tree, Red-Black Tree, Hash Table   Answer Question

Feb 27, 2013
---------------
I applied through a friend at Google. The staffs at Google are quite efficient. Only two days after I submitted the resume, a recruiter contacted me and arrange a phone screen interview. Three days after the phone screen, I was told that I passed the interview. An on-site interview was arranged within two weeks. There are four 45-minute on-site interviews, three in the morning, and one in the afternoon. The interview questions are not very hard. But some of the questions might not be selected carefully, and contain some errors. So make sure to discuss with the interviewers if you find something wrong.

Due to NDA, I'm not supposed to talk about the interview questions. However, there have some data structure questions, such as: write a program to verify where a given binary tree is a binary search tree; and also some design questions, such as: how to improve the current HTTP protocol (answer: SPDY).   Answer Question

Mar 21, 2013
---------------
After an interview workshop run by Google at my university I was contacted a few weeks later by a Google Recruiter. I initially had a 45 minutes phone interview with an engineer answering questions and writing code on a shared Google Doc. After that I was invited for on-site interviews. In total there were 5 interviews of 45 minutes each on that day. 4 of the interviews were mainly about problem solving and coding. The other one was more about system design (no coding, it was just a discussion). All interviews were with engineers. After the on-site interviews they asked for references from supervisors/managers etc.

I found the system design interview hardest. It's difficult to prepare for and hard to estimate how well you're doing. The only advice I can give is to stay relaxed and talk about the ideas that come to your mind. The interviewer was quite helpful and it was more like brainstorming.   Answer Question

Mar 18, 2013
---------------
I was contacted by a recruiting contact from HR. From there I was passed off to another contact who scheduled two back to back, 45 minute coding interviews. The first interviewer was very pleasant. After initially asking a question on which I fumbled, we spent the remaining time working on one question. The question itself wasn't terribly difficult, but it was intentionally ambiguous, to make sure I asked the right questions. After clearing up details we discussed optimizations, etc. This is probably the part of the interview that was most enjoyable as it didn't really feel like I was getting grilled. It felt as if we were discussing a problem and different approaches we could take. The second interviewer had a bit of an accent and seemed a bit less engaged/helpful. Also, the questions he asked were significantly tougher. All in all the process went very smoothly.

I was asked to write an algorithm to solve a crossword-like puzzle (I forget the name, but started with a 'B'). As opposed to simply vertical, horizontal, and diagonal placement of words, they were allowed to snake around the grid in any way. I immediately thought "recursion" since you have to check every adjacent grid space to make a possible word. Needless to say, I didn't completely finish coding, but I did have the thought process correct.   Answer Question

Oct 31, 2014
---------------
Full timer friend recommended me, got contacted in a few days. Answered several questions via email, then two 40 min phone screens. First was fairly easy, second quite tough. Both interviewers were really friendly, although it was impossible to see whether what I am doing is what they expected. Managed to have some - possibly correct - code at both interviews, however I got a rejection email next week.

Implement a thread-safe LRU cache   Answer Question

Jan 15, 2013
---------------
First interview: phone call reading my resume and asking typical questions, why I want to leave my current job, etc... (no technical questions). Screening interview on site (45 minutes) - 1 technical person

Given a binary tree, print out the whole tree by levels   4 Answers Write a function that receive 3 numbers and return the medium number   3 Answers

Jan 2, 2013
---------------
I was first contacted by HR and then for the first round phone interview

You are given a squared integer matrix of nxn size in which all rows and all columns are sorted in ascending order. The task is to check if the given matrix contains a given key.   Answer Question

Feb 19, 2013
---------------
Met a recruiter at a conference and got referred by email to a google contact in Montreal that scheduled the interview. Correspondence was quick and interview was scheduled within weeks. The interview was done over google hang out and the questions werent that hard for software engineering. However, typing on a google doc was extremely slow and most of the interview time was lost in typing and waiting to see what character was actually typed. This made the whole interview a disaster. Be careful if that happens to you. Maybe tell the interviewer about it and try to work around the problem.

Nothing was too difficult all too technical. It was more a question of answering quickly and accurately.   Answer Question

Dec 17, 2012
---------------
I got contacted by a recruiter in September. I asked to start the process in late October, and went on-site in early November. I got interviewed by 5 different people. I believe I did pretty well, but for some reason did not get an offer. They came back to me after exactly one week.

Can not tell the questions because of NDA   Answer Question

Dec 16, 2012
---------------
Recruiter approached me and arranged the phone screens. Passed the first one. Failed the second question in the second phone interview.

can't dosclose   Answer Question

Dec 11, 2012
---------------
got referred by an employeed, did two rounds of interviews (8 interviews)

There wasn't any particularly difficult question. All questions were typical coding/algorithms questions.   Answer Question

Dec 7, 2012
---------------
I got through the usual Google interview process. I had two interviews on-campus and another three on-site. It takes some time to get back to you after the first interviews, so be patient. I totally recommend reading the book "Cracking the coding interview". It is really good. Most of the questions they asked me where directly from there or very similar.

I was asked not to disclose questions asked.   Answer Question

Dec 6, 2012
---------------
I applied at a Campus Career Fair. I then had two three hour interviews spaced out by about two weeks. I was notified I got the position about two weeks after. The recruiter I worked with was amazing and very helpful. All of the people who interviewed me where kind and respectful. This was probably the most difficult technical interview I have had out of many companies.

Shameful to admit, but the question about what happens behind the scenes, when you browse the internet took me by surprise ...   1 Answer

May 16, 2013
---------------
A recruiter contacted me by email, two years, after trying to apply to Google. Had two phone interviews, after which I have been declined. The first interview was rather general - how would you implement a book DB, which books can be searched by name, what happens behind the scenes when you browse the internet, questions about previous experience, etc. The second interview included a coding question, which was to perform some kind of a modified binary search in order to find a value in a shifted sorted array.

Anything was difficult, I answered them all but my spoken english is not very good so I guess I couln't explain everything properly   Answer Question

Dec 28, 2012
---------------
They contacted me via mail, then called once to setup a second interview. They interviewer used a shared Google Docs document.

Can't reveal the actual questions, but String manipulation, Common datastructures, Large Scale system design and math/logic are some topics that the questions touch on.   Answer Question

May 22, 2013
---------------
Applied online through a referral, and was contacted by a recruiter immediately. At each stage in the process, I was asked to schedule the next (phone interview and the onsite respectively), and the whole process was pretty smooth and quick. The phone interview was straightforward, and once I finished that, I got a call from the recruiter the next day expressing their wish to fly me out for the onsite interview. Onsite included 5 back-to-back interviews over the course of a day, and I thought I did well, maybe fumbled a couple of questions, but ended up not getting the offer. All in all, it was a great experience, and I'm definitely interested in applying again. The only thing that annoyed me was the complete lack of feedback from their side.

No Question
Dec 28, 2012
---------------
They contacted me via mail, then called once to setup a second interview. They interviewer used a shared Google Docs document.

Anything was difficult, I answered them all but my spoken english is not very good so I guess I couln't explain everything properly   Answer Question

May 22, 2013
---------------
Applied online through a referral, and was contacted by a recruiter immediately. At each stage in the process, I was asked to schedule the next (phone interview and the onsite respectively), and the whole process was pretty smooth and quick. The phone interview was straightforward, and once I finished that, I got a call from the recruiter the next day expressing their wish to fly me out for the onsite interview. Onsite included 5 back-to-back interviews over the course of a day, and I thought I did well, maybe fumbled a couple of questions, but ended up not getting the offer. All in all, it was a great experience, and I'm definitely interested in applying again. The only thing that annoyed me was the complete lack of feedback from their side.

Can't reveal the actual questions, but String manipulation, Common datastructures, Large Scale system design and math/logic are some topics that the questions touch on.   Answer Question

Mar 2, 2013
---------------
Hiring and Interview process is very rigorous and obviously very tough. There are two rounds of interview . First round of interview was technical interview. In this interview fundamental to very difficult , all types of questions are asked. Here different aspects of programming are asked. I was asked about approach to solve some problem. They also asked me to write two program in a programming language of my choice. The programs are not common. There are also fundamental questions about programming like object oriented programming and even some fundamental algorithms.Second round was HR/personality test .

There was so many very difficult technical questions   Answer Question

Feb 10, 2015
---------------
1st. Got a phone call from hr, she had some basic introductions and we talked about my background. 2nd. Got a phone call from a developer, I was asked to write code that could travese a matrix by diagonal strips in google doc and discuss some problems in my algorithm.

Write code that could travese a matrix by diagonal strips   1 Answer

Nov 24, 2012
---------------
I entered the room,the interviewer asked," have you ever interveiwed with google? "i answered no,then he tell me the proccess of the interview of google briefly,and after a quik look through of my cv,he said,"ok,let's do some interesting prbolem"without askeing any questions about my cv,it was obviously that he was not interested in me.

how to desgin a system for google search query   Answer Question

Apr 1, 2013
---------------
A recruiter guy send me a mail asking if i was interested to be interviewed to open jobs at Mountain View HQ and to send him a email with a phone. I sent my cel phone #. And in 10 minutes he call me. I answer some questions, but the phone call was horrible and he asked if i had a inline # to be called. I gave him a # and scheduled the interview to another day. He didn't called in the scheduled day, and send me another mail for rescheduling, I sent him another # because i was traveling and he called me to the other phone and, once i wasn't there, we didn't finish the interview. After that he stop answering my mails and never contact me again.

There is no big questions.   Answer Question

Nov 14, 2012
---------------
The hiring process usually begins with one or two phone screens, followed by a day of onsite interviews. I applied through my university, so the initial phone screens were replaced by two more back-to-back in-person interviews. If all goes well during the onsite interviews, there is a series of three hiring meetings behind closed doors, each higher level than the last, after which an offer is made.

I do take my NDA seriously, but in general terms: the interview questions at Google are extremely difficult and often very tricky. With that said, contrary to popular opinion, they are not necessarily any harder than the questions that any tech company with high standards would ask. Know your data structures and algorithms back to front; be prepared for questions as high-level as very general OOP design problems and as low-level as bit manipulations; and know your resume cold, because every interviewer was interested in at least one item on it. I HIGHLY recommend finding a copy of at least one coding interview book (Cracking the Coding Interview, Programming Interviews Exposed, and Design & Analysis of Algorithms served me well) and tackling the problems in it -- they will give you a good idea of what to expect. I will say that I had never seen any of the questions I was asked in my Google interviews (whereas the rest of the industry seems to recycle the same 20 questions over and over), but my practice with general interview-style coding questions was extremely useful nonetheless. Remember that the interviewer wants to see how you approach a problem you haven't necessarily seen before, so think out loud a lot, and don't forget your edge cases!   Answer Question

Nov 16, 2012
---------------
it is a phone interview, just asked me to write code in a document

this is just a two-sum problem. given a sorted array and a number X, find all pairs whose sum is X in a efficient way.   2 Answers

Nov 18, 2012
---------------
I got some recommendation from my friend. And the day after I submitted related documents, recruiters sent me very kind Emails to arrange two back-to-back telephone interviews. And days before the interview, they send mails again to remind the date of interview, that is very sweet. During the interview, there are some coding questions and interesting discussion. That was a good experience.

Some design questions. You have to abstract the essential of the problems and design the appropriate interfaces.   Answer Question

Jan 26, 2013
---------------
First of all you need to have a reference in Google wihout reference you are not even in for first round

You cannot expect what questions they will ask and you   Answer Question

Jan 26, 2013
---------------
First of all you need to have a reference in Google wihout reference you are not even in for first round

You cannot expect what questions they will ask and you   Answer Question

Nov 16, 2012
---------------
They hired me from my oline application. This was followed by a telephonic screening after which I had to clear about 4 technical interviews. there was no HR round. The rounds showed their work culture ehich did not focus on formality. I was impressed by the questions/

not allowed to say due to confidentialty   Answer Question

Nov 14, 2012
---------------
A week after being referred by a friend I was contacted by a recruiter to begin the interview process. They set up a short 30 minute phone interview for a week later. During this interview we talked a little about me and Google and then I was asked to rate skills that the recruiter chose from my resume from 1 to 10. I was then asked 3 or 4 technical questions. I never heard back from them and have received no feedback. I find it really weird that they do not reach out to you even if you contact them for a follow up.

The question I can remember is explain how a TCP/IP connection is started at the protocol level. .   2 Answers

Feb 18, 2013
---------------
I wasn't looking and it was certainly unexpected: I got an e-mail from a recruiter who had gotten my data from a code jam contest I entered some years ago. Soon, I talked to that recruiter and got a phonecall during which we set up the first phone interview. I took part in two more technical phone interviews during the next two months.

It was a very simple setup, actuall y(coding a "balanced server" class which would return the number of an unused server) . The problem may have been that, actually. I introduced difficulties to the setup which weren't originally there (I tried to code for concurrent use when the interviewer apparently expected the client side to handle that concurrency) and ran out of time.   Answer Question

Oct 29, 2012
---------------
A referral got me an email exchange inquiring about my studies (including GPA), my work/project experience, and my time availability. I scheduled an interview for two weeks later with the recruiter and had a 45-minute phone interview conducted with the aid of Google Documents for answering two technical questions. I got an email two weeks later thanking me and informing me that I was not a close enough fit.

Google asked me not to share interview questions, so I will not be disclosing the specifics. They were technical in nature and each involved solving a real (minor) question.   Answer Question

Oct 24, 2012
---------------
Interview process was not special. After submitting resume through web, I waited for about 2 weeks. I got a call from google and scheduled 1:1 phone interview. In 1:1 phone interview, the interviewer was not working as a developer so I requested to explain what I've done in a easy way. He also wanted to hear personal things such as my hobby and a question 'what do you want to achieve after 10 years?'. I waited for about a month until I receive an email about on-site interviews. I did one on-site technical interview one day and then three consecutive on-site technical interviews another day (about two weeks later) . After about two week from on-site interview. I got a phone call about the rejection.

I spent much time for answering a question. Q : In a grid, if points, which refer locations of people, are given, which point in the grid will be the best point to meet together that the sum of distances from each position to the point is shortest. Distance between two points p1 and p2 is |p1_x-p2_x| + |p1_y-p2_y|.   3 Answers

Oct 24, 2012
---------------
Two phone interview and then an interview onsite. They gave me a list of computer science topics. Both the on-site and the phone interview concerned solving simple algorithmic problem or system design problems.

A very specific question about a problem that exists in the google project I was applying on.   Answer Question

Oct 26, 2012
---------------
direct on-site interview with 2 people at Cambridge.

Normal questions and code on board   Answer Question

Mar 17, 2013
---------------
Quick message on LinkedIn lead to a phone call from a recruiter, who was friendly and walked me through the process. A couple weeks later, received a call from an engineer for a 45 minute technical interview... after that, another 45 minute phone interview was conducted, which focused more on what they call the "Front-End Suite", which suited my experience better. I was then flown to Mountain View for an on-site interview. This was a full day affair, and I met with 5 engineers at Google who quizzed me on a variety of technical problems. All but one were really friendly and personable... one of them looked pissed from the beginning to the end, which was probably the reason why I didn't get an offer.

Signed an NDA, so can't give specifics.   Answer Question

Oct 16, 2012
---------------
Got a phone call, was asked general questions about my background then given a 30 minute coding challenge. Something along the lines of take 2 strings and return if they are anagrams.

Interviewer had a thick German accent and was using voip (poor call quality).   Answer Question

Oct 13, 2012
---------------
Tough interviews. Very high bar. Lots of coding but also design.

How would you deploy software to a billion machines?   Answer Question

Oct 12, 2012
---------------
I initially communicated with a recruiter from Google. It took them some time to schedule a phone interview. The interview was rather easy, so I am not sure what to make of it. We first talked about what kind of work I have done in the past and what kind of position will I be interested in (Research, Research+Coding, Coding). Then he asked a couple of pretty basic interview questions regarding data retrieval.

Nothing in particular.   Answer Question

Oct 26, 2012
---------------
Applied through campus. Got an email form an initial phone interview. Two questions were asked: 1. Implement a wrapper class for an iterator. The iterator next() and hasNext() methods skips all values that are not positive, i.e. only next() will return the next negative value, hasNext() returns true if there is a next element that is negative. 2. Given a file consisting of names, what data structure would you use to valid if a name is in the list. What if now the we say a name is valid if the if it differs no more than one character against a name in the file?

none   Answer Question

Oct 4, 2012
---------------
Get this internship interview(Google China) by referral. Two 1-1 interviews. Just answering algorithm questions and write codes in paper. Easy problems.

An algorithm question about string.   Answer Question

Oct 1, 2012
---------------
two initial phone calls, followed up with onsite one. If not quite good for the first two interviews, an additional phone interview will be expected.

ask for the drawbacks, and give the way about how to design and implement java GC   Answer Question

Oct 1, 2012
---------------
3 technical interviews with 3 different engineers in a hotel room. Each of then lasted for about one hour, and I had about 10 minutes before the next interview. As the posistion was to Belo Horizontes' office, all interviews were in portuguese. The interviewers asked me to solve two problems in each of the interviews. I had to code a solution in paper.

a question related about implementing web search was the most difficult. Not that the question was that hard, but the interviewer was somehow not clear about the problem.   Answer Question

Jan 10, 2013
---------------
Interview for 4 to 7 rounds, and 45 mins for each round. Problems range from algorithm design, data structure, class design, debug, projects you've implemented, IQ puzzles and so on.

Give me a bad design class, to find out and improve it as much as possible. Actually there're more than twenty places need to be fix.   1 Answer

Feb 11, 2013
---------------
Contacted by recruiter for a initial phone interview. Later a week, i got a call from a person in Google sydney office. He was very polite and trying to get best out of me by giving hints. Interview went well. One puzzle and one simple problem. I used java to solve it. But later one week, they had mentioned, though interviewer were impressed with your accomplishments, they felt my experience was not strong match for current requirement.

Suppose that you earn 100% annual interest (APY) on $1 initial deposit. How long before you'll be as rich as Bill Gates ($63 billion)? Given a number, e.g., 314159, as an array [3,1,4,1,5,9], increment it: change it to [3,1,4,1,6,0].   15 Answers

Sep 25, 2012
---------------
2 rounds of online coding using google docs 1. find connected component in 0/1 matrix, color fill algorithm, hash table store every pixel 2. even sampling in a sphere, even sampling on sphere surface 3. 2D point cloud, find a line that has most points on it. 1. public, private, 2. friend 3. depth of binary tree 4. merge interval span

1. find connected component in 0/1 matrix, color fill algorithm, hash table store every pixel   2 Answers

Oct 19, 2012
---------------
It was campus recruitment process. It was a written test where all the recent graduates participated

Implement a stack O(1) push, pop and get min.   1 Answer

Sep 25, 2012
---------------
2 rounds of online coding using google docs 1. find connected component in 0/1 matrix, color fill algorithm, hash table store every pixel 2. even sampling in a sphere, even sampling on sphere surface 3. 2D point cloud, find a line that has most points on it. 1. public, private, 2. friend 3. depth of binary tree 4. merge interval span

1. find connected component in 0/1 matrix, color fill algorithm, hash table store every pixel   2 Answers

Oct 19, 2012
---------------
It was campus recruitment process. It was a written test where all the recent graduates participated

Implement a stack O(1) push, pop and get min.   1 Answer

Dec 6, 2012
---------------
I was referred by a friend that works at Google. The process moved very quickly, and the HR people always followed very closely. After the phone interview, I was flown in to their office, and was there the whole day for 5 technical interviews, with an informal lunch break. The type of questions were the expectable things: CS stuff, algorithms, complexity analysis, systems design, etc. Although friendly, the people were not particularly enthusiastic about what they were working on at the moment, and didn't do a very good job of getting people excited about working there. I was surprised by this, although I'm still sure that it's an amazing place to work at. I guess I was expecting a more "start up" feel, but it wasn't there anymore. The interviews went well, but not excellent, I knew I had done probably "good enough", but wasn't super impressive. In the end I didn't get an offer although apparently it was a close call. While waiting for their decision, which took a while, the HR people followed closely to make sure I didn't accept any competing offers (which existed) while they decided.

No surprising questions.   1 Answer

Nov 21, 2012
---------------
Google docs interview

Simple starter but increases difficulty in improving an algorithm   Answer Question

Sep 24, 2012
---------------
HR saw my resume and emailed me to schedule a phone interview as one of my work experience is briefly matched with one of their open position. Phone interview took an hour, and all questions were about data structure and algorithm - searching, sorting and etc, and asked to write a code about it.

not an unexpected question during my interview as all questions were about data structures/algorithms.   Answer Question

Sep 20, 2012
---------------
Two 45-minute phone interviews. I went well with the first interview. The interviewer asked about class constructors and deconstructors, questions similar to 8-queen and power set of a set. I stuck in the second interview where the question is below:

Given an array of different integers, print out all the inversion pairs. (i.e, a[i] &gt; a[j] where i &lt; j)   1 Answer

Sep 13, 2012
---------------
consisting of 6 rounds of interview, mostly C, OS and cloud computing related.

A specific implementation of B-Tree when looked from one side   Answer Question

Sep 12, 2012
---------------
I applied late in the process and only received one technical interview. I passed it but did not get the team interview.

I cannot remember the problem exactly, but the question asked about what to do when data get larger, and I have to think of a new data structure to solve that.   Answer Question

Nov 4, 2012
---------------
They take on-campus written and shortlist candidates from it. They also seek good academics for shortlisting criteria. There are 5 rounds of Interviews in Google . If you go through all , you have fair chances of selection. They call you at their office for interviews (all at their expense) the five rounds can be in any order and every round is shortlisting round after first two interviews. They basically check your skills in various domains like Data Structures , Algorithms, Coding , Designing, Projects you have done and much more. They start from basics and move to extreme difficult questions. Every round is of fixed time 45-50 minutes. They see your thinking process not the solutions for difficult questions. Just give your best and involve your Interviewer during solving your problem.

LCA of 'k' given nodes in an arbitrary tree having N nodes?   3 Answers

Sep 1, 2012
---------------
I was contacted by one of their recruiters, who was extremely professional, friendly and helpful. Initially, the recruiter sent me an email stating that I may be a good fit for Google, and suggested to setup an informal phone interview. We did that after a couple of weeks. He went through my CV and asked me questions regarding my background and what I thought of Google. At the end of the phone interview, he told me he would contact some technical people from Google to see where I fit and he would get back to me. After a couple of weeks, we set up a technical phone interview. In order to better prepare for the technical phone interview, it was suggested to study certain material (mostly books and blogs regarding programming). I was given a month to prepare. The technical phone interview lasted 45mins. The interviewer called me and started asking questions immediately, without greeting me or introducing himself. Throughout the interview, he was very formal. I was asked three questions and had to use a shared Google Documents file to write my answers. The first question was about a WiFi setting where a slow node accesses the channel along with several other faster nodes. I was asked to compute the expected value of the throughput. The second question was about string manipulation: I was asked to write a function that takes two strings as input and produces a string as an output. One of the input strings serves as a pattern and the second input string needs to be manipulated such as the characters appearing in the pattern string and are present in the second input string are returned in the output string, in the order they appear in the input string. The third question was about concurrent access of shared double linked lists, what sort of data structure is necessary to handle this and how to implement it.

String manipulation.   Answer Question

Aug 31, 2012
---------------
This position was for Software Engineer, Google Mountain View location. I was contacted by a recruiter. They conducted two telephonic rounds and 5 F2F rounds conducted in Bangalore. It is a nice experience altogether.

Some of the questions asked in the interview are Code for Boggle game OS concepts Questions based on dynamic programming   Answer Question

Aug 22, 2012
---------------
Pros: very friendly and intelligent people. I had great fun trying to solve the puzzles during the interviews. Food was excellent and got see the many perks on the Google main site. I would go again just for the fun of it. Cons: took long time to get through the process. Feedback was delayed.

Under NDA   Answer Question

Aug 16, 2012
---------------
First they ask me to introduce myself or ask some questions about my resume, and then they ask two technical question in each phone interview. My interview stops here. The technical questions are normally about simple algorithms, and you need to prepare and practice a lot before you have the interview. Otherwise, you may be choked.

the one ask about what kind of exception will be throwed out in a piece of java code   Answer Question

Jul 25, 2012
---------------
Process 1: ********** - The Challenge Phase. Problem: you are given two-armed Balances one each are you can put weight and other balances. Return the minimum weight you add on each arm of each balance to make the whole structure balanced. - First Interview. Problem 1: Given two strings (Text & pattern) return true if the pattern exists in the text. Problem 2: Given List of Strings. Return a list of lists of Strings where each to anagram Strings in the input list exist in the same list in the output list. - Second Interview. Problem 1: Implement a data structure that supports two methods (Insert(int x),getMedian()) Problem 2: Given a 2D boolean array. Return the length of the biggest square where all elements inside it is true. - Third Interview. It was a culture fit with a lot of HR questions (Ex: how do you see managment?, When do you say that "Today is a good day of work"?, what about teamwork?,talk about a project you did?) but at the end there were two problems also: Problem 1: Given a list of integers, Print out all triples that sums to zero. Problem 2: Given a sorted circular integer vector. Implement the search on such a structure.

Make a perfect Random7() function to produce numbers from 1 to 7 using Random5() function which is perfect.   2 Answers

Jan 9, 2013
---------------
Initial interview with HR, followed by technical interview (coding)

Design a cache   Answer Question

May 16, 2015
---------------
The recruiter contacted me for an in-person interview. There were 5 interviews and recruiter contacted me by next week saying that the interview results were positive. By the end of next week they gave me an offer.

Can't disclose. Signed a confidentiality agreement.   Answer Question

Jul 30, 2012
---------------
One thing that has to be commended is the wonderful care taken by the recruiter in respect of logistics. They were very accomodating of my schedules. The interview was a gruelling 8 hour process of algorithmic puzzles and teasers which leaves you exhausted but also stimulated at the same time

No question was very difficult. They could all be worked out with some thought. Also the interviewers help you get to the solution   Answer Question

Jul 24, 2012
---------------
HR called to arrange interview. Spoke to a very nice guy who explained the position. We went through some programming topics (networks etc) and some fairly in depth unix admin style questions.

How do I find the owner of a block of shared memory   Answer Question

Jul 19, 2012
---------------
2 phone interviews and one onsite interview

Nothing too difficult to work out. Discuss with your interviewer before you code.   Answer Question

Jul 16, 2012
---------------
The process began by submitting an application through the official webpage. In a few days I got an answer, and the interview process started. The recruiter gives you study material for the interview and asks for suitable times for an online interview. The first interview is with a non-technical recruiter, which is interested in your background, reasons to join Google, previous experiences and so on. Then 1-2 interviews with Google engineers follow. They ask technical questions and puzzles and expect you to solve them in a shared Google doc (no syntax highlighting or whatsoever). Interview outcome comes pretty quiclky. I went through the first two interviews, but was not called for a personal interview.

What is the complexity of Quick sort? (mean and worst case)   1 Answer

Jul 19, 2012
---------------
2 phone interviews and one onsite interview

Nothing too difficult to work out. Discuss with your interviewer before you code.   Answer Question

Jul 16, 2012
---------------
The process began by submitting an application through the official webpage. In a few days I got an answer, and the interview process started. The recruiter gives you study material for the interview and asks for suitable times for an online interview. The first interview is with a non-technical recruiter, which is interested in your background, reasons to join Google, previous experiences and so on. Then 1-2 interviews with Google engineers follow. They ask technical questions and puzzles and expect you to solve them in a shared Google doc (no syntax highlighting or whatsoever). Interview outcome comes pretty quiclky. I went through the first two interviews, but was not called for a personal interview.

What is the complexity of Quick sort? (mean and worst case)   1 Answer

Jun 19, 2014
---------------
A friend passed in my resume, I did an initial interview which included a meeting with HR, and then a coding interview in the Tel Aviv office. When I passed that I was called in to a whole day of interviews, also in the Tel Aviv office.

Write code that sorts a stack   3 Answers Remove duplicate characters from a string   2 Answers

Sep 17, 2012
---------------
I had a few recruitment emails about starting the process. Eventually I scheduled a phone interview, but the soonest slot was three weeks away. When they did call me, they'd prepared the wrong questions (for a Site Reliability Engineer, not Software Engineer). Heard back from them a few months later but by then I'd lost interest.

How would you calculate the number of 1's in a list of 10,000 integers?   Answer Question

Jun 7, 2012
---------------
I was contacted by a recruiter after applying online. The recruiter had an informal discussion by job and I really could feel that he was a person who wanted to get me inside the job. He analyzed my profile and presented me 4 different positions that I could fit if I passed the interviews. The first phone interview was very technical in nature, but I could answer the questions (which were not extremely hard). In the end, although the solutions were right and we really had a good conversation, I was not chosen, because I was too slow in answering them. I recommend Top Coder and Project Euler to practice, review your algorithms and study for about a month before applying, in order to have the confidence, ability and speed to succeed. At the worst you will become a really better programmer and problem solver.

Can't disclose, but you would find the questions in Top Coder or the Algorithm Design Manual book   Answer Question

Feb 24, 2015
---------------
1. Referred by a Googler(former colleague) 2. Recruiter contacted me via email 3. Got some short chat with recruiter about the position, my back ground, and introduction to the interview - About 1 weeks later 1. Interview at the Seoul office 2. Lunch with my former colleague - About 1 week later 1. Recruiter gave me a phone call, and he/she said about the next interview - About 1 week later 1. Interview at the Seoul office 2. Interview continued 3. Interview continued 4. Interview continued (in this interview, I made a critical mistake) - About 2 weeks later 1. I got a sorry & thank you mail from recruiter. - The end

- Please design ( ) software like ( ) in Unix. How do you implement ( ) feature? (I answered well, but he asked me to enhance it) - Some twisted programming quiz based on data structures & algorithms. I needed to use tree & BFS. - String processing. I made a simple answer, but interviewer asked me to optimize it again & again until I got O(n).   Answer Question

Aug 19, 2015
---------------
An HR lady contacted me to assign an phone call interview first. After I pass the phone screen. The same HR lady asked me for an specific on-site interview time. I wanted to do the interview in the next week, however, she suggested me I should choose next 3 weeks which could give me more time to prepare all the things. I didn't listen her advice and still chose the day in the next week. The on-site interview wat 1:1 type. I talked with 3 R&D engineer. They asked me lots of technical questions. I forget the details. I only remember they ask very detailed question about the skill they cared.

One of my interview questions is how to find all prime numbers under 1000?   1 Answer

Jun 23, 2012
---------------
The process: Recruiter contacted me via Linkedin, had some phone/email conversations, then talked to someone at Google to decide to apply or not. Had a phone interview then on-site. The on-site was 5 separate interviews plus lunch. The process is pretty long, though the turnaround between phone interview and on-site was quicker than other steps. One of the flaws of the process is that they don't have things together... the phone interviewer didn't know if I'd been notified about the phone interview (he hadn't when he interviewed) and so we didn't use Google Docs for coding - just more general questions. Something like 3 of my on-site interviewers were replaced last-minute, room confusion, lateness, etc. Follow-up with recruiter tended to be a day after it was supposed to be. The coding questions are much like you've seen on this site and others. There was a focus on tough general algorithms questions. I understand that they like to use variations on actual problems they've encountered, but they seemed to be (mostly) artifacts from such a heavy focus on distributed computing. I don't get to do distributed computing in my normal duties, so I was unprepared. The other downside is that there seemed to be too much focus on computational complexity and not as much on readability, maintainability, development time constraints. The hardest part is that placement doesn't happen until the time of the offer. So you don't know if you'll actually want to go until you're really invested in it. My advice for interviewers: Work on hard graduate-level algorithms problems to prepare, slight focus to the weird sorts of things you have to do for distributed programming. If the interviewer is asking you a design question, make sure they clarify what they're actually for. My advice for Google: Try to mesh the questions with the candidate's background better. Give more clear in-interview feedback about whether the solution is adequate, how it could be better. Allow for more time for the candidate to ask questions. There's no downtime at all for almost 6 hours, so maybe an easy question after lunch? Give more detailed feedback about specific weaknesses. Spend some time convincing the candidate that this is a good fit for their experience (or not) - without a job description you don't even know if it's interesting or not. All this sounds very negative but you can really feel the excitement on Google campus.

They ask you not to reveal questions, so I won't.   1 Answer

Jun 10, 2012
---------------
A recruiter called me see if I had any interest in a position in Google. A quick phone talk with the recruiter was scheduled a couple of days later. Then the recruiter asked something like why you want to leave the current company, what do you like about your current company, and why you want to join Google. Then he schedule a technical phone interview for me. The interviewer asked two technical questions first and some questions about my resume at the end. It took about 50 mins overall. He didn't give me too much hint or feedback during the interview. So I didn't know how he felt about my answer or what answer he wanted.

Implement a set class with the following method: get(), put(), getRandom()   1 Answer

Aug 10, 2013
---------------
I had two sessions with software engineers, where they asked technical programming questions. I then had to code my answers in writing on a piece of papers. I was aked about bugs in a given C program, in-order tree traversal, recursion and loops, the differences between the two etc'. The questions were easy / easy enough, but I guess I didn't pass due to some errors in the code in writing.

The main difficulty was writing code on paper without a compiler to check your errors.   Answer Question

Aug 10, 2013
---------------
I had two sessions with software engineers, where they asked technical programming questions. I then had to code my answers in writing on a piece of papers. I was aked about bugs in a given C program, in-order tree traversal, recursion and loops, the differences between the two etc'. The questions were easy / easy enough, but I guess I didn't pass due to some errors in the code in writing.

The main difficulty was writing code on paper without a compiler to check your errors.   Answer Question

Apr 12, 2012
---------------
I applied to Google via a recruiter. Initial impression is good, the recruiter was really helpful and we quickly agreed on the interview date. I failed at the first phone screen, however. The phone interview consists of forgettable technical questions such as your favourite programming language, what is the difference between a compiled and interpreted languages, etc. It took about 15 minutes before I was given a simple programming exercise. I did it in 10 minutes but spent the rest of the time fixing bugs, it was really quite embarrassing. I was nervous and too was too busy speaking my mind out loud (as was suggested by many for Google interviewing tips). Another critical mistake (IMO) was when I was aksed what position I'd like to be in, I said the equivalence of "whatever is good for me". I had a few things I really wanted to do at Google but knowing that with the years of experiences I've got, it's unlikely. Sometimes it doesn't pay to be truthful!.

Implement the BigNum's increment method for integers.   Answer Question

May 8, 2012
---------------
I applied to a job at Google using their website. The position was Software Engineer in Mountain View. After posting my CV I received an email in which I was invited to an interview. The first interview was with an HR person, simple talk, short, nothing special. I was programmed for another phone interview a week after the first one. This time it was a technical one. I was given a Google doc link and I had to use that document to write the algorithm for a problem that my interviewer presented to me. The problem was significantly less complex than I expected, similar to the ones that we used to do in high-school when studying algorithms. Unfortunately I did not performed well. The interview was scheduled at evening, in my timezone(I am not from the US) and after an chaotic day at work I could not concentrate as I should. One advice that I would give is to focus on the problem, not on the person talking to you. I did this huge mistake, I was more preoccupied on explaining him what I wanted to do that I could not focus on getting the problem done. I kept explaining to him my every thought so I ran out of time. I am not saying to think and write the code without any explanation since you may get a hint or two from the one holding the interview. At first I started on the wrong path since I was so eager to get to the solution. Please stop, think it through, analyze your solution than expose it and try to code it. Maybe this may help someone. I wish I could have another chance. If I had stopped and think without jumping to code it, the outcome would have been another one. The day after my interview when I thought at that problem, I solved it in 5 minutes. It is too late for me but maybe this advice can help another person. Good luck to all of you applying to a Google job. PS: Stay relaxed :)

The problem was not difficult, simple algorithmic skills would get you through   Answer Question

Jun 26, 2012
---------------
I had two phone interviews, scheduled at 1PM PT and 2PM PT on a single day. In the first interview, we chatted about the projects I was working on; in the second interview, I was asked to code. The interview roughly goes okay. Later on, I was informed that a match processing was going on. After two weeks, I got another email reporting a failure to find a match. Google is a big company, and has a lot of potential candidates. So there is a chance that you may be missed if you do not have impressing stuff.

Design a counter across all Google's servers.   2 Answers

May 26, 2013
---------------
I applied through its website, and was contacted by an HR who was really nice. We talked through phone, he introduced me about Google and asked me if I had any questions regarding to the company. After that, we scheduled date for two back to back technical interviews. I was asked some questions about tree data structure and hashing, as well as some scalability questions. I didn't answer them very well. So I got reject after around 3 days. The entire process was really quick and that HR did everything great.

Find the maximum sum possible in an array of positive integers by selecting the elements in such a way that no two elements are next to each other.   3 Answers What is the best way to choose a random value in a stream? Given that each of them has a chance of occurring equally   5 Answers

Apr 3, 2012
---------------
Very prompt and quick. Phone interview was fixed easily.

Programming questions about encoding and decoding   Answer Question

Apr 24, 2012
---------------
I got an email from a Google recruiter about a week or two after submitting my application online. The recruiter asked questions about my background via email which I responded to right away. Then, a week later the same recruiter responded to my email and informed me that another recruiter will contact me soon. A week later, I was contacted for an interview. They scheduled two 45-min long interviews for me back to back. The first interview went pretty well. First he introduced himself and gave a little background of what he is working on, then started asking me some technical questions. He asked me what coding language is my favorite and why. Then he started to ask me programming questions specifically dealing with encoding and decoding. The second interview was pretty much the same format as the first, but different technical and programming questions. The level of difficulty wasn't bad but its just the fact that you are pressed on time so you have to think very quickly.

Very basic algorithm questions   Answer Question

Jul 10, 2012
---------------
They are very mature in terms of choosing software engineers, and are very efficient. I suggest doing interviews at other companies to really know and find way to overcome the potential problems (not necessarily technical) that you may encounter before submitting your resume to Google. It is absolutely not the same situation when you relax and write a program and when you are in the process of an interview where, if it is the first interview you do, you cannot be calm enough to figure out some details.

Write a simple program to generate all the valid combinations of open/close paranthesis for a given even number n. For n = 6: ((())) (()()) (())() ()(()) ()()()   12 Answers

Jul 11, 2012
---------------
A friend referred me to a recruitment consultant. I had a chat with him on the phone. He set up a technical phone interview and provided me with references to some preparation material. It took me a few weeks for me to read the books/articles (mainly on algorithms), then had the technical interview.

Given a rotated sorted array, find where it is rotated   Answer Question If you have a computer with no division operator, how do you do it   1 Answer

May 16, 2012
---------------
Interviewer called on time, was courteous and helpful

No Question
May 21, 2012
---------------
5 rounds of onsite interviews. People are not all nice and they all look busy. Interview questions are not hard but sometime it needs you to think out of the box.

Given a disk running out of space, find a way to search whole hard drive to dedup in file level. Goal is copying as less data as possible to another hard drive without losing any info. Write it with any language you want.   1 Answer n-ary tree serialize and deserialize question. Write both methods.   1 Answer Given a string representing a personal working history. Two "Absence"s will raise the alarm. Three successive "Late"s will raise the alarm. Write a method to generate all cases that will raise the alarm for n days. eg. for five days AOOOA raise alarm ALLOL won't   1 Answer Design a thread-safe circular queue using fixed size memory allocation. Any type of data could be pushed in. No overwrite is allowed. Further: Optimize performance, can you do it without lock?   Answer Question A^2+B^2+C^2+D^2= N. Given a N, print out all possible combination for ABCD. Can utilize DP?   1 Answer

Mar 25, 2012
---------------
Initial phone interview went well. I recommend refreshing your theoretical and practical algorithms and data structures skills.

DFS, Hash tables.   Answer Question

Mar 25, 2012
---------------
I did well in the 1st phone interview, but the second one seems to be harder than the 1st one

find a path between two nodes in a graph   Answer Question

Apr 23, 2012
---------------
Went in for 5 1:1 interview. All technical questions, including algorithm, data structure, system scalability, probability, coding.

Select K largest number from N   5 Answers

May 12, 2012
---------------
I uploaded my CV on google's carrer website for that specific position. More than one month after I was contacted by phone to send an email with my CV and answer to 4 questions (dealing with my personal value, as a professional as a possible google employee). A new phone call was scheduled. This phone call took 15 minutes more or less and it went as any other regular interview. After that I was told that I would be contacted in the following weeks. A month or so after I received an email saying that they liked my profile, although at the moment they don't need my competencies but that they would keep me in their recruitment database for the next 6 months.

Why do you think google should get you in board?   Answer Question

Mar 1, 2012
---------------
After applying online I was contacted by e-mail from one of their recruiters. First a general phone screen was scheduled, followed by a technical phone interview. During the phone interview I had to solve 2 programming questions using Google Docs. As the interviewer was pretty happy with my performance, I was then invited to an on-site interview, which consisted of five 45mins long 1:1 interviews. Most interviewers were really friendly and would give you hints at the right moments. The questions were challenging, but fair. Just make sure that you know your CS101 stuff, as there is a strong focus on data structures and algorithms. Moreover, make sure to prepare for system design questions as this plays a vital role at Google. Two weeks after my on-site interview I received feedback from the recruiter telling me that my application was unsuccessful and that I could try again in a year. Overall, I had a pretty good interview experience, it's just a bit frustrating that the company policy prevents the recruiter from giving you detailed feedback concerning your performance.

What data structures would you use to model a family tree? How can you determine whether two persons are related or not?   1 Answer

Apr 16, 2012
---------------
The recruiter is nice and tell you about what the complete process will be. Topcoder and a book is suggested to read. Based my experience, the topcoder and book make me feel much comfortable during the interview. And recruiter give me sufficient to prepare, until you feel you are fully ready. The interviewer is from Europe (randomly I think). So the oral communication become a problem at the end of the interview. The programming problem solving is on a shared Google Doc. But the the phone call become a problem, the interviewer refuse to use the shared doc as a communication media, which cause a n ineffective interview actually...

About Binary-tree problem and complexity.   Answer Question

Jul 3, 2012
---------------
Had a single phone interview. Asked about a range of computer science stuff and asked to solve a kind of logic problem. Has to write some code using a shared session. I was then invited in for a day of 1:1 interviews and was deemed not a strong enough candidate to proceed further.

Merge k sorted int arrays, each array containing n ints, into 1 array. And give the complexity.   2 Answers Design a class to record a lot of ints, and make it efficient to retrieve the median.   2 Answers

Jun 30, 2012
---------------
I took part in the 1:1 campus interview. There were two rounds, each round for 45 minutes. The first round began with easy question, then go difficult step by step. The second round, I was asked a quite difficult question. I fail to find out even a stupid algorithm for it.

I cannot post questions online   Answer Question

Jan 25, 2013
---------------
I have got very positive impression of how Google manages interviews. A friend of mine made a recommendation and the process started after about two weeks. We scheduled the phone screen after four weeks. The interview containes 3 programming questions and last 45 minutes. Some answers were not crystally right. After the interview I had an opportunity to ask about the company. I have got an impression that I advanced into the next level, but it was wrong. The hiring manager adviced me to take part in open source projects.

No Question
Mar 25, 2013
---------------
one telephonic interview and four onsite ones

How to design a distributed system to solve a simple logic puzzle in large scale   Answer Question

Feb 22, 2012
---------------
After applying online, a recruiter emailed me and asked for experience I had with programming. A couple days after I responded, she scheduled me for two back-to-back 1-hour interviews with Google engineers. I will honor the NDA and won't reveal the questions themselves, but they involved data structures, algorithms, and Object-Oriented programming. Unfortunately the first interviewer and a very thick accent and was difficult to understand. Other than that, the interview process went pretty smooth.

Data structures, algorithms, and OOP.   Answer Question

Jan 16, 2012
---------------
Recruiter booked 2 phone screens. Google docs were set up as a medium for coding problems. One of the interviewers seemed to want to see me fail, the other was very friendly and helpful. They ask fairly difficult coding problems, and expect you to code them on the Google doc page provided.

why do you want to work at Google   1 Answer

May 30, 2012
---------------
First is a phone screen, then got invited for onsite.

Merge two sorted arrays   1 Answer Two find the lowest common parent for two nodes in a BST   2 Answers

Dec 19, 2011
---------------
I applied online through their careers page. After a few weeks I was contacted about a phone interview and had the phone interview and found out the result within another week. They called me personally to reject me, which was pretty nice I guess. They didn't really want to know anything about my current job or anything I've worked on before. They asked me to tell them what it's like being on a team. Nothing more specific than that. Then I was asked some questions about how I would design a server architecture for serving Google maps images. Unfortunately, I've really only built desktop apps before, so my answers were probably a little higher level than they were looking for. Then I was asked to explain how quick sort and merge sort worked. I was mostly prepared to explain merge sort, but my quick sort explanation was pretty terrible. I was also asked a programming question about counting bits in an integer that I totally bombed until the interviewer gave me a pretty big hint.

Explain how quick sort and merge sort work   1 Answer

May 12, 2012
---------------
Their questions about lossless compression. I had to code the solution. But the interviewer seemed to not prepared well and pay any attention when I was coding.

They asked about the lossless and lossy compression of an image with points.   Answer Question

Mar 4, 2012
---------------
There are two phone interviews, each of them lasts 45min. The first one is quite easy, how to merge two sorted arrays. However, you need to come up with different solutions and then compare the time complexity.The second interview is all about graph. It is a pity I have not prepared this part before. So failed...

How to merge twe sorted arrays into a new sorted one?   1 Answer

Mar 23, 2012
---------------
There are two back-to-back 45min technical interviews by fellow software engineers. Did well on the first but not the second.

How to inorder traverse binary tree without recursion?   1 Answer

Jun 3, 2012
---------------
Two phone interviews. And an additional host interview.

In a sorted matrix (sorted by rows and columns), find an element.   Answer Question

Dec 18, 2011
---------------
This interview is about Google. I know there are lots of sites about Google out there, and I've probably browsed through each of those. I had a phone interview with Google a few days back... and my experience was surprisingly pleasant compared to many others. The recruiters were very warm in their communications. Interviewers were decent too. They don't ask ridiculous questions in the phone interviews. All they look for is whether you are a legitimate candidate. They know very well about your strengths... and you will not asked anything outside of that comfort zone. * You only need to know what YOU claim to know * They'll probe various parts of your resume to check if you have exaggerated anything. There'll be some simple questions on data structures. I'm not a CS student, but even I could understand what they were looking for. So, all you CS folks out there, please keep your cool and take a relaxed interview.

What is the biggest software project that you have worked on and how.   1 Answer Some areas they will definitely touch -- OOP, strings, and data structures   1 Answer

Mar 23, 2012
---------------
There are two back-to-back 45min technical interviews by fellow software engineers. Did well on the first but not the second.

How to inorder traverse binary tree without recursion?   1 Answer

Jun 3, 2012
---------------
Two phone interviews. And an additional host interview.

In a sorted matrix (sorted by rows and columns), find an element.   Answer Question

Dec 18, 2011
---------------
This interview is about Google. I know there are lots of sites about Google out there, and I've probably browsed through each of those. I had a phone interview with Google a few days back... and my experience was surprisingly pleasant compared to many others. The recruiters were very warm in their communications. Interviewers were decent too. They don't ask ridiculous questions in the phone interviews. All they look for is whether you are a legitimate candidate. They know very well about your strengths... and you will not asked anything outside of that comfort zone. * You only need to know what YOU claim to know * They'll probe various parts of your resume to check if you have exaggerated anything. There'll be some simple questions on data structures. I'm not a CS student, but even I could understand what they were looking for. So, all you CS folks out there, please keep your cool and take a relaxed interview.

What is the biggest software project that you have worked on and how.   1 Answer Some areas they will definitely touch -- OOP, strings, and data structures   1 Answer

Mar 7, 2012
---------------
Two phone interviews, had to write code in real time. The interviewers were very friendly.

I was given a number of intervals on the integer number line and had to write a program in Java that takes two sets of intervals and creates a set of intervals that combines them.   Answer Question

May 9, 2013
---------------
I was initially contacted by a recruiter through LinkedIn in June of 2011, during the middle of my graduate degree. The actual pre-interview process took place in November. This included one initial phone interview by an HR representative, followed by two phone screens by current software engineers to test my aptitude. I did not pass the initial screen.

Screening question involving the drawing of an ascii-art maze of arbitrary size. 45 minutes long.   Answer Question

Aug 27, 2015
---------------
I applied through my university. I got emailed by a recruiter who wanted to arrange a phone screen based on my resume. That consisted of mostly simple questions to gauge your fit and make sure you're not completely ignorant. There was one brief coding question at the end where they give you a link and you have to type the code whiel yoru interviewer views it. That went well, got invited to an on-site at the Waterloo office. After 4 of those interviews, which were quite challenging, I got an offer two weeks later. Expect lots of algorithm and coding questions, some on design and other concepts.

Given a tree, write two methods, one to serialize it and another to deserialize it   Answer Question

Feb 5, 2012
---------------
two 45min phone interviews all about technology, algorithm, data structure 1. Compare HashTable and Binary Tree(pros and cons, why use binary tree in some place, the time complexity of insert, delete of hashtable and binarytree) 2. favorite sorting algorithm and why, advantages 3. find the longest prefix abcde abf abdf 4. last internship 5. dictionary = [hello, world, top, pot, nice], source = [opt] => output = [top, opt] First sort every element in the dictionary and source, then compare.

1. Compare HashTable and Binary Tree(pros and cons, why use binary tree in some place, the time complexity of insert, delete of hashtable and binarytree)   Answer Question 2. favorite sorting algorithm and why, advantages   Answer Question

Feb 3, 2012
---------------
two phone calls. each lasts 45 minutes. they asked my background written on the resume, the projects in my undergraduate. also, they asked algorithm puzzles about graph theory, string processing. they also tested my knowledge in C++. They asked me to write a bunch of lines of code to process a simple algorithm.

algorithm of graphic theory   Answer Question

Oct 25, 2011
---------------
First of all, a very well-prepared resume has to be sent to a friend or a person who is familiar to you if you want to be called on earlier. 2nd, Phone screening test will be set by your recruiter if he finds your resume more approachable than others with respect to the job openings. Approx. 1 hr of test and the questions are somewhat descriptive. 3rd, If you are lucky enough, then wait for some days to hear from your recruiter the news you expect most. Be ready for the On-Site interview hurdle... --now you'll face 3-4 1-on-1 interviews. --you'll be asked to write down a solution to the algorithmic problem just given to you that must be 100% correct. Your interviewer may also ask you about the critical cases where your solution may get stuck. So try to be well-prepared about debugging on paper and pencil. --one system architecture problem and some more miscellaneous questions about google may be asked also. --Strategy for approaching problems: small examples, corner cases. brute force, clarify question, think aloud, do not freeze. Still stuck? try binary search, hashing, or dynamic programming. Finally, after the interview- --write a little thank you note --be patient - normally it takes a long time to hear back. Be Happy and Successful in interviews!

Given two numbers m and n, write a method to return the first number r that is divisible by both (e.g., the least common multiple).   2 Answers

Feb 15, 2014
---------------
I asked a friend at Goolge to pass on my resume. I got a phone call from a recruiter who asked me some questions about my experience and scheduled a screening interview. I then came in for a 1 hour interview, all technical questions not too difficult. That same day I was told I passed and we scheduled a full day on interviews. The interview day was made up out of 5 one hour interviews each with a different interviewer, one had an additional engineer observing the interview as part of their interview training process. The day was structured 3 interviews before lunch and 2 after. For lunch one of the engeneers took me out for lunch, this wasn't called an interview but of course it essentially was one, it simply wasn't structured and I wasn't asked to write code. The 5 interviews each centered arround one technical question, usually requiring writing code on paper or on a google doc. For several weeks after the interview I couldn't get a definitive answer, until finally I was told they filled up their quota for the year, and I should contact them next year, (in two months), or they could refer me to offices over seas. I took another offer. Two years later I was called up again, by a recruiter from google, I turned him down.

How would you implement the try/finally construct in C++?   3 Answers

Nov 1, 2011
---------------
I got the interview through a Google recruiter who contacted me based on a resume submission on Google career website. The recruiter did a basic screening where he went over my background and the current projects I am working on and to clarify any questions I have about working at google. I gave 2 phone interviews where there were questions on CS fundamentals and coding on a shared google doc.

Game of Life - write a function to calculate next state of the board based on current state   5 Answers You have a n number of cities. Lets say city 1 has some information that needs to be sent to all other n-1 cities using minimal cost. Cost between each pair of cities is given. any number of cities can transmit the information once they receive the information but the overall total cost should be minimum   6 Answers

Nov 9, 2011
---------------
Had an Interview on the Google Pittsburgh office. The Pittsburgh office is relative new and some of the inside structures are still under construction. They have two 1 on 1 interviews, all technical for software engineering positions. Each lasted 45 minutes. Very few resume questions, almost directly whiteboard coding. The questions you would gonna get depend on the specific interviewer. According to my feedback from my classmates and my own experience, some just got very easy ones(simple sorting) and some got really bad ones(as bad as you can imagine). There was only was big question but they would asked more and deeper around the topic.

Write the binary search.   1 Answer Analyze quick sort.   1 Answer

Nov 23, 2011
---------------
Sent in my CV and cover letter by email. Invited to take a phone interview after a week. Then 3 days later, invited to a second phone interview. First one was infact, harder for me.

Given a matrix of 0s and 1s, write code to get all the different ways of getting from a given cell to another, such that you can't walk through any of the cells with 0s in them.   4 Answers

Dec 7, 2011
---------------
There was two phone interviews. Each interviewees asked one coding problem. The interviewer coded on Google document and discussed with interviewees on phone.

How to find the max number of a shift buffer queue. For instance, there is an array like 5, 6,8,11,1,2, how to find the max number, which is 11 in this example.   10 Answers Judge if a Sudoku solution is right.   7 Answers

Oct 27, 2011
---------------
1 on campus (at college) interview with 2 guys, and 1 onsite interview. they scheduled a phone interview with me and asked me to code in google docs since i accidentally missed one of the on campus interviews. they walked me through the problems when i got stuck, and were very nice about everything.

explain binary search, running time, when is it advantageous   1 Answer

Nov 14, 2011
---------------
Got contacted by the Google representative after applying online and accepted the on-campus interview. Went to the interview the next day and was really nervous about the immense pressure coming from the instant coding that is required for such interview. Interview consisted of two back to back interviews with developers at Google and was again really stressful.

Reverse all the words in a string   5 Answers

Nov 17, 2011
---------------
This is an on-campus interview for new grads, and I got it from the career resource center of my university. The interview process consists two 1-to-1 interviews. Both of them almost start directly with technical questions and last for 45 min. each. The interview is quite general so you don't know which department the interviewer may from. The questions may range form basic programming questions to advance topics such as database or real-world applications.

Describe what you will do to enhance the indexing performance of the map service.   Answer Question

Feb 2, 2012
---------------
Two back-to-back 45-minute technical phone interviews. Each takes 45 minutes.

describe the recent project you have done.   Answer Question describe breadth first search   Answer Question

Feb 23, 2012
---------------
I submited the application online. Then they contacted with me in about 2 weeks and scheduled 2 phone interviews. Each lasted 45 minutes. During the interviews, there are all coding questions. They are all about implementing a class to solve actual problems. The most important data structure I think is the hash table, because all the problems are finally using a hash table structure to improve the performance.

Implement a function boolean matches(String text, String pattern) to find match pattern in the string, pattern can be seperated but the order of letters in pattern cannot be changed.   3 Answers Implement an interface to statistics the frequency of new value added.   2 Answers

Oct 12, 2011
---------------
Google always makes you feel happy at the interview process, but at last you still got the thank you letter

Design a database system for a global company like KFC   Answer Question

Oct 3, 2011
---------------
The interview started with interviewer saying lets start with a "warm up question" and asked me the question regarding find the maximum contiguous block sum in array of ints. This problem is called Maximum contiguous sub sequence sum problem. Anyways if you know algorithms you will know that this is "not" an easy problem if you have never seen it before and hence cannot be a warm up problem. But it needs intelligence to think that.. anyways.. it pizzed me off.. I answered the question in 5 min and wrote the code as I had already seen it before... Now the interviewer is like ..ohh.. this is too fast .. how can you do it so soon.. have you seen it before.. I was like .. you said its warm up.. . etc etc.. so thats the state of Google .. anyways.. he asked me another difficult one LRU-cache.. I answered that one too .. but by this time he was looking for reasons not to select me.. so finally he found the reason . . i used map instead of hash_map.. You guys can decide about how much sense this interview process makes.. somehow I feel that the people who are doing phone screens aren't fit enough to conduct interviews.. they might be very good at writing code but they are not in any way great at knowing what to look for in a prospective employee.. I think they should be screened before allowing them to conduct interviews.. I am not sure if there is some training for this that they have to undergo.. to check if they can speak English properly etc etc..

Maximum contiguous sub sequence sum problem.   2 Answers LRU-cache   1 Answer

Jan 16, 2012
---------------
I was contacted by an in-house recruiter. After a short phone call with her, a phone screen was set up. The phone screen took approximately 1 hour. I was only asked one question (very technical CS related), which I had to code in a shared Google doc. After I was finished, I had a chance to ask the other person questions. A few hours after the phone screen was finished I received a call from my recruiter... they wanted to set up a 1:1 interview in Mountain View, CA. The Mountain View interview lasted an entire day. The day was scheduled as such: 1:1 interview 1, 1:1 interview 2, lunch with my phone screen interviewer, 1:1 interview 3, 1:1 interview 4. Each interview (and lunch) took about 1 hour. The questions ranged from semi-advanced CS topics to probability and statistics. They emailed me about a week after the onsite interview to let me know that they weren't going forward with me.

Questions related to probability and statistics.   Answer Question

Sep 14, 2011
---------------
First answered basic questions via email than I had two technical phone Interviews. The first interviewer asked very basic questions. The second one answered more difficult questions, I thought I answered them all well but I had some trouble on the probability questions. Nevertheless he seamed sufficiently impressed. Yet, a week latter I received a very generic and unhelpful rejection. I have no idea if they really don't have a position for me, or if I failed the technical screening. Since I thought I did well on the technical phone Interviews, but was still rejected with no idea of why, I am giving this a negative review.

Google asked that I did not review any specific of the questions asked.   Answer Question

Sep 15, 2011
---------------
Got simple OO questions and a puzzle - How to find anagrams given a sentence. Interviewer was nice and professional . After a week HR calls to tell me that they liked me but the position was filled .

How to find anagrams in a sentence ?   4 Answers

Mar 10, 2012
---------------
a google engineer called me and give me an phone technical interview. firstly, introduce yourself , please focus on the working experience. second, used the good doc to catch some algorithm, data struct problems.

binary tree, from right to left   Answer Question

Aug 31, 2011
---------------
Not realize all the question is about data structure, algorithm, complexity. Not prepare well.

Deep search binary tree, what is the worst case memory requirement using Queue.   2 Answers

Mar 13, 2013
---------------
Was referred by an ex-coworker and a recruiter contacted me. I did a 45 minute phone screen about 2 weeks later, which was my preferential timing. Then, about 4 weeks later, they flew me to the site where I wanted to work for five 45-minute interviews. Most questions were related to coding or algorithms. There was one "systems design" interview at the end. The interviewers were really helpful, and I can say that although I was stressed, I had a lot of fun in the interviews. Got an offer 2-3 weeks later. The recruiter was in contact with me during that time.

The systems design question was probably the toughest.   Answer Question

May 14, 2012
---------------
I was contacted by a recruiter, who set up a technical phone screen at the earliest time convenient. The interviewer called my contact number and we conducted a 45-minute interview. He was very friendly and the recruiter was very prompt with email responses.

How to reverse the words in a sentence in place?   Answer Question All the possible ways to find the minimum values in an unsorted array.   Answer Question

Jul 21, 2011
---------------
I got a phone interview with two Software Engineers, I didn't do very well,it was my first interview and I was very nervous and that was my problem.

Create a graph class and graph traversal algorithms.   2 Answers

Oct 12, 2011
---------------
The question was to create a graph class and some traversal algorithms (bfs for example and bfs with a depth limit l). The main idea was to create a list of seen vertices and use a hash function in the graph traversal algorithms to avoid loops (asked by the interviewer) .

No Question
Jul 3, 2011
---------------
I was asked to code to for a problem. Though i was able to provide an algorithm with best time complexity, I did few mistakes in code. So my advice would be to give enough emphasis in writing code in notepad/paper apart from revising algorithms, DS etc.... concepts

Write a function to perform incremental search   2 Answers

Jun 21, 2011
---------------
Phone interview was easy and i answered all the questions. But they didnt call me for an on site interview and they said my background is not a match. If my background was not a match why did they short selected me at the first place. General questions about btree(writing code) Computing average power of last 5 minutes.

B tree   Answer Question Computing average power in last 5 minutes   Answer Question

Jul 16, 2011
---------------
After I put my resume in, a recruiter contacted me and asked me a little about my work experience and set up a phone screen with a technical person. Apparently most phone screens consist of writing code in a shared google doc file, but my interviewer said that had too much lag to be useful and instead just verbally quizzed me on things like threading and synchronization, reference counting and how Java's garbage collection works and how one would search for values in a sorted list. It wasn't very difficult. The in person interview consisted of 5 one on one sessions of coding up problems on a whiteboard. Apparently Google encourages interviewers to come up with their own coding questions, so the level of difficulty between the questions was very uneven. All the people I dealt with were helpful and very professional except for one of the in person interviewers who was unbearably full of himself and seemed more interested in convincing me of what a genius he was than of evaluating my programming skills.

Describe a data structure of your choice. (I chose a hash table) Followed up with questions about collision, Big O time of various operations.   Answer Question Write a function to convert a collection of strings into a single string and a function to convert it back.   1 Answer Given a bitmap of open and closed cells, where you can traverse through open cells but not closed ones and a set of origin points on the bitmap, write a program to find the shortest path to every reachable open cell from any of the origin points.   Answer Question

Jan 14, 2012
---------------
two 45 mins phone interviews. And then one day onsite interview, met with 5 engineers. Very selective, high expectation in CS basics and apply what you know creatively to solve challenges.

what can you do to improve Google search engine?   Answer Question

Apr 10, 2012
---------------
We met at a hotel, I had two 1:1 interviews. One of them asked me to solve a problem with a topological sort, and the other one to explain MapReduce

Given a list of sorted words, output the order of the letters used to sort them.   2 Answers

Jun 28, 2011
---------------
I was contacted by a US recruiter. We talked about a possible location and agreed on the London office. A day or 2 later an other recruiter called from Google London and the process began. The first interviewer ask some basic questions like: What is the big O notation? What is dependency injection? etc ... Took about 10 minutes. The second interview was a phone interview which took exactly 45 minutes and involved technical questions and coding on a shared Google document. Questions were related to algorithms, data structures, database design. The 3th interview was identical to the second: 45 minutes of technical questions and a Google document to write code on. One day after the 3the interview I got a call from the recruiter saying my coding was not what they wanted so the process came to an end. I had expected a little more feedback from the last call. Overall the interviewers and the recruiters were all very friendly and I had no problems with strange accents or interviewers nitpicking over irrelevant syntax.

How would you implement an LRU cache?   Answer Question More questions regarding data structures, complexity, coding and recursiveness, database design, parallel and concurrent execution in java.   Answer Question

Jul 9, 2011
---------------
The 45 minute phone screen consisted of providing algorithms to solve a couple of specific problems. The second problem built on the solution from the first one. The first one was very simple and the second took a while to solve. The last few minutes were spent discussing experiences in previous positions.

Provide a parser for a given regular language.   Answer Question

May 13, 2011
---------------
So far I have just gone through the phone screen. I was contacted via a recruiter - I wasn't really interested in working for Google, but I thought I'd give it a shot, anyway. My phone screen was awful. The person who interviewed me had a VERY thick Indian accent, which made it difficult to understand what he was saying. I felt awkward because I had to keep asking him to repeat things, etc. Right off the bat he started with a technical problem. I understood the problem, implemented the algorithm, and then explained how it could be made faster. However, he DEMANDED (seriously) that I implement it in valid C++ syntax. Ok, fine - I did my best, but there were some syntax errors because it has been at least 6 months since I've done extensive C++ programming. He spent so much time nit-picking over my brackets, etc...I was ready to scream! We burned up the entire 45 minute phone call on this one problem. I did squeeze in a question or two at the end, but that was it. I never got a chance to discuss my background, ask him extensive questions about Google - nothing. I'm not an idiot. I am young, but I have a Master's degree and a Bachelor's degree in computer science. I have a security clearance and currently work on the design of safety-critical distributed software systems. But, none of this mattered. All that mattered were my code-monkey skills. I was seething by the end of the call and had to bite my tongue several times. Thanks, but no thanks.

Describe a technical problem that you solved.   Answer Question

Jun 16, 2012
---------------
Asked me real tough problems. Mostly on algorithms. And after you figure out the algorithm you are asked to write the code as well.

Generalized tower of hanoi problem (n pegs)   1 Answer

May 9, 2011
---------------
Hiring process was straight forward with one phone interview setup. The phone interview was on whiteboard shared between interviewee and interviewer. The questions were simple related to data structures and design related. I guess my interview went well and was expecting more interviews. I was really surprised to here negative feedback from them. It was difficult for me to find out why i got a negative feedback.

related to data structures and design questions   Answer Question

May 9, 2011
---------------
Hiring process was straight forward with one phone interview setup. The phone interview was on whiteboard shared between interviewee and interviewer. The questions were simple related to data structures and design related. I guess my interview went well and was expecting more interviews. I was really surprised to here negative feedback from them. It was difficult for me to find out why i got a negative feedback.

related to data structures and design questions   Answer Question

Jun 25, 2011
---------------
The interview process usually consists of 2 phone interviews and 4 onsite interviews. Additionally I have done two post onsite phone interviews. The latter interviews were focused on scalability questions and coding skills. The process was quite good. Recruiters were responsive and supportive. Generally Google test three areas: Algorithms, Scalability and Coding. I have got positive feedback on Algorithms and Scalability. The negative part was the Coding skills part.

C++ versus Java. Reverse a singly lined list.   3 Answers How to add a counter to www.google.com to track the billionth user.   4 Answers You have a 64bit interger counter set to 0. How long it will take to overflow the counter given that you are incrementing it at 4Ghz speed.   7 Answers Comparisons of trees and hash tables. What are the tradeoffs of using one versus another.   2 Answers Quickly estimate 2^64 without using a pen/papar.   7 Answers

Apr 12, 2011
---------------
The hiring process was disappointing. The recruiter took 3 weeks to get back to me, after pinging her every Friday. The HR's planning was horrible I would definitely not do it again with the same person. The interview itself was fun and pretty easy since the algorithms within the interview is what I have done in Open Source the previous week on a project. The interview was aimed to be for 45 minutes, but we were having fun and it went till 90minutes. The interviewer knew who I was so it was easy to talk to, we had to solve a problem and we did at the end. If you get referred from Googlers, make sure you talk to these Googlers to be ready when they are requested to send a referral. If they are in vacation or no one responds to the hiring committe, they put that as negative feedback.

Design me a File System in high level design.   1 Answer Write down the algorithm of a Inorder Tree Traversal.   1 Answer

May 18, 2011
---------------
Was contacted by a recruiter, which asked basic technical screening questions. A couple of phone interviews with on-site engineers, and then a whole day on-site for some intense interviews. Overall, a very fun and challenging experience. Wouldn't mind doing it again. Staff was very professional.

Design Google news.   Answer Question Design an RPC protocol.   Answer Question

May 1, 2011
---------------
The interviews have been really pleasant. Google moved very fast. They have scheduled both phone interviews in a row and 2 days later I was invited to Mountain View for an on-site interview. On the phone interviews I was asked basic staff about C++ (ex. what does const, volatile, what type of binding is used,...) and a really nice problem that supposed a topological order algorithm.

What type of binding is used in C++. Is the only type used ?   2 Answers

May 10, 2012
---------------
The first phone view is mostly about sorting, and complexity analysis. The second phone view is about parallel computing, and DFS.

What is HTTP? Differences between HTTP and FTP?   1 Answer

May 19, 2015
---------------
I applied online, and got invited for a phone interview. The interview was more technical than I would have expected for a screening interview. Thinking about it now, I was certainly underprepared, and would recommend preparing more for technical questions (rather than only the personality / CV questions).

Summarize the key differences between 2 given languages (I think it was Java and C++)?   Answer Question

Jul 2, 2015
---------------
There was a first interview, done through phone. It took about 30 minutes and covered solution to problems by use of textbook algorightms (e.g. how to get the largest 20 numbers of a huge list by using a heap). It was a time-boxed intervew (the interviewer made it clear in advance, and told how long it would take). The phone interview was followed by in-site interviews. Those took almost a whole day. A general interview with the recruiter explaining the whole interview process, followed by two technical interviews, then lunch, then two more interviews. Despite being made by different people, . Just a few interviewers asked to explain on a whiteboard, but all of them asked me to describe verbally everything I was thinking about the problem.

Each in-site interview was the same format, heavily focused on algorithms, how are they employed an their computational and space costs in O(N) notation. A few interviewers asked to explain on a whiteboard and all of them asked me to describe everything I was thinking about the problem.   Answer Question

Feb 20, 2012
---------------
Basic computer science questions. The recruiter was very helpful and provided me with accurate information regarding the preparations for the technical interviews.

Basic data structure and software design questions   Answer Question

Sep 8, 2013
---------------
Phone interview and an on site interview

Using a 1 bit variable determine if a number is a numeric palyndrome   1 Answer

Jun 1, 2011
---------------
This is an interview for summer intern. The question is as follows: There are n coins in a line. (Assume n is even). Two players take turns to take a coin from one of the ends of the line until there are no more coins left. The player with the larger amount of money wins. Would you rather go first or second? Does it matter? Assume that you go first, describe an algorithm to compute the maximum amount of money you can win.

Please design a iterator class.   1 Answer

May 9, 2011
---------------
I met with 5 people (6 including lunch). From what I heard, Google doesn't make an offer if you get even one (strongly) negative review. I was told that Google was interviewing many people but not making many offers. I was not impressed by the way interview proceeded. It was obvious that some interviewers did not read my CV. One person was very rude and unprofessional. The recruiter was nice but was never on time for any calls. After going through an interview myself, I am not surprised to see so many negative reviews.

code game of life   Answer Question

May 9, 2011
---------------
cultural fit phone screen with onsite recruiter and technical phone screen with an engineer - engineer was friendly, but asked very deep questions (one required on the spot coding in java to implement an algorithm)- somewhat nerve wracking experience since I could tell he was writing down everything I said.

describe the issues involved in moving a database from one platform to another. assume very high transaction volume. how would you do this without disrupting applications modifying data or degrading system performance.   Answer Question

Apr 18, 2011
---------------
It is for a telephone interviews. Both give you a specific google doc link for you to write on it. Because most of the question require you to program. For the first one, a women ask several questions about my projects and research issue. Then she ask some question for my engineering background thinking. How can you get power for your laptop on a isolated island? Finally, she ask me How can you print out all the points between two given points. For the second phone interview, a man ask question mainly focused on data structure and algorithms, as well as some basic questions for C++. How to use const? How do you store all an binary search tree in file so that anyone else can reconstruct the tree only by this file. You are required to show him all the code for this question. Another programming question is finding the intersection for two sorted arrays.

Do you know Newton's Method? Can you write down the formula for that? I just don't prepare in such question so I can't remember the exact formula.   2 Answers

Apr 14, 2011
---------------
A recruiter contacted me based on an employee referral. I was invited on-site in Mountain View for a full day interview (4 rounds). The interview questions were average level of difficulty. Interviewing jitters got the better of me and I blew my chance.

Ref to the game, Boggle, given a 3x3 grid of letters represented as a char array, generate all possible word combinations. The legal character sequences are horizontally or vertically adjacent chars. So in [A, B, C; D, E, F; G, H, I], ABCFI is legal but DFH is illegal.   1 Answer Write a function that checks for valid unicode byte sequence. A unicode sequence is encoded as: - first byte contains number of subsequent bytes '1111000' means 4 subsequent data bytes - data bytes start with a '10xxxxxx'   Answer Question

Apr 19, 2012
---------------
Technical questions were very detailed and required a significant amount of time and thought.

Write a memory manager oriented towards millions of very small allocations (less than 10 bytes)   1 Answer Write an algorithm to print out all the words in a boggle board   1 Answer

Apr 20, 2011
---------------
A phone interview was scheduled. Was asked to program 2 codes then asked about my background.

On line white board coding so that the interviewer can also see as you code.   Answer Question

Apr 19, 2011
---------------
Google first held 1:1 interviews on campus which consisted of two Google engineers in two 45 minute sessions. These interviews opened with weeder questions to make sure you can actually code and then went in depth in to a data structure and algorithm question (bsts, hashes, etc.) Secondly, if you pass on campus Round 1 as described above, your name and profile get thrown into a pool of potential applicants. Then all the teams at Google sift through and find a couple they see could be fitting on their team as an intern. One team called me and asked me 45 minutes of technical questions but more on the topic of 'domain' rather than low level algorithms. By domain, they wanted to see if I knew how to scale and extend smaller applicational concepts to large scale Google sized products. Although I didn't get the offer from the first team, another team called me within 2 weeks and didn't ask a single technical question but instead immediately offered me the internship.

Discuss and implementation of flattening a binary search tree into string representations.   Answer Question Describe a method to sift through dozens of emails and rank them based on 'importance'.   Answer Question

Jul 6, 2011
---------------
It was a full day on-site interview with 5 engineers. All of them involves a coding problem on data structures. They let me choose whatever programming language I am comfortable with, and they give me hints when they see me struggling. Everyone is very friendly and knowledgeable. The office is nice and within walking distance to the hotel that they assign me. It will be great if they provide feedback on interview performance though.

Implement a stack that pops out the most frequently added item.   2 Answers

Mar 24, 2011
---------------
I submitted resume and the recruiter contacted me. After two interviews, they made decision.

print out the powset of a set. use any programming language you want.   4 Answers

Mar 24, 2011
---------------
I submitted resume and the recruiter contacted me. After two interviews, they made decision.

print out the powset of a set. use any programming language you want.   4 Answers

Feb 28, 2011
---------------
Google staff are nice, they contacted me before the phone interview to schedule for a time and they called on time. The phone interview consists of three problems. The first is behavior Q's, the second is statistical problem and the third is technical, was asked to write the code on the Google Doc.

Behavior question about my previous project   Answer Question Statistical problem about combination. Technical problem about ordering a string according to another string.   1 Answer

Sep 3, 2012
---------------
After uploading my resume on the google jobs we site. I was contacted by a recruiter to setup phone interviews. During the phone interviews i waws asked about my background, some theoretical questions, and technical questions.

I was asked to implement a software cached , and also a hash table with linear probing.   Answer Question

May 12, 2011
---------------
basic data structure questions. I was totally unprepared, so I was not selected for the job

print binary tree in level order   1 Answer

Jun 4, 2011
---------------
Initially, I was contacted by an HR person. This followed by two phone interviews. In general, I was asked about my current job, and my past activities, and I was challenged with some algorithmic and probability questions most of which were moderate in terms of difficulty level. The interviewers were very friendly.

Write a function that will return the second longest string in a list of strings. You have to do a single pass on the list.   4 Answers

Feb 3, 2011
---------------
I really started to like Google after going through the interview process. Everybody I met was smart, friendly and cool. I would see my self working with these people. I had one phone interview and 2 onsite interviews since I was local. As usual, the interview consisted of algorithm/coding on whiteboard. I think I did alright on the first onsite interview, but not good enough to meet the hiring bar, so they decided to bring me in for another round of onsite interview. That didn't go so well. The problem is actually easier on the second round, but my brain somehow shutdown during the coding phase and was stuck for a while just staring at the whiteboard. It looked really bad. The interviewer had to guide me through some basic coding logics, after which I knew I had failed.

Implement a binary tree interator class.   Answer Question

Feb 5, 2011
---------------
The process was smooth. The recruiter called and set up the interview. The interview started rough with a lot of phone static and the interviewer having cold did not help. The interviewer was co-operative and smart. Helped build up solutions. The questions were not hard. Somehow I was not in the right frame of mind to give affirmative answers. Hand waived a lot.

Design the battle ship game   1 Answer Function for int2str   2 Answers

Apr 23, 2012
---------------
Print BST by level

Print BST by level   1 Answer

Feb 19, 2012
---------------
I was contacted in September via linkedin. I sent the recruiter my CV and haven't heard from them for a month. After contacting them again the recruiter scheduled me for a phone screening. Just a week after the first phone screening I was scheduled for another one which I took a month later. Both phone screenings lasted exactly 1 hour. On the phone I talked to junior/average Engineers, who asked quite simple questions about Data Structures. After the second interview I was invited for the 1:1 meeting. Again there were some delays in organising the interview and I ended up going to Sydney in January. I was interviewed by 4 people, with increasing difficulty. The questions weren't too hard, consisting of coding, estimation and design questions. I did struggle in understanding a simple question and ended up spending a lot of time discussing the task. The impression from the interview was good, but two weeks later I got a rejection. No information was provided. Generally, you need to prepare for the interview in overall. Don't just focus on learning algorithms. Rehearse behavioural parts before going to the 1:1.

Estimate the total storage size of GMAIL   1 Answer

Jun 17, 2012
---------------
Find the kth largest element in array

Find kth largest element in array   1 Answer

Jan 7, 2011
---------------
How to sort and find median of huge size data? examples were asked to provided e.g. array, BST etc.

How to find median and insert the BCT? and the complexity of each algorithm.   Answer Question How to decide the size of a array and what to do if oversize? who to sort and find median?   Answer Question

Dec 1, 2010
---------------
The recruiter was very nice and stepped through my resume with me on the first phone interview. No technical questions. The next phone screen with a Software Engineer was scheduled a week later. Retrospectively the interview questions were not that hard except one or two tricky questions. But I had difficulties to understand my interview partner because of his accent. He wasn't friendly at all. You should refresh your knowledge about all this stuff like data structures, algorithms and so on.

What's the difference between abstract and interface in Java   3 Answers

Dec 8, 2010
---------------
Met with two Google engineers, one at a time. As an EE major I was not prepared to answer the technical questions. You must be an avid coder and understand algorithm efficiency calculations. I do not recommend a non-CS major to apply for a software engineering position unless you really do program a lot on your spare time. What I did not appreciate from the interviewer was how they had no intention of offering any positive feedback or encouragement at the end of the interview. He did not try to hide the feeling that he felt I was wasting his time.

Take an array of numbers and replace each item with the product of all the other items in the array.   5 Answers How would you sort an array of size N?   Answer Question

Oct 3, 2012
---------------
It usually startw with a short phone interview with an engineer. If that one goes ok a candidate is invited to onsite interview. The onsite interview consists of several sessions of 45 miutes each. Each session is conducted by a different person, usually they are all tech people.

You should know your data structures, algorithms and big O complexity.   Answer Question

Dec 14, 2010
---------------
human resources department is very slow. takes weeks for the final feedback. interview itself was not hard. i interviewed for software engineering position. most of the questions they asked were standard SE algorithm type questions, with only one question being very involved graph algorithm, which was not easy for an interview. if you had just taken a class on graphs, you would probably get the correct answer in 5mins - i hadn't, and in fact i have never taken a single course in computer science. everything i know about algorithms is what i learned on my own. some of the interviewers were hard to understand because of their accents. of the 7 people i met, 3 were chinese, 1 indian, 2 eastern europeans, and 1 american who was the HR dude. googleplex was not impressive. typical corporate buildings. i didn't get to see much of the campus because they locked me up for 5 hours inside a windowless room for the interviews. nothing struck me as unique or eccentric. i didn't get the impression that these people were stuck up or arrogant. only one european guy was kinda rude. lunch was free, and it was good, but it is not some gourmet sh*t that they would have you believe. also, the engineers didn't strike me as super intelligent. they were average software engineers. it's total bullsh*t that you have to be smart to work there. also, it was so easy to tell who worked in engineering and who worked in business. i don't know why i didn't get an offer, and i didn't ask. i wasn't really sure about working at google from the beginning. i didn't initiate the interview process. they did. mountain view and its adjacent areas (san jose, sunnyvale, etc.) are full of these tech sweatshops employing tons of h1b's. i don't know if i would be happy living among them - nothing against them, but they look miserable, and they only work there because they have very little choice. considering that the real estate in the area is very expensive plus all that tax in CA, i don't know if it's worth it. but they have good asian food - which was nice since it's kinda hard to find where i live.

words are given to you in "alphabetical" order (this is not the same as the usual a, b, c, d, ... order) find that order   1 Answer you have an array of stock prices. i-th element in that array represents the stock price of that day. find the buy and sell dates to maximize profit.   7 Answers

Nov 19, 2010
---------------
I have sent my CV via the standard form. Two days later a senior recruiter contacted me by phone, asked several general background questions about my background, what kind of programming experience I have, what am I looking for. She then scheduled a time for a 1:1 interview that will take place in the end of the next week. The recruiter also asked me about my favourite programming language (Python) and told that they will match an interviewer who works in it.

General stuff: e.g. what languages do you know? What is the percentage of your time that is devoted to coding   Answer Question

Dec 21, 2011
---------------
It took them awhile for them to get in touch with me after I sent my resume in. After that, they schedule two phone interviews back to back, each about 45 minutes long. Most of the questions were on data structures and recursion so make sure you review those.

Array of 100 integers from 1 to 100, shuffled. One integer is taken out, find that integer.   5 Answers Same as above but another one is taken out again. Find the two missing nubmers   11 Answers

Dec 11, 2010
---------------
The recruitment process was very quick. Once I applied online I received a call from Google offices in order to set up the interview. It consists in a phone interview during which you share a Google doc with your recruiter. It firstly ask you something about your background, your past experiences and work. Then you get into 1 or 2 questions that involve programming skills. The interviewer was very nice and patient and helped me a lot finding the solution.

Create a Java class that receives a collection of collections as parameter and provides basic iterator functions, that is next() and hasNext(). The inner structure (collection of collections) must be hidden by the external interface. The next() method must thus iterate over all the elements of all the collections, starting with the next one if the current ends.   1 Answer

Feb 20, 2011
---------------
Google's hiring process is rather slow. After finishing all the 4 rounds of interviews, I have to waited for one month and a half, to get their final decision. The interview questions are all about algorithm and data structrue. Most of them are of average difficulty. However, there are also some "bonus" problems which are very difficult. After I explain my idea, they usually ask me about the time/space complexity, and then require me to write the code on paper.

Implement a queue with a limited numer of stacks.   1 Answer

Oct 5, 2010
---------------
Google came to our college for on-campus placement and we had a written round first which comprised of 17 multiple choice questions with +1 mark for right answer and -0.25 for each wrong answer.then second round is 1:1 interview where they asked 4 questions.2 questions based on mathematics and 2 coding problems..the second round interview extended for 2 hrs..

write code to find the second shortest path between two given nodes in an undirected graph.   4 Answers

Mar 6, 2014
---------------
I applied the software engineer position in Beijing office. The office is very good. I had 1 phone interview and 4 onsite interviews. The interviewers were very nice. Luckly, I got the offer:). Google is really good company. But I just left google to pursuing my new career.

You're given a string, and you want to split it into as few strings as possible such that each string is a palindrome.   13 Answers

Oct 5, 2010
---------------
I got an initial indication of interest e-mail from a recruiter at Google who had my resume on file from a while back. He asked me a couple standard non-technical questions, and then set up a phone interview. My phone interview consisted of a couple sanity checks (e.g. "What does static mean in C++?") followed by one very tough technical question which lasted the entire interview. That went well, so they brought me onsite, where I had 5 technical interviews, all 45 minutes each. They always seemed to run up to the limit/a couple minutes over, I think they should consider making the time longer. In the middle of the day I had lunch with an engineer for an hour who fielded whatever questions I had, but they don't provide feedback, so feel free to ask anything. Each interview pretty much followed the same format -- they presented the question, asked me to go, I would say something like "Well the naive way to do it is ___, but let's look for the better way", but they would ask me to code the naive way anyway (usually). Then they would ask me how inefficient it is, how to improve it, and then ask me to code that. They wanted code (or pseudo code, if there were only a couple minutes left) in almost all situations -- they write it all down or just take a picture. At the end, each one turns it around to see if you have any questions for them. My recruiter gave me status updates along the way, letting know what my status was, and it took about 3 weeks to hear back. People: a couple interviewers seemed grumpy, like they didn't want to be there -- I didn't like that. But everybody, including the grumps, were really excited about their job, and really liked all their benefits/perks/freedom/situation in general. Advice: the interviews are tough! Expect at least a couple months to review if you're rusty; study lots of books like CLRS; do a **lot** of practice problems (TopCoder is a very good resource); practice problems on the white board (I found this especially useful); bring in your own skinny white board markers -- the ones in the interview rooms are fat and hard to write with; be prepared to talk through your solution; bring several questions for all the interviewers (even just "how do you like your job?"); for things like quicksort/mergesort/merge/binary search, you should be able to write that in your sleep while you're drunk. Finally: google for "google interview questions". I was only asked one question that I had seen online, but preparing for the others helped me for the new ones I got.

Implement a class representing a shared resource which can be read by up to N readers or written by only one writer at the same time.   Answer Question Given a number N and a very large file containing natural numbers, find the N minimum numbers in this file.   1 Answer

Dec 16, 2010
---------------
I sent out my resume online and a recruiter contacted me after a couple of days, requesting a pre-screen phone chat. He generally wanted to know more about my background and let me know about the process ahead. He, then, went ahead and scheduled my first phone screen with an engineer in ads department. The screen went OK, I guess but the interviewer seemed too insincere with the smalltalk and job related questions. I gave an answer to the question, he thought me that the answer is fine but it may not be complete and told me to email him a better one if I might find. Right after the interview, I rewrote another solution and emailed it to him. After about a week, the recruiter contacted me again to schedule a new screen. This time, I was slow and a bit erroneous to give the correct answer. What's interesting was that the recruiter was kind enough to phone me to tell me that they won't go ahead with an offer this time.

An ambiguous design problem for which they expect the interviewee to fill-in/assume various parameters.   Answer Question

Sep 24, 2010
---------------
two phone interviews, followed by an on-site interview. the first phone screen tested C systems programming knowledge, the second consisted of simple algorithm problems that required writing code on google docs shared with interviewer. great interviewers! on-site was similar but also consisted problems to do with design of systems, and back of the envelope estimation of various quantities.

Find median given two sorted arrays   2 Answers

Jun 14, 2012
---------------
The process itself was slow and took several months. There were multiple phone interviews and there were several weeks of gap between the interviews. That is the only negative feedback. Communication was good, good followups and responses to emails. The onsite interview experience was great. There was one phone interview and 5 onsite interviews.

Serialize an array of integers in an arbitrary way. Imagine a 4x4 grid where the cells are visited in a snakelike pattern.   5 Answers

Jun 18, 2011
---------------
The interviewer asked a challenging but somewhat arbitrary question on how to serialize an array in a particular way. I spent a good amount of time trying to divine the pattern but didn't get much traction with it. I don't feel like my performance on that question adequately reflected my talent-level or effectiveness building software. I'm still disappointed about the outcome to be honest.

Many questions about advanced C++ language features such as solutions to the "diamond" multiple inheritance problem and how to implement a virtual constructor.   Answer Question Also many questions about data structures, sorting algorithms, and program complexity (Big O).   Answer Question

Nov 11, 2010
---------------
It might take longer on average, but being referred by an employee usually helps speed things along. In fact, they sometimes skip the phone interview for exceptional cases. The on-site visit consists of 4-5 1:1 interviews that last for about 4-5 hours total, with lunch included. Once interviewed, your results are discussed by a panel, then passed on to HQ for further analysis/approval/offer, if applicable. Everyone I met with or spoke to was very friendly and prompt with followups. It was a gruelling but positive interview experience.

It is a phone interview. Given a box of pencils with different colors, design an algorithm to find the duplicate pencils with the same color.   1 Answer

Nov 17, 2010
---------------
phone interview and then on-site.

Btree traversal   Answer Question

Feb 2, 2011
---------------
One phone interview, after that called for onsite interview. Five guys interviewed, each for 1 hour

How to efficiently sort a pivoted array   2 Answers

Aug 26, 2010
---------------
Basically they did not review anything, no details on position or anything like that. They did not seem to care about my experience, just my knowledge of algorithms and data structures. Very confusing information provided from recruiter.

No Question
Sep 9, 2010
---------------
Two phone interviews, both were very technical. Interviewers were no so much interested in personality or background. Typically they went straight to the technical stuff. Each interview consisted of approximately 4-5 Questions. An example questions was: If you had a days worth of queries, how would you sort the queries by the letter q, and then return a sufficiently random sample of 1000 queries. How do you ensure randomness?

An example questions was: If you had a days worth of queries, how would you sort the queries by the letter q, and then return a sufficiently random sample of 1000 queries. How do you ensure randomness?   Answer Question

Sep 4, 2010
---------------
phone interview is lots of oop concept and database question onsite interview is coding coding and coding, a little bit questions about my previous interview

A database table with no primary key, and you have two rows with exactly same data; now you want to delete one row; how you going to make sure it is deleting the second one not the first one or vice versa?   1 Answer

Oct 31, 2010
---------------
asked basic algorithm data structure questions, which is not programming language specific. I think I did well, but got reject email a week later. I think they are focusing on finding people who look smart, and act smart, rather than actually smart people or people solving very difficult problem or with deep knowledge.

the complexity of data structures, actual writing the sorting code on google doc.   Answer Question

Aug 2, 2010
---------------
The whole process was excessively long, almost 4 months passed between submitting a resume, and the last round of interviews. I met a total of 7 engineers and one HR person. Half of these people had worked at the office for less than 1 year. Two of the more experienced engineers made several comments during problem sessions which seemed unprofessional to me, or as though they had fairly poor interpersonal skills. Two of the people who interviewed me seemed to be very young, these were probably the nicest people I met there, although I wondered why someone barely out of university was tasked with evaluating my skill-set. Despite providing a very detailed resume, and being present for two onsite interviews totaling over 7 hours, no one asked any serious questions about my background. All the interviewers focused on undergraduate level programming problems in the areas of data structures, graphs and a basic architecture question. There were no behavioral questions, I had no opportunities to explain my past work experience. The company has a very good reputation overall, although it didn't seem to be fully represented by the people that I met. I'm not too disappointed about not being offered a job.

I was asked questions in the areas of data structures, graphs, and architectures.   1 Answer

Sep 10, 2010
---------------
So a Google recruiter calls me and I get all excited. I'm fairly happy with my current employer, but, after all, it's Google. I talk to the recruiter and we discuss a few things like where I would like to work, etc. I ask them: - "Are you looking for any particular background - web, databases, storage, networking?" - "Oh, no no, we're just looking for generally smart people." Ok fair enough. Recruiter 1 hands me off to Recruiter 2. Recruiter 2 then hands me off to Recruiter 3 who's, finally, local to my area. Cool. Step 1: Phone interview. I talk to a "person who is around my level". They ask me to write some code using Google Docs. Pretty easy. Step 2: Round 1. Two one-hour sessions. Both times I'm given some code printouts (in language of my choice) and asked deeply technical questions. The first hour is in the form of "this code does not work, why? Ok you found a bug, fix it. Ok now when we run this, it does this, why?"... and so forth. The second hour, there's a lot more code and two interviewers at once. I was told that one of them is a "junior interviewer". The problem is, they interrupt each other asking questions as I'm trying to solve things on the board. As I try to explain a solution to interviewer 1, interviewer 2 randomly jumps in: "so what do you think the running time is?" Nice way to stress one out... At the end of that, they tell me it's ok to be a little stressed out. Step 3: Round 2. Three one-hour sessions. Now, each time, I am not given much and asked to write code on the board. I felt like I did OK with interviewers 1 and 2 but interviewer 3 was very difficult to communicate with. He would describe a board game puzzle in a very silent manner and then not really ask a question. Several times I had to ask him "uhh, I guess you would like me to write a function that does XYZ?" And then get a very subtle nod back. I wrote some stuff but couldn't tell if he was impressed, indifferent, or expected something else completely. In any case, I feel like that was the part I blew. Note that at no point were my experience, past employment accomplishments, management skills, personality, interests, or career goals ever discussed. Step 4: Wait for two weeks. After a week I emailed the recruiter and the response was "Sorry, one of the people who interviewed you had not submitted their feedback yet". I showed that to some very senior developers in my network who laughed and said "dude, that's a good sign that the organization is slowly rotting". Step 5: Get rejection voicemail. The reason being that I'm "not quite the right fit for the engineering roles we have open". Fair enough. "We're generally looking for smart people" came to mind. Thanks a lot Google! :) Step 6: Two weeks later get a phone call from Google Recruiter 4 who wants to talk to me about employment opportunities at Google! No joke! I told her I'm not "generally smart".

Given a set of shapes in 2D space, and a coordinate pair, write a routine that returns true if any of the shapes overlap the coordinate pair.   3 Answers

Aug 30, 2010
---------------
Contacted by recruiter for GIS developer position.

Given a file with a set of file names, write shell script to rename all these files.   Answer Question

Aug 7, 2010
---------------
Recruiter contacted me from an employee referral. From there, I submitted my resume and was invited for an onsite interview. The onsite consisted of a series of 1:1 sessions for about half a day and included an informal lunch. Each session started with me describing previous projects I had worked on, then moved into technical questions about algorithms/problem solving. They generally followed the normal pattern: how would solve such a problem? can you implement this in code? what's the complexity? can you do better? I left with a brief but excellent impression of Google. Those who I interacted with seemed genuinely happy to be there, and the culture appeared quite healthy. Most building entrances featured posted flyers for numerous activities, ranging from invited speakers to purely social outings.

Suppose you have an arbitrarily connected graph with n nodes. Come up with an algorithm to identify each set of connected nodes (i.e. identify all the islands in the graph). What's the complexity? Can you find a solution in O(n log n)?   5 Answers

Jul 8, 2010
---------------
I had a telephonic call which lasted for about an hour or so. The interviewer was quite helping. He introduced himself, asked about my current profile and then moved on to technical questions. I was asked two questions 1)Given a bit array matrix, find the number of groups of 1 2)Find the number of set bits in a number

Find the number f set bits in an integer   4 Answers

Jul 23, 2010
---------------
I received an email from a Google recruiter who located me on LinkedIn, inviting me to interview. I replied saying I was interested and , I had a phone call a couple of days after, with the recruiter where he explained the process to me; Essentially, it was gonna be a 45 minutes technical phone interview followed by an all-day on-site interview. I was also offered a choice of many locations, as Google seems to be hiring a lot in all their offices. A week later, the phone interview took place. The interviewer introduced himself and we had a little chat about the way the interview would be conducted. I was offered a wide choice for the language I would code my solutions in even though the recruiter had only mentioned Python and C++. And then followed the questions. After it was done, I had the opportunity to ask a few questions myself about the position and life at Google. I was then told that the initial recruiter would contact me again after the hiring committee had made its decision about taking whether to take me to the next stage.

Write a function that takes the ordinal number of a column in a spreadsheet and returns the label of that column: i.e. 1 -&gt; A 2 -&gt; B, 26 -&gt; Z, 27-&gt;AA   7 Answers What is the use of the equals() and hashCode() methods in Java?   Answer Question Implement the Iterator pattern with a class that will be constructed using two iterable objects and that will iterate through the elements of both objects   Answer Question

Jul 14, 2010
---------------
Was not hard. I think I did well. One phone interview, then onsite interviews - met with 6 engineers, 4 of them asked technical questions. But they still did not hire me, and I do not know why.

efficiently search for an input word in an unbounded dictionary.   4 Answers

Jul 8, 2010
---------------
I had a telephonic call which lasted for about an hour or so. The interviewer was quite helping. He introduced himself, asked about my current profile and then moved on to technical questions. I was asked two questions 1)Given a bit array matrix, find the number of groups of 1 2)Find the number of set bits in a number

Find the number f set bits in an integer   4 Answers

Jul 23, 2010
---------------
I received an email from a Google recruiter who located me on LinkedIn, inviting me to interview. I replied saying I was interested and , I had a phone call a couple of days after, with the recruiter where he explained the process to me; Essentially, it was gonna be a 45 minutes technical phone interview followed by an all-day on-site interview. I was also offered a choice of many locations, as Google seems to be hiring a lot in all their offices. A week later, the phone interview took place. The interviewer introduced himself and we had a little chat about the way the interview would be conducted. I was offered a wide choice for the language I would code my solutions in even though the recruiter had only mentioned Python and C++. And then followed the questions. After it was done, I had the opportunity to ask a few questions myself about the position and life at Google. I was then told that the initial recruiter would contact me again after the hiring committee had made its decision about taking whether to take me to the next stage.

Write a function that takes the ordinal number of a column in a spreadsheet and returns the label of that column: i.e. 1 -&gt; A 2 -&gt; B, 26 -&gt; Z, 27-&gt;AA   7 Answers What is the use of the equals() and hashCode() methods in Java?   Answer Question Implement the Iterator pattern with a class that will be constructed using two iterable objects and that will iterate through the elements of both objects   Answer Question

Jul 14, 2010
---------------
Was not hard. I think I did well. One phone interview, then onsite interviews - met with 6 engineers, 4 of them asked technical questions. But they still did not hire me, and I do not know why.

efficiently search for an input word in an unbounded dictionary.   4 Answers

May 7, 2013
---------------
45 min Phone screen - I was asked to implement a stack in a language of my choice - I chose C++. I was then asked about how to make it more efficient - until there were no more improvements. I was asked specific questions about my CV - such as how did I implement such and such. then I was asked to visit the office - I had 5 interviews. The first interview, I was asked how to implement a drawLine() function. And also asked how I would create test cases ( TDD ). Second interview I was asked how to find a particular record with a given date out of a set of records. Third interview I was asked a really obscure problem which I can't remember. Fourth interview was about how to implement queue behaviour with 2 stacks. Fifth interview was an algorithm for string operations. Remember to work on your HR type answers, not just technical questions.

Binary and bitshifting. I can't remember what exactly, but it was hard. Learn about negating integers and bitwise arithmetic.   Answer Question

Jun 10, 2010
---------------
Got contacted by recruiter, had to choose which location and position, I wasn't actually looking for any particular position, so software engineering it is. Phone interview was ok and then got invited for on-site interview. 5 rounds in a day, 45 minutes each. with 1 hr lunch in between. I had to write code on white board for all of them. I think it was really difficult and plus the jetlag it was really exhausting.

use mutex and semaphore to implement producer-consumer problem   2 Answers

Jul 12, 2010
---------------
First the recruiter contacted me and arranged technical phone screens. After 3 phone screens, I received an on-site interview. Five engineers interviewed me on algorithms and designs.

a. Given a function double f(double x), 0&lt;=x&lt;=1, f(x) is increasing. f(0)&lt;0, f(1)&gt;0. Find x s.t. f(x)\approx 0.   4 Answers

Jun 23, 2011
---------------
called by recruiter, then scheduled the phone interview. The phone interview include coding.. and other algorithms stuffs.

merge sort   Answer Question

Jun 24, 2011
---------------
That guy asked me a few very tough questions got to be solved by bit manipulation. And it did take me some time to think up the solution. Then I started to code and made some mistakes but he corrected me right away and I fixed the bugs in time. And we discussed something related to database design and design pattern. It is relatively easy compared to the former math questions. And in the end, we discussed some google up to date technics.

some bit manipulation question   Answer Question

Aug 3, 2011
---------------
First off I had a phone interview that lasted for 45 minutes. I also had to write code on my computer and the interviewer was able to see it. After 2 weeks was invidet for on site interview. Very technical questions.

implement dijkstras algorithm   2 Answers

May 27, 2010
---------------
I applied online and also asked a contact at Google to recommend me for a software engineer role. I had a first phone interview that was not really technical. They asked some basic questions about networking, and linux commands. They also asked why I applied and the interviewer was happy and said I would fit the job very well. We scheduled a technical phone interview with a US software engineer. The guy was not really friendly and asked some questions about algorithms. I thought it went ok although I did not feel that I was really good.

Given two arrays, print all common elements   1 Answer

Oct 27, 2011
---------------
Interviewed on 1:1 phone call, asked about previous projects and coding questions

Implementing a system for fast anagrams retrieval given a large file of words   2 Answers

Mar 22, 2012
---------------
A Google recruiter has sent me an email and asked to arrange an interview. I had two interviews. The first one did not go well, but I got another chance. Unfortunately, the other interview did not go well also, so I did not get an offer.

You are given an array that represents bills in certain currency (For example 1, 2, 5, 10) and an amount, for example 17. You should output the number of possible combinations of bills that sum to the given amount. For example, {10, 5, 2} is valid combination, {10, 5, 1 ,1} also. I did not ask questions like does the order of bills matter, i.e. is {10, 5, 2} same as {2, 10, 5}.   7 Answers Write a program that reads a file, randomizes it's lines and writes the output to another file.   Answer Question

Sep 21, 2011
---------------
Had grueling technical interviews.

How would you reverse a linked-list?   3 Answers Find the most frequent letters in a string.   3 Answers

Aug 3, 2010
---------------
The process consisted of eight technical 1:1 interviews, all concerning basic problems and algorithms in computer science. The interviews were done on-site with various software engineers and team leaders at Google. Even after finishing the interviews I still had to go through 3 committees who review the interview results and decide about an offer. Everyone was very cordial and pleasant.

How would you implement Google spelling correction algorithms?   3 Answers

Mar 29, 2010
---------------
5 questions first: two array a[], b[], you need to compute b[i] = a[0]*...a[i-1]*a[i+1]*...a[n] second: design a structure have these two functions: insert, getMedian, discuss the time complexity third: given two string a, b tell whether a is a substring of b fourth: given two string with equal length, tell whether they are anagram. fifth: you have a list of parking lots with only one empty lot, how to change the cars to a different sequence while using only that one empty lot

design a structure have these two functions: insert, getMedian, discuss the time complexity   2 Answers

Apr 28, 2010
---------------
There were two back to back phone interviews. The first interview started with some general questions - work experience, projects, etc. Then the interviewer asked me a few questions to find Big(O) of a few algorithms and a question on scalability. The second interview was a coding interview. Asked me 3 coding questions dealing with strings and trees. The code was shared on a Google doc.

Question about scalability: How would you sort a huge file - one that can not fit in memory?   2 Answers In-place string reversal.   1 Answer Given two strings (say string A, string B). Write a function that returns string A - string B.   2 Answers For a n-node tree, you are given a left leaf node pointer and right leaf node pointer. Write a function to find the number of nodes between the leaves pointed by the left and the right pointer.   1 Answer

Apr 29, 2010
---------------
Quick phone call with a recruiter to schedule two interviews. She asked me what language I'd like to be interviewed in. My recent experience is primarily C, but I was expecting to be given the sort of high-level algorithmic problems for which having to build my own data structures would be too time consuming, so I said I would prefer C++. We scheduled my interview to be two weeks away to give me some time to teach myself C++ and the STL. I was supposed to have two interviews on the same day, but one of the interviewers never called me. The one who did call was very friendly and intelligent, but I was caught a bit off guard that all he wanted to ask me were C string manipulation questions. I'd normally be good at this sort of stuff, but I was surprised and I panicked, and I didn't do as well as I should have. My other interview was rescheduled for a couple of days later. Once again, I really liked me interviewer. He asked me some higher-level algorithmic questions, with a bit of an AI bent to the them. Interesting stuff. It was interesting stuff, and I eventually came to the solutions he was looking for, but it took some prompting. In the end, I wasn't invited to a second round of interviews and I wasn't particularly surprised by this. There's a huge difference between writing your own code on your own time or even on a test in school and writing code with someone watching your every keystroke. I found it very stressful. The questions they asked me weren't particularly difficult, but the context in which I had to solve them wasn't something I was ready for.

Design and write a sudoku solver.   1 Answer

Apr 23, 2010
---------------
I initially had 2 phone interviews which went well. DS/Algorithm questions were asked. I was also made to code on Google Docs. Both the interviewers were nice. Onsite I had 3 interviews and all the problems were coding problems. I did well during onsite except for one interview. Interviewers were nice and I also liked the place very much. Everybody was nice. I think I will definitely reapply.

Given a set of integers find if two elements sum to a given value.   3 Answers

Sep 21, 2010
---------------
The phone interview went on well, the interviewer created a google doc where I can type things on it and he can actually see the code that I am writing. It is a question of printing all possible shortest paths from one point to another in a grid. I wrote in C++, not very fast but at least correct. He seems also satisfied with my solution but then they said the position is filled.

Print all shortest paths in a grid (Cartesian), given the starting and the ending point.   3 Answers

May 21, 2010
---------------
1 phone interview + 1 onsite interview all technical questions even for non-CS candidate contents: data structure, algorithm, system design The onsite interview is tough. Interviewers are polite but some of them are not very friendly... the on-site interview process is high pressure. The key goals in the interviewer is to evaluate your computer science technical ability but nothing else - which means, they basically have no interests in your other strengths. My overall impression is that the interviewers there are less experienced than the interviewers I have met in other companies.

design algorithm to reverse the content in the memory.   Answer Question

Mar 9, 2010
---------------
the phone interview was scheduled immediatelty after i had some chat with the recruiter regarding what I am doing currently and whats my background The phone interview lasted for about 45 min. I was asked 1) if you are given 2 apis as put(key, value) and get(key) and are asked to design a dictionary ..which 2 datastructures will you use...which is better one?? (time vs space) 2) There is a vector of strings. You have to form a single string out of them to be passed over the network and again when you get that single string you have to rebuild all the indivisual strings again.

which 2 datastructures will you use to design a dictionary .   2 Answers

Apr 27, 2010
---------------
They are not into specialists. Most likely they'll neglect your education/ expertise. (They don't tell/know which group you'll be assigned to if you get the job.) Interviewers don't show any interest in your career plans or what you would like to do. They have an attitude as if everyone is dying to work for Google.

Implement the overlap area of two rectangles.   Answer Question

Oct 7, 2010
---------------
Required to know a lot about algorithms. It is an IQ test and you need to choose one language you are proficient in. The interviewer will ask you to solve a problem about using this language in real time. Algorithms is the key and just skim over some syntax stuff. Again get a book on algorithms and read it.

write a program to do carry out one of your favorite sorting algorithms   1 Answer

Sep 20, 2010
---------------
Had 2 phone interviews. Sirst one went ok but didn't do quite as well on the 2nd one and was not offered a job subsequently.

Describe the TCP handshake and some questions regarding low level TCP/IP protocol details.   Answer Question Write a regular expression to match a machine's MAC address   3 Answers Write an algorithm to test if n is power of 2   3 Answers Given 2 numbers x and y, check if x is an integer power of y. For instance, x = 8, y = 2 would return true and x = 10 and y = 2 would return false since the first one is an integer power but the second isn't.   6 Answers

Jun 19, 2010
---------------
I submitted my CV online, then a HR from Google contacted me a couple of days later to arrange an onsite interview. The onsite interview is composed of 4 round. Each round is 1:1 interview and lasts 45 minutes. Interview questions mainly focus on algorithm and data structure, and Java.

Given the pre-order and in-order traversing result of a binary tree, write a function to rebuild the tree.   5 Answers How to reverse a tree   Answer Question

Jul 1, 2010
---------------
As many people know, Google is definitely one of the best companies to work in the world. Interviewers are usually intelligent and vivid. A campus recruiter contacted me via email, and made a schedule to have a talk over the phone. He checked my background and interests and explained the general interview process in Google. Here, you may realize later that it is also a part of evaluation process. He or she tries to see your enthusiasm for digging into new technologies in Google and how you can fit yourself into Google. A week later, I've got a technical interview with an engineer. We spent a half of scheduled interview time (20 min) to introduce my experiences and Q/A about some skills and notion. Then, he asked a simple coding question and requested a solution for a scalability problem.

Writing the code to convert numeric amount of price into English words.   3 Answers

Apr 5, 2010
---------------
I had a technical phone interview. They asked some questions about data structures (binary trees, hash tables, etc). They asked me to work out a coding question in a language of my choice. This is done either through a Google Doc, or over the phone. Have paper on hand, and be ready to code.

I was asked to determine whether two nodes were connected in a graph.   1 Answer

Mar 1, 2010
---------------
I was first given a questionnaire regarding my current skill set and what products/services that I'd like to work on. The recruiter stressed that they prioritize your stronger skill over your interests. Next, I was given a phone interview. First, the interviewer asked about the past projects. He then asked a few open-ended technical questions that involved data structures. I made a very silly counting mistake which the interviewer did not correct me on and realized after the interview was over. I surmised that I didn't get the offer and I was right.

Describe the design and implementation of a Tic Tac Toe game.   Answer Question Describe the implementation (along with data structures) involved in making a program that: 1. inserts a number 2. returns the median of all unique numbers   Answer Question

Mar 8, 2010
---------------
The first interviewer asked me how to output a median value from a limited input buffer by using different data structures. The second interviewer asked how to output intersection of two ordered lists. The problem are not hard but I didn't approach the answer that fast and was turned down.

Given an unlimited stream of input, output the median value at any moment.   Answer Question

Apr 10, 2012
---------------
the interview was difficult

what do you expect in work   1 Answer what's your strength   1 Answer

Mar 1, 2010
---------------
I was first given a questionnaire regarding my current skill set and what products/services that I'd like to work on. The recruiter stressed that they prioritize your stronger skill over your interests. Next, I was given a phone interview. First, the interviewer asked about the past projects. He then asked a few open-ended technical questions that involved data structures. I made a very silly counting mistake which the interviewer did not correct me on and realized after the interview was over. I surmised that I didn't get the offer and I was right.

Describe the design and implementation of a Tic Tac Toe game.   Answer Question Describe the implementation (along with data structures) involved in making a program that: 1. inserts a number 2. returns the median of all unique numbers   Answer Question

Mar 8, 2010
---------------
The first interviewer asked me how to output a median value from a limited input buffer by using different data structures. The second interviewer asked how to output intersection of two ordered lists. The problem are not hard but I didn't approach the answer that fast and was turned down.

Given an unlimited stream of input, output the median value at any moment.   Answer Question

Apr 10, 2012
---------------
the interview was difficult

what do you expect in work   1 Answer what's your strength   1 Answer

Feb 8, 2010
---------------
Applied online and was contacted by a recruiter a week later. Had a phone interview the next week, where the interviewer asked a little bit about my past experience, a few language specific questions, programming concepts/data structures and then gave me a coding assignment to mail back in an hour. Received feedback within a few days that they wanted to bring me onsite for an interview, but that was around the holidays, so we didn't schedule anything until after the holiday season. I prepared for the interview by going over the links they provided (topcoder.com, etc) and dug up my old college course notes. When I got there, I had 5 interviews and a lunch. Had to write code for all of the interviews, but the final interview was more high level and pseudocode was allowed. (The other interviews all required syntactically correct code). The interviews all took the same form - asked a little about something on my resume, a code question, analysis of your solution (big-O, etc) and a design-type question. There were no brain-teasers or trivia questions. The one thing I did not like about the interviews - but am not at all surprised at - is that they aren't too interested in selling you on the company or helping you find out what working there would be like. None of the interviewers bothered to tell me what they did, what group they worked for or what their title was. I barely had time to ask any questions and almost felt like it wasn't important to some of them to leave room for me to ask questions. I ended up asking the recruiter all the questions after the interviews were over. The recruiter kept me informed throughout the process when my application passed from hiring committee to executive hiring committee. The total turnaround time from onsite interview to offer was less than 2 weeks - which doesn't sound as long as some of the other experiences posted. Advice to anyone interviewing: know your stuff. If you don't have a solid knowledge of fundamentals - start studying. If you don't know how to analyze the running time of your algorithm - go learn. If you don't have experience coding - practice.

Implement a function, F(int n) to calculate the nth Fibonacci number.   Answer Question

Jan 24, 2010
---------------
Phone interview with an engineer. He started with an introduction of himself and the position and then we dived right into a programming problem. He shared a Google Doc with me and asked me to type in the solution. Afterwards, he asked me some Java syntax questions.

Given a string and a list of character mappings of the form (a=&gt;j,k), (d=&gt;r), (t=&gt;r,q,e,y), print out all the possible variants by applying the mapping to the original string. example: string="foo", mappings = "o=&gt;1,2", "k=&gt;d,l,w" output: foo fo1 fo2 f1o f11 f12 f2o f21 f22   Answer Question

Feb 11, 2010
---------------
asked why i wanted to work in google, what i could contribute to google. what project i had done that made me proud of and why. technical parts: I was asked to design and implement a garbage collection algorithm in any programming language. also needed to give out run time analysis.

Design and implement a garbage collection algorithm in any programming language. also needed to give out run time analysis.   Answer Question

Feb 19, 2010
---------------
5 interviewers, all are software engineers. They were nice and general algorithm/c++ questions are easy. You most of such questions online. The questions involving practical problems are tough. I stumbled over with hints from interviewers. On average I didn't impress them so i was turned down.

Millions of cache entries, each with a unique key, stored in several servers. how to sort all entries whose key falls within a specified range using Map Reduce? What if one server has a very small range of keys (say 1 to 100) and another server has a very large range of keys (say 100 to 1000000)? Sorry I don't remember the answer.   Answer Question a very long single linked list, how to find the n-th entry from the end.   3 Answers

Mar 9, 2010
---------------
Started with talking to a recruiter who asked about my current work and what groups I would be interested within Google. Next was a phone interview, which used Google Docs to write a program. The on-site interview lasted 5 hours and included lunch. The interviewers has a sheet that they took notes in, and following interviewers would refer to this sheet to determine what I had and hadn't been asked. Each interviewer had a slightly different type of question, so I didn't get any duplicate questions, and most of the interviewers left time to ask questions at the end. We had a good amount of time set aside for lunch, and this gave us time to walk around the campus and chat, so when it was all done I had a good idea of what it would be like to work for Google.

Write a class that iterates through a list of lists with methods next and hasNext. Next returns the next item in the list, and hasNext returns True or False depending on whether or not we are at the end of the list. Example: i = Iterator([[1, 2], [3, 4]]) i.next() returns 1 i.next() returns 2 i.hasNext() returns True i.next() returns 3 i.next() returns 4 i.hasNext returns False   Answer Question

May 18, 2010
---------------
I was asked how to select both the maximal and minimal number from an array of integers. First to write down the recursive algorithm, then the non-recursive. What is the minimal comparisons to find the maximal and minimal? How to prove that number is minimal? What is the best case for your algorithm.

Find the maximal and minimal number in an array of integers   6 Answers

Dec 28, 2009
---------------
One of my friends was contacted by a Google recruiter. He was not interested in interviewing at the time, but gave my name to the recruiter, who emailed me and requested my resume. After receiving my resume, the recruiter arranged a 45min technical phone interview, which consisted of one "soft" question (e.g. describe a current project and its challenges), one algorithm question, one Java question, and one design question involving concurrency. The recruiter had previously mentioned there might be a second phone interview, but I did well enough in the first phone interview that my candidacy was forwarded to the on-site interviews. I had five on-site interviews, all of which focused on technical knowledge and problem solving skills. My lunch conversation was truly a conversation and not an interview - I was the one asking all the questions! :) Although I enjoyed the interviews themselves, lunch was a wonderful experience. It was great to see all the engineers sitting together talking and interacting. There was an incredible sense of community, friendship, and potential. (that sounds pretty weird, but it's really what it felt like) I was asked only two soft questions the entire day and was not asked any brainteaser or logic puzzle questions. There was more emphasis on Java knowledge than I expected. Even though I was not asked any brainteaser or logic puzzle questions, I feel like studying them helped me improve my technique in approaching a new problem.

Describe a current project. What was challenging about it? What did you learn from it?   Answer Question What is the relationship between equals(Object o) and hashCode() in Java? How would you implement each method?   2 Answers

Jun 17, 2010
---------------
The recruiter set up the phone round. I was asked only one question. About finding the number of ways to reach from point A to point B. The interviewer was from google maps team, and thus must be dealing with variants of question each day. Another one asked me about how many days earth takes to go round the sun in one year. Another one asked me to design an ATM for kids.

How many rotations does earth make on its axis while going around the sun for one year.   7 Answers

Feb 18, 2011
---------------
Referred by a friend. One phone interview. Basic algorithm and coding question. And then onsite. Met 5 people: 4 technical interviewers and one lunch interviewer. The questions are diversified. Some asked coding and algorithm questions, some asked design questions, and some asked debugging questions. It seems they want you to have good problem solving skills. For all the questions, there are followups. The typical follow up are "what if" types. For example, what if data is too large to fit in memory, what if you have a lot of machines to solve a problem, etc.

Giving a windows size K and an array of size N, find the minimum of each window as it slides through the array.   7 Answers

Dec 15, 2009
---------------
Had a phone interview organized by applying online. Had a phone screen, which involved writing code using Google docs. The process involved going through two interviews on the phone of forty five min each. The interviewer called, asked general stuff about what I had done before and why I wanted to join Google. Gave a brief background, mentioned the projects I had done. Talked about the courses I had taken and how they would useful at Google. Went straight into the coding from there.

Implement a random number generator such that the random number generated is always in a particular range. Perform through time complexity analysis of it. How would you improve the solution.   Answer Question

Feb 13, 2010
---------------
Applied online and got a response from recruitment team saying my profile is impressive and so they would like to continue with process. 1 Phone : With not so technical person asked prev exp,skills,what I do and why to join google. 2 With Team lead of Google doc asked OOO programming questions with algorithms and complexity.

Difference between function overloading and overriding.   1 Answer how would you find maximum element in an array of numbers.   3 Answers How would you find maximum element in a list of items whcih implements comparator.   7 Answers Base class has one method takes argument as Object and inherited class overrides it to pass String as parameter.If called with argument of Object whcih method will be called   1 Answer Give us an example where you solved and handled some complex issue in current project   1 Answer

Feb 16, 2010
---------------
Typical Google interview, all day experience, met with multiple people (5 groups) with technical white board coding examples, sit down talking about different technical questions and scenarios best cases. Many were difficult to get at first, some hints were given or pointing out of areas that could be improved, and given a chance to correct them. Study algorithms, core computer science concepts, programming, best practices, everything on your resume, and hope for the best. Unfortunately you pretty much have to ace each question, even one mistake in any one of the interviews will knock you out. With the high false negative rates, you just have to accept that as they'll move on to the next candidate.

Write an iterator over multiple collections.   Answer Question

Nov 13, 2009
---------------
Initial phone screen with recruiter. A few days later, I was invited to take part in a technical phone interview of around 45 minutes - 1 hour with an engineer, asking a range of questions and coding exercises to be completed online on a shared document. Several days later I heard they wanted to progress. Came on site for a series of 5 technical interviews of around 1 hour each. I had to answer technical questions on a wide range of topics and complete coding exercises on a whiteboard.

create an algorithm for a problem, optimize it, O - notation   Answer Question

Nov 6, 2011
---------------
technical interview, basic computer science questions

Given a list L of n numbers. Write a function to return true if the sum of any two numbers of L equals to k; false otherwise.   3 Answers Find the number of connected components in a Graph.   1 Answer

Mar 14, 2011
---------------
2 Phone Screens and in on-site interview had 5 1:1 interviews.

Find if there are two members of an array that sum to 10 (10 and 0 count, but 10 alone does not).   4 Answers

Feb 12, 2010
---------------
It took over a month to get back to me after the online CV submission. The 7 weeks doesn't include that delay. Initial talk with internal recruiter followed by a phone interview after work with a guy in New York. Phone interview fairly easy, although it turned out I'd been asked questions for a different role (more UNIX-y role). After that, an on-site day with 4x45 minute interviews. 3 of which were Java based, coding on a whiteboard or paper. The other was software design, running through a proposed design for a well known Google feature. Feedback was mixed, so I was invited back for another day. Next time, 5 interviews. 4 Java-based questions on difficult algorithmic problems. 1 was more of a discussion on system design again. Most interviewers were very informal and friendly, some were more reserved although none were agressive/nasty. Feedback was good this time, but not quite good enough given how few roles they had at the time. This is likely to have changed now that they are expanding their hiring efforts again in 2010.

Develop an algorithm for finding the shortest distance between two words in a document. After the phone interview is over, take a few hours to develop a working example in C++ and send it to the manager.   11 Answers

Nov 10, 2009
---------------
Technical phone interview with two managers, focused mainly on solving various problems in the best possible runtime. Seems like they were really concerned with how fast you went through your problem-solving process and were you able to come up with an optimal solution in a "thinking on your feet" situation. They gave the impression they were looking for people that live, breathe, and eat code 24/7. HR recruiter was pretty good -- very responsive and very helpful. She definitely wasn't kidding when she said advised me to make sure I review the list of topics she sent out.

No Question
Apr 1, 2009
---------------
interviwe consists of problem solving recurrsion, algorithm one easy one tough. one open section compiler design related problem posed with some optimal algoritm and optimization each problem solving also write the c code. one search related problem word searching from billons of file, a kind of dictionary search, with distributive algorithm

integer partiontioing given N (a integer) how many ways you can write as N summation of other numbers 5 = 1+ 2 +2 = 2+ 2 + 1 = 1 + 3 +1 = 1 + 4 etc.. write C code to print every combination   6 Answers

Oct 8, 2010
---------------
I found the internship position of Google on its website, and filled the form including many aspects of my information. After about half a month, I received an email which schedules a phone interview. The email clearly said that the interview was purely technical, and it is true since after introducing himself, the interviewer assigned me an algorithm question. He was patient and nice, but the questions are very hard for me.

Given a directory with lots of files, find the files that have the same content (the file names are different). I think file format is not considered, since when I said the size of the file with the same content should be the same, the interviewer did not deny it.   2 Answers

Dec 22, 2009
---------------
Interviewer asked more algorithm type questions. Also asked few puzzles that involved thinking. Overall interview lasted for 1 hour. There were 3 such interviews. Initial interviews seemed easier, but the last interview was toughest. They also look for communication skills along with thinking ability.

How would you design Solitaire?   Answer Question

Nov 10, 2011
---------------
Questions covering all fields of computer science with multiple choice questions. Followed by a programming question to implement a tree.

Quad tree   Answer Question

May 7, 2009
---------------
Interviewed with a guy from Google. It took 50 mins... He seemed to be a C++ expert. He asked me lots of C++ questions. He also asked some general algorithm questions such as sorting, etc...

what's the your favorite sorting algorithm and explain why?   1 Answer

Apr 30, 2010
---------------
I was asked some C++ questions (malloc/polymorphism/virtual functions/etc) and then gave me a problem to write an algorithm for (find the next in a sequence of numbers). The interviewer gave me some hints along the way, but unfortunately I was stuck for a good 10 minutes on one of his hints that turned out to be a misunderstanding between us. I verbalized everything I was doing along the way to try to make things as clear as possible. I didn't get the answer correct in the end. He told me how to see where the sequence goes, but I don't understand how he would decide to use that approach. I feel like i would have no problem writing the algorithm but i don't know how he arrived at the solution. It wasn't a very positive experience overall.

Write a program to find depth of binary search tree without using recursion   2 Answers

Aug 29, 2010
---------------
First two in-person interviewers were engaged and highly animated about the work they do at Google. Both of these first two interviewers took me through the standard Google "write a search routine" and "describe how you would approach this sampling from a massive data set problem". The third in-person interviewer was just strange. First, he clearly was distracted from the interview process and felt put out by having to interview someone. He went through the motions of the standard type of "write some code to solve this problem" question. But any time I asked a question to clarify some part of the problem statement he grunted and glanced around the room wildly before stating that it was obvious. Once the hour was up, the interviewer stood up abruptly and said "I have to go" and left the room. With no instructions as a candidate I had to run after the interviewer to catch him outside the building to ask what happens next. To which he shrugged and said "Go home or go find HR." With no further information I decide that this wasn't a culture I was willing to work in.

Why am I meeting you?   2 Answers

Aug 16, 2010
---------------
There were 3 interviews scheduled in the morning. The flight from Melbourne to Sydney was also booked for the same morning. The flight got delayed and I reached Sydney only at the time the interview was to start. I reached their office which was very difficult to locate as it was on the top floor of a building with IBM on it. Interviews were doable, but I was exhausted after having woken up really early and not having eaten much in the flight and having had to rush from the airport. First interview was really bad as I had a tough time concentrating. After lunch there were 2 more interviews and I did well in bot of them. But I knew I had blown it with the first one. I didn't know they had a policy of flying people in the previous evening for early morning interviews. Kinda felt cheated.

Reverse the bits in a 32 bit integer. Write C code for that.   1 Answer Non programming. The mouse in the maze problem. Shortest paths to reach outside.   Answer Question Given a web system which gets disconnected, how would you debug it. Also where would you add resources to maximise throughput given some constraints.   Answer Question Given a statement which took an integer, incremented it by 1 and then branched to another location which you provide, implement addition of two numbers multiplication, etc using just that statement (or command).   Answer Question

Aug 11, 2010
---------------
I first received a call from Google saying I'd be having 1 round of telephonic. An Asian gentleman, obviously not acquanited with English, called me up from California. There were 2 questions, the second hard but not very clearly put, so I had difficulty answering it. His English was horrible and inaudible through the phone,made the question much harder to understand, and I had to read his mind to figure things out. All interviewers say something like "Nice talking to you"- just like this one - but it was just a formality and he was really rude. Then I was called for face-face interview, of which I had 4 rounds. The first round went well; the second was sort of OK. The big issue I had was that the interviewer kept asking for code whereas the psuedocode would have been much clearer. The third again was OK, but in the fourth I was asked a tedious maths question through which I slowly worked. In the end while my approach was right I couldn't fill in enough details to get the right number. The interviewer's attitude was also sort of discouraging. While Google interviews are famed for their depth of coverage and number of rounds, it's difficult for the candidate to guage the purpose of a question. This can only lead to further problems. And they want code immediately for everything -- whatever this may be, it certainly isn't software engineering. There is also a sort of faux cheerfulness all around.

how many golf balls could you fit into that building?   2 Answers

Jul 2, 2012
---------------
Phone interview asked standard code related questions, about object oriented code, defensive programming, etc. did well at that. one to one interview was similar but more in-depth

No Question
Aug 16, 2010
---------------
There were 3 interviews scheduled in the morning. The flight from Melbourne to Sydney was also booked for the same morning. The flight got delayed and I reached Sydney only at the time the interview was to start. I reached their office which was very difficult to locate as it was on the top floor of a building with IBM on it. Interviews were doable, but I was exhausted after having woken up really early and not having eaten much in the flight and having had to rush from the airport. First interview was really bad as I had a tough time concentrating. After lunch there were 2 more interviews and I did well in bot of them. But I knew I had blown it with the first one. I didn't know they had a policy of flying people in the previous evening for early morning interviews. Kinda felt cheated.

Reverse the bits in a 32 bit integer. Write C code for that.   1 Answer Non programming. The mouse in the maze problem. Shortest paths to reach outside.   Answer Question Given a web system which gets disconnected, how would you debug it. Also where would you add resources to maximise throughput given some constraints.   Answer Question Given a statement which took an integer, incremented it by 1 and then branched to another location which you provide, implement addition of two numbers multiplication, etc using just that statement (or command).   Answer Question

Aug 11, 2010
---------------
I first received a call from Google saying I'd be having 1 round of telephonic. An Asian gentleman, obviously not acquanited with English, called me up from California. There were 2 questions, the second hard but not very clearly put, so I had difficulty answering it. His English was horrible and inaudible through the phone,made the question much harder to understand, and I had to read his mind to figure things out. All interviewers say something like "Nice talking to you"- just like this one - but it was just a formality and he was really rude. Then I was called for face-face interview, of which I had 4 rounds. The first round went well; the second was sort of OK. The big issue I had was that the interviewer kept asking for code whereas the psuedocode would have been much clearer. The third again was OK, but in the fourth I was asked a tedious maths question through which I slowly worked. In the end while my approach was right I couldn't fill in enough details to get the right number. The interviewer's attitude was also sort of discouraging. While Google interviews are famed for their depth of coverage and number of rounds, it's difficult for the candidate to guage the purpose of a question. This can only lead to further problems. And they want code immediately for everything -- whatever this may be, it certainly isn't software engineering. There is also a sort of faux cheerfulness all around.

how many golf balls could you fit into that building?   2 Answers

Jul 2, 2012
---------------
Phone interview asked standard code related questions, about object oriented code, defensive programming, etc. did well at that. one to one interview was similar but more in-depth

Come out with an algorithm for getting the column number provided the column name in a excel sheet and vice versa. Excel has a naming convention of A,B..Z,AA,AB,AC..ZZ,AAA... This had to be converted to the column numbers. A will be 1 and AA will 27.. Also the algorithm to find the name provided column number.   13 Answers Design a data structure for LRU cache   2 Answers

Mar 19, 2009
---------------
Getting the right date and time took a long. But the experience was worth it. Both the rounds of interviews were discussions around solving a single problem. More inclined on the thinking than absolute answers.

How do you efficiently reverse the order of the words in a string?   2 Answers

Jul 27, 2010
---------------
Should be able to code well on paper. I recommend the book "Programming Interviews Exposed"

Find missing number in sum   1 Answer

Sep 3, 2010
---------------
Google has 4 interviews, each on a different topic. The interviewers don't communicate with each other, whereas, they just write down what questions they asked. Very challenging interview in general.

No Question
en't too interested in selling you on the company or helping you find out what working there would be like. None of the interviewers bothered to tell me what they did, what group they worked for or what their title was. I barely had time to ask any questions and almost felt like it wasn't important to some of them to leave room for me to ask questions. I ended up asking the recruiter all the questions after the interviews were over. The recruiter kept me informed throughout the process when my application passed from hiring committee to executive hiring committee. The total turnaround time from onsite interview to offer was less than 2 weeks - which doesn't sound as long as some of the other experiences posted. Advice to anyone interviewing: know your stuff. If you don't have a solid knowledge of fundamentals - start studying. If you don't know how to analyze the running time of your algorithm - go learn. If you don't have experience coding - practice.

Implement a function, F(int n) to calculate the nth Fibonacci number.   Answer Question

Jan 24, 2010
---------------
Phone interview with an engineer. He started with an introduction of himself and the position and then we dived right into a programming problem. He shared a Google Doc with me and asked me to type in the solution. Afterwards, he asked me some Java syntax questions.

Given a string and a list of character mappings of the form (a=&gt;j,k), (d=&gt;r), (t=&gt;r,q,e,y), print out all the possible variants by applying the mapping to the original string. example: string="foo", mappings = "o=&gt;1,2", "k=&gt;d,l,w" output: foo fo1 fo2 f1o f11 f12 f2o f21 f22   Answer Question

Feb 11, 2010
---------------
asked why i wanted to work in google, what i could contribute to google. what project i had done that made me proud of and why. technical parts: I was asked to design and implement a garbage collection algorithm in any programming language. also needed to give out run time analysis.

Design and implement a garbage collection algorithm in any programming language. also needed to give out run time analysis.   Answer Question

Feb 19, 2010
---------------
5 interviewers, all are software engineers. They were nice and general algorithm/c++ questions are easy. You most of such questions online. The questions involving practical problems are tough. I stumbled over with hints from interviewers. On average I didn't impress them so i was turned down.

Millions of cache entries, each with a unique key, stored in several servers. how to sort all entries whose key falls within a specified range using Map Reduce? What if one server has a very small range of keys (say 1 to 100) and another server has a very large range of keys (say 100 to 1000000)? Sorry I don't remember the answer.   Answer Question a very long single linked list, how to find the n-th entry from the end.   3 Answers

Mar 9, 2010
---------------
Started with talking to a recruiter who asked about my current work and what groups I would be interested within Google. Next was a phone interview, which used Google Docs to write a program. The on-site interview lasted 5 hours and included lunch. The interviewers has a sheet that they took notes in, and following interviewers would refer to this sheet to determine what I had and hadn't been asked. Each interviewer had a slightly different type of question, so I didn't get any duplicate questions, and most of the interviewers left time to ask questions at the end. We had a good amount of time set aside for lunch, and this gave us time to walk around the campus and chat, so when it was all done I had a good idea of what it would be like to work for Google.

Write a class that iterates through a list of lists with methods next and hasNext. Next returns the next item in the list, and hasNext returns True or False depending on whether or not we are at the end of the list. Example: i = Iterator([[1, 2], [3, 4]]) i.next() returns 1 i.next() returns 2 i.hasNext() returns True i.next() returns 3 i.next() returns 4 i.hasNext returns False   Answer Question

May 18, 2010
---------------
I was asked how to select both the maximal and minimal number from an array of integers. First to write down the recursive algorithm, then the non-recursive. What is the minimal comparisons to find the maximal and minimal? How to prove that number is minimal? What is the best case for your algorithm.

Find the maximal and minimal number in an array of integers   6 Answers

Dec 28, 2009
---------------
One of my friends was contacted by a Google recruiter. He was not interested in interviewing at the time, but gave my name to the recruiter, who emailed me and requested my resume. After receiving my resume, the recruiter arranged a 45min technical phone interview, which consisted of one "soft" question (e.g. describe a current project and its challenges), one algorithm question, one Java question, and one design question involving concurrency. The recruiter had previously mentioned there might be a second phone interview, but I did well enough in the first phone interview that my candidacy was forwarded to the on-site interviews. I had five on-site interviews, all of which focused on technical knowledge and problem solving skills. My lunch conversation was truly a conversation and not an interview - I was the one asking all the questions! :) Although I enjoyed the interviews themselves, lunch was a wonderful experience. It was great to see all the engineers sitting together talking and interacting. There was an incredible sense of community, friendship, and potential. (that sounds pretty weird, but it's really what it felt like) I was asked only two soft questions the entire day and was not asked any brainteaser or logic puzzle questions. There was more emphasis on Java knowledge than I expected. Even though I was not asked any brainteaser or logic puzzle questions, I feel like studying them helped me improve my technique in approaching a new problem.

Describe a current project. What was challenging about it? What did you learn from it?   Answer Question What is the relationship between equals(Object o) and hashCode() in Java? How would you implement each method?   2 Answers

Dec 17, 2009
---------------
Two 45 minute technical phone interviews back to back (45 minute gap in between). Both asked reasonable questions. Highly recommend the book Programming Interviews Exposed which the Google recruiter also recommended. At least two of the questions were almost directly taken from the book, and I would not have gotten them had I not read the book recently.

How do you delete a given node from a single linked list?   1 Answer Implement an Array iterator.   Answer Question Implement an LRU cache.   4 Answers You have a bag of random numbers which can be negative, positive or zero, and it might contain duplicates. Describe an algorithm for finding all pairs whose sum equals some value m.   1 Answer Describe how you would reverse a single linked list.   2 Answers

Jun 17, 2010
---------------
The recruiter set up the phone round. I was asked only one question. About finding the number of ways to reach from point A to point B. The interviewer was from google maps team, and thus must be dealing with variants of question each day. Another one asked me about how many days earth takes to go round the sun in one year. Another one asked me to design an ATM for kids.

How many rotations does earth make on its axis while going around the sun for one year.   7 Answers

Feb 18, 2011
---------------
Referred by a friend. One phone interview. Basic algorithm and coding question. And then onsite. Met 5 people: 4 technical interviewers and one lunch interviewer. The questions are diversified. Some asked coding and algorithm questions, some asked design questions, and some asked debugging questions. It seems they want you to have good problem solving skills. For all the questions, there are followups. The typical follow up are "what if" types. For example, what if data is too large to fit in memory, what if you have a lot of machines to solve a problem, etc.

Giving a windows size K and an array of size N, find the minimum of each window as it slides through the array.   7 Answers

Dec 15, 2009
---------------
Had a phone interview organized by applying online. Had a phone screen, which involved writing code using Google docs. The process involved going through two interviews on the phone of forty five min each. The interviewer called, asked general stuff about what I had done before and why I wanted to join Google. Gave a brief background, mentioned the projects I had done. Talked about the courses I had taken and how they would useful at Google. Went straight into the coding from there.

Implement a random number generator such that the random number generated is always in a particular range. Perform through time complexity analysis of it. How would you improve the solution.   Answer Question

Feb 13, 2010
---------------
Applied online and got a response from recruitment team saying my profile is impressive and so they would like to continue with process. 1 Phone : With not so technical person asked prev exp,skills,what I do and why to join google. 2 With Team lead of Google doc asked OOO programming questions with algorithms and complexity.

Difference between function overloading and overriding.   1 Answer how would you find maximum element in an array of numbers.   3 Answers How would you find maximum element in a list of items whcih implements comparator.   7 Answers Base class has one method takes argument as Object and inherited class overrides it to pass String as parameter.If called with argument of Object whcih method will be called   1 Answer Give us an example where you solved and handled some complex issue in current project   1 Answer

Feb 16, 2010
---------------
Typical Google interview, all day experience, met with multiple people (5 groups) with technical white board coding examples, sit down talking about different technical questions and scenarios best cases. Many were difficult to get at first, some hints were given or pointing out of areas that could be improved, and given a chance to correct them. Study algorithms, core computer science concepts, programming, best practices, everything on your resume, and hope for the best. Unfortunately you pretty much have to ace each question, even one mistake in any one of the interviews will knock you out. With the high false negative rates, you just have to accept that as they'll move on to the next candidate.

Write an iterator over multiple collections.   Answer Question

Nov 13, 2009
---------------
Initial phone screen with recruiter. A few days later, I was invited to take part in a technical phone interview of around 45 minutes - 1 hour with an engineer, asking a range of questions and coding exercises to be completed online on a shared document. Several days later I heard they wanted to progress. Came on site for a series of 5 technical interviews of around 1 hour each. I had to answer technical questions on a wide range of topics and complete coding exercises on a whiteboard.

create an algorithm for a problem, optimize it, O - notation   Answer Question

Nov 6, 2011
---------------
technical interview, basic computer science questions

Given a list L of n numbers. Write a function to return true if the sum of any two numbers of L equals to k; false otherwise.   3 Answers Find the number of connected components in a Graph.   1 Answer

Mar 14, 2011
---------------
2 Phone Screens and in on-site interview had 5 1:1 interviews.

Find if there are two members of an array that sum to 10 (10 and 0 count, but 10 alone does not).   4 Answers

Feb 12, 2010
---------------
It took over a month to get back to me after the online CV submission. The 7 weeks doesn't include that delay. Initial talk with internal recruiter followed by a phone interview after work with a guy in New York. Phone interview fairly easy, although it turned out I'd been asked questions for a different role (more UNIX-y role). After that, an on-site day with 4x45 minute interviews. 3 of which were Java based, coding on a whiteboard or paper. The other was software design, running through a proposed design for a well known Google feature. Feedback was mixed, so I was invited back for another day. Next time, 5 interviews. 4 Java-based questions on difficult algorithmic problems. 1 was more of a discussion on system design again. Most interviewers were very informal and friendly, some were more reserved although none were agressive/nasty. Feedback was good this time, but not quite good enough given how few roles they had at the time. This is likely to have changed now that they are expanding their hiring efforts again in 2010.

Develop an algorithm for finding the shortest distance between two words in a document. After the phone interview is over, take a few hours to develop a working example in C++ and send it to the manager.   11 Answers

Nov 10, 2009
---------------
Technical phone interview with two managers, focused mainly on solving various problems in the best possible runtime. Seems like they were really concerned with how fast you went through your problem-solving process and were you able to come up with an optimal solution in a "thinking on your feet" situation. They gave the impression they were looking for people that live, breathe, and eat code 24/7. HR recruiter was pretty good -- very responsive and very helpful. She definitely wasn't kidding when she said advised me to make sure I review the list of topics she sent out.

No Question
Nov 10, 2009
---------------
Technical phone interview with two managers, focused mainly on solving various problems in the best possible runtime. Seems like they were really concerned with how fast you went through your problem-solving process and were you able to come up with an optimal solution in a "thinking on your feet" situation. They gave the impression they were looking for people that live, breathe, and eat code 24/7. HR recruiter was pretty good -- very responsive and very helpful. She definitely wasn't kidding when she said advised me to make sure I review the list of topics she sent out.

Develop an algorithm for finding the shortest distance between two words in a document. After the phone interview is over, take a few hours to develop a working example in C++ and send it to the manager.   11 Answers

Feb 11, 2010
---------------
They picked up my resume from the career services office at school. There was a phone interview where I spoke a bit about my research... I mentioned that I was looking for a research position as opposed to a software engg position and they said they'd clear me for the first round and forward my resume to research (in NY)

BST running time (creation/updating/traversal)   Answer Question

Jul 6, 2010
---------------
Initial 10 minute phone screen from the recruiter to make sure you are not a joker wasting their time. Two 1-hour interviews with random engineers from Google (no particular relationship to the target position.) All-day on-site interview with five different engineers from the group you are applying to. They put you in a meeting room with white boards on the walls and the interviewers come to you. Also there is some time given for lunch. Takes a while (weeks) to hear back from them after the on-site.

Lot of questions that I was not prepared for about obscure graph algorithms from one interviewer.   Answer Question

Apr 1, 2009
---------------
interviwe consists of problem solving recurrsion, algorithm one easy one tough. one open section compiler design related problem posed with some optimal algoritm and optimization each problem solving also write the c code. one search related problem word searching from billons of file, a kind of dictionary search, with distributive algorithm

integer partiontioing given N (a integer) how many ways you can write as N summation of other numbers 5 = 1+ 2 +2 = 2+ 2 + 1 = 1 + 3 +1 = 1 + 4 etc.. write C code to print every combination   6 Answers

Oct 8, 2010
---------------
I found the internship position of Google on its website, and filled the form including many aspects of my information. After about half a month, I received an email which schedules a phone interview. The email clearly said that the interview was purely technical, and it is true since after introducing himself, the interviewer assigned me an algorithm question. He was patient and nice, but the questions are very hard for me.

Given a directory with lots of files, find the files that have the same content (the file names are different). I think file format is not considered, since when I said the size of the file with the same content should be the same, the interviewer did not deny it.   2 Answers

Dec 22, 2009
---------------
Interviewer asked more algorithm type questions. Also asked few puzzles that involved thinking. Overall interview lasted for 1 hour. There were 3 such interviews. Initial interviews seemed easier, but the last interview was toughest. They also look for communication skills along with thinking ability.

How would you design Solitaire?   Answer Question

Nov 10, 2011
---------------
Questions covering all fields of computer science with multiple choice questions. Followed by a programming question to implement a tree.

Quad tree   Answer Question

May 7, 2009
---------------
Interviewed with a guy from Google. It took 50 mins... He seemed to be a C++ expert. He asked me lots of C++ questions. He also asked some general algorithm questions such as sorting, etc...

what's the your favorite sorting algorithm and explain why?   1 Answer

Apr 30, 2010
---------------
I was asked some C++ questions (malloc/polymorphism/virtual functions/etc) and then gave me a problem to write an algorithm for (find the next in a sequence of numbers). The interviewer gave me some hints along the way, but unfortunately I was stuck for a good 10 minutes on one of his hints that turned out to be a misunderstanding between us. I verbalized everything I was doing along the way to try to make things as clear as possible. I didn't get the answer correct in the end. He told me how to see where the sequence goes, but I don't understand how he would decide to use that approach. I feel like i would have no problem writing the algorithm but i don't know how he arrived at the solution. It wasn't a very positive experience overall.

Write a program to find depth of binary search tree without using recursion   2 Answers

Aug 29, 2010
---------------
First two in-person interviewers were engaged and highly animated about the work they do at Google. Both of these first two interviewers took me through the standard Google "write a search routine" and "describe how you would approach this sampling from a massive data set problem". The third in-person interviewer was just strange. First, he clearly was distracted from the interview process and felt put out by having to interview someone. He went through the motions of the standard type of "write some code to solve this problem" question. But any time I asked a question to clarify some part of the problem statement he grunted and glanced around the room wildly before stating that it was obvious. Once the hour was up, the interviewer stood up abruptly and said "I have to go" and left the room. With no instructions as a candidate I had to run after the interviewer to catch him outside the building to ask what happens next. To which he shrugged and said "Go home or go find HR." With no further information I decide that this wasn't a culture I was willing to work in.

Why am I meeting you?   2 Answers

Aug 11, 2010
---------------
I first received a call from Google saying I'd be having 1 round of telephonic. An Asian gentleman, obviously not acquanited with English, called me up from California. There were 2 questions, the second hard but not very clearly put, so I had difficulty answering it. His English was horrible and inaudible through the phone,made the question much harder to understand, and I had to read his mind to figure things out. All interviewers say something like "Nice talking to you"- just like this one - but it was just a formality and he was really rude. Then I was called for face-face interview, of which I had 4 rounds. The first round went well; the second was sort of OK. The big issue I had was that the interviewer kept asking for code whereas the psuedocode would have been much clearer. The third again was OK, but in the fourth I was asked a tedious maths question through which I slowly worked. In the end while my approach was right I couldn't fill in enough details to get the right number. The interviewer's attitude was also sort of discouraging. While Google interviews are famed for their depth of coverage and number of rounds, it's difficult for the candidate to guage the purpose of a question. This can only lead to further problems. And they want code immediately for everything -- whatever this may be, it certainly isn't software engineering. There is also a sort of faux cheerfulness all around.

how many golf balls could you fit into that building?   2 Answers

Jul 2, 2012
---------------
Phone interview asked standard code related questions, about object oriented code, defensive programming, etc. did well at that. one to one interview was similar but more in-depth

Come out with an algorithm for getting the column number provided the column name in a excel sheet and vice versa. Excel has a naming convention of A,B..Z,AA,AB,AC..ZZ,AAA... This had to be converted to the column numbers. A will be 1 and AA will 27.. Also the algorithm to find the name provided column number.   13 Answers Design a data structure for LRU cache   2 Answers

Mar 19, 2009
---------------
Getting the right date and time took a long. But the experience was worth it. Both the rounds of interviews were discussions around solving a single problem. More inclined on the thinking than absolute answers.

How do you efficiently reverse the order of the words in a string?   2 Answers

Jul 27, 2010
---------------
Should be able to code well on paper. I recommend the book "Programming Interviews Exposed"

Find missing number in sum   1 Answer

Sep 3, 2010
---------------
Google has 4 interviews, each on a different topic. The interviewers don't communicate with each other, whereas, they just write down what questions they asked. Very challenging interview in general.

No Question
